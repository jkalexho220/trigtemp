//==============================================================================
// TEST TRIGGER SCRIPT
//==============================================================================


void main(void)
{
   trEventSetHandler(0,  "eventHandler");
   trEventSetHandler(1,  "eventHandler");
   trEventSetHandler(72,  "eventHandler");
   trEventSetHandler(5,  "eventHandler");
   trEventSetHandler(6,  "eventHandler");
   trEventSetHandler(7,  "eventHandler");
   trEventSetHandler(8,  "eventHandler");
   trEventSetHandler(80,  "eventHandler");
   trEventSetHandler(12,  "eventHandler");
   trEventSetHandler(9,  "eventHandler");
   trEventSetHandler(10,  "eventHandler");
   trEventSetHandler(11,  "eventHandler");
   trEventSetHandler(13,  "eventHandler");
   trEventSetHandler(15,  "eventHandler");
   trEventSetHandler(17,  "eventHandler");
   trEventSetHandler(16,  "eventHandler");
   trEventSetHandler(20,  "eventHandler");
   trEventSetHandler(19,  "eventHandler");
   trEventSetHandler(18,  "eventHandler");
   trEventSetHandler(25,  "eventHandler");
   trEventSetHandler(21,  "eventHandler");
   trEventSetHandler(24,  "eventHandler");
   trEventSetHandler(23,  "eventHandler");
   trEventSetHandler(30,  "eventHandler");
   trEventSetHandler(29,  "eventHandler");
   trEventSetHandler(3,  "eventHandler");
   trEventSetHandler(32,  "eventHandler");
   trEventSetHandler(31,  "eventHandler");
   trEventSetHandler(34,  "eventHandler");
   trEventSetHandler(33,  "eventHandler");
   trEventSetHandler(36,  "eventHandler");
   trEventSetHandler(35,  "eventHandler");
   trEventSetHandler(38,  "eventHandler");
   trEventSetHandler(37,  "eventHandler");
   trEventSetHandler(40,  "eventHandler");
   trEventSetHandler(39,  "eventHandler");
   trEventSetHandler(14,  "eventHandler");
   trEventSetHandler(44,  "eventHandler");
   trEventSetHandler(42,  "eventHandler");
   trEventSetHandler(46,  "eventHandler");
   trEventSetHandler(45,  "eventHandler");
   trEventSetHandler(195,  "eventHandler");
   trEventSetHandler(62,  "eventHandler");
   trEventSetHandler(22,  "eventHandler");
   trEventSetHandler(48,  "eventHandler");
   trEventSetHandler(49,  "eventHandler");
   trEventSetHandler(50,  "eventHandler");
   trEventSetHandler(52,  "eventHandler");
   trEventSetHandler(51,  "eventHandler");
   trEventSetHandler(54,  "eventHandler");
   trEventSetHandler(53,  "eventHandler");
   trEventSetHandler(56,  "eventHandler");
   trEventSetHandler(55,  "eventHandler");
   trEventSetHandler(58,  "eventHandler");
   trEventSetHandler(57,  "eventHandler");
   trEventSetHandler(47,  "eventHandler");
   trEventSetHandler(63,  "eventHandler");
   trEventSetHandler(64,  "eventHandler");
   trEventSetHandler(65,  "eventHandler");
   trEventSetHandler(67,  "eventHandler");
   trEventSetHandler(66,  "eventHandler");
   trEventSetHandler(69,  "eventHandler");
   trEventSetHandler(68,  "eventHandler");
   trEventSetHandler(71,  "eventHandler");
   trEventSetHandler(70,  "eventHandler");
   trEventSetHandler(2,  "eventHandler");
   trEventSetHandler(41,  "eventHandler");
   trEventSetHandler(4,  "eventHandler");
   trEventSetHandler(73,  "eventHandler");
   trEventSetHandler(75,  "eventHandler");
   trEventSetHandler(74,  "eventHandler");
   trEventSetHandler(78,  "eventHandler");
   trEventSetHandler(76,  "eventHandler");
   trEventSetHandler(77,  "eventHandler");
   trEventSetHandler(81,  "eventHandler");
   trEventSetHandler(82,  "eventHandler");
   trEventSetHandler(83,  "eventHandler");
   trEventSetHandler(60,  "eventHandler");
   trEventSetHandler(85,  "eventHandler");
   trEventSetHandler(84,  "eventHandler");
   trEventSetHandler(88,  "eventHandler");
   trEventSetHandler(90,  "eventHandler");
   trEventSetHandler(89,  "eventHandler");
   trEventSetHandler(92,  "eventHandler");
   trEventSetHandler(91,  "eventHandler");
   trEventSetHandler(86,  "eventHandler");
   trEventSetHandler(95,  "eventHandler");
   trEventSetHandler(94,  "eventHandler");
   trEventSetHandler(93,  "eventHandler");
   trEventSetHandler(96,  "eventHandler");
   trEventSetHandler(97,  "eventHandler");
   trEventSetHandler(98,  "eventHandler");
   trEventSetHandler(99,  "eventHandler");
   trEventSetHandler(100,  "eventHandler");
   trEventSetHandler(101,  "eventHandler");
   trEventSetHandler(102,  "eventHandler");
   trEventSetHandler(103,  "eventHandler");
   trEventSetHandler(104,  "eventHandler");
   trEventSetHandler(105,  "eventHandler");
   trEventSetHandler(106,  "eventHandler");
   trEventSetHandler(107,  "eventHandler");
   trEventSetHandler(108,  "eventHandler");
   trEventSetHandler(109,  "eventHandler");
   trEventSetHandler(110,  "eventHandler");
   trEventSetHandler(111,  "eventHandler");
   trEventSetHandler(112,  "eventHandler");
   trEventSetHandler(113,  "eventHandler");
   trEventSetHandler(114,  "eventHandler");
   trEventSetHandler(115,  "eventHandler");
   trEventSetHandler(116,  "eventHandler");
   trEventSetHandler(117,  "eventHandler");
   trEventSetHandler(118,  "eventHandler");
   trEventSetHandler(119,  "eventHandler");
   trEventSetHandler(120,  "eventHandler");
   trEventSetHandler(87,  "eventHandler");
   trEventSetHandler(121,  "eventHandler");
   trEventSetHandler(122,  "eventHandler");
   trEventSetHandler(125,  "eventHandler");
   trEventSetHandler(123,  "eventHandler");
   trEventSetHandler(126,  "eventHandler");
   trEventSetHandler(127,  "eventHandler");
   trEventSetHandler(128,  "eventHandler");
   trEventSetHandler(129,  "eventHandler");
   trEventSetHandler(130,  "eventHandler");
   trEventSetHandler(131,  "eventHandler");
   trEventSetHandler(132,  "eventHandler");
   trEventSetHandler(133,  "eventHandler");
   trEventSetHandler(135,  "eventHandler");
   trEventSetHandler(151,  "eventHandler");
   trEventSetHandler(138,  "eventHandler");
   trEventSetHandler(139,  "eventHandler");
   trEventSetHandler(136,  "eventHandler");
   trEventSetHandler(134,  "eventHandler");
   trEventSetHandler(141,  "eventHandler");
   trEventSetHandler(140,  "eventHandler");
   trEventSetHandler(142,  "eventHandler");
   trEventSetHandler(144,  "eventHandler");
   trEventSetHandler(143,  "eventHandler");
   trEventSetHandler(145,  "eventHandler");
   trEventSetHandler(124,  "eventHandler");
   trEventSetHandler(148,  "eventHandler");
   trEventSetHandler(150,  "eventHandler");
   trEventSetHandler(149,  "eventHandler");
   trEventSetHandler(146,  "eventHandler");
   trEventSetHandler(152,  "eventHandler");
   trEventSetHandler(153,  "eventHandler");
   trEventSetHandler(155,  "eventHandler");
   trEventSetHandler(154,  "eventHandler");
   trEventSetHandler(156,  "eventHandler");
   trEventSetHandler(158,  "eventHandler");
   trEventSetHandler(157,  "eventHandler");
   trEventSetHandler(159,  "eventHandler");
   trEventSetHandler(160,  "eventHandler");
   trEventSetHandler(161,  "eventHandler");
   trEventSetHandler(163,  "eventHandler");
   trEventSetHandler(162,  "eventHandler");
   trEventSetHandler(164,  "eventHandler");
   trEventSetHandler(165,  "eventHandler");
   trEventSetHandler(182,  "eventHandler");
   trEventSetHandler(167,  "eventHandler");
   trEventSetHandler(168,  "eventHandler");
   trEventSetHandler(166,  "eventHandler");
   trEventSetHandler(169,  "eventHandler");
   trEventSetHandler(170,  "eventHandler");
   trEventSetHandler(171,  "eventHandler");
   trEventSetHandler(172,  "eventHandler");
   trEventSetHandler(174,  "eventHandler");
   trEventSetHandler(173,  "eventHandler");
   trEventSetHandler(175,  "eventHandler");
   trEventSetHandler(176,  "eventHandler");
   trEventSetHandler(177,  "eventHandler");
   trEventSetHandler(179,  "eventHandler");
   trEventSetHandler(178,  "eventHandler");
   trEventSetHandler(180,  "eventHandler");
   trEventSetHandler(181,  "eventHandler");
   trEventSetHandler(137,  "eventHandler");
   trEventSetHandler(183,  "eventHandler");
   trEventSetHandler(185,  "eventHandler");
   trEventSetHandler(186,  "eventHandler");
   trEventSetHandler(188,  "eventHandler");
   trEventSetHandler(187,  "eventHandler");
   trEventSetHandler(189,  "eventHandler");
   trEventSetHandler(184,  "eventHandler");
   trEventSetHandler(191,  "eventHandler");
   trEventSetHandler(190,  "eventHandler");
   trEventSetHandler(147,  "eventHandler");
   trEventSetHandler(192,  "eventHandler");
   trEventSetHandler(196,  "eventHandler");
   trEventSetHandler(194,  "eventHandler");
   trEventSetHandler(193,  "eventHandler");
   trEventSetHandler(79,  "eventHandler");
   trEventSetHandler(197,  "eventHandler");
   trEventSetHandler(202,  "eventHandler");
   trEventSetHandler(198,  "eventHandler");
   trEventSetHandler(203,  "eventHandler");
   trEventSetHandler(204,  "eventHandler");
   trEventSetHandler(205,  "eventHandler");
   trEventSetHandler(206,  "eventHandler");
   trEventSetHandler(207,  "eventHandler");
   trEventSetHandler(208,  "eventHandler");
   trEventSetHandler(209,  "eventHandler");
   trEventSetHandler(200,  "eventHandler");
   trEventSetHandler(211,  "eventHandler");
   trEventSetHandler(210,  "eventHandler");
   trEventSetHandler(212,  "eventHandler");
   trEventSetHandler(214,  "eventHandler");
   trEventSetHandler(216,  "eventHandler");
   trEventSetHandler(215,  "eventHandler");
   trEventSetHandler(218,  "eventHandler");
   trEventSetHandler(217,  "eventHandler");
   trEventSetHandler(221,  "eventHandler");
   trEventSetHandler(213,  "eventHandler");
   trEventSetHandler(222,  "eventHandler");
   trEventSetHandler(226,  "eventHandler");
   trEventSetHandler(201,  "eventHandler");
   trEventSetHandler(224,  "eventHandler");
   trEventSetHandler(225,  "eventHandler");
   trEventSetHandler(219,  "eventHandler");
   trEventSetHandler(227,  "eventHandler");
   trEventSetHandler(228,  "eventHandler");
   trEventSetHandler(231,  "eventHandler");
   trEventSetHandler(229,  "eventHandler");
   trEventSetHandler(232,  "eventHandler");
   trEventSetHandler(230,  "eventHandler");
   trEventSetHandler(220,  "eventHandler");
   trEventSetHandler(223,  "eventHandler");
   trEventSetHandler(233,  "eventHandler");
   trEventSetHandler(234,  "eventHandler");
   trEventSetHandler(235,  "eventHandler");
   trEventSetHandler(236,  "eventHandler");
   trEventSetHandler(237,  "eventHandler");
   trEventSetHandler(238,  "eventHandler");
   trEventSetHandler(239,  "eventHandler");
   trEventSetHandler(199,  "eventHandler");
   trEventSetHandler(240,  "eventHandler");
   trEventSetHandler(241,  "eventHandler");
   trEventSetHandler(242,  "eventHandler");
   trEventSetHandler(243,  "eventHandler");
   trEventSetHandler(244,  "eventHandler");
   trEventSetHandler(247,  "eventHandler");
   trEventSetHandler(245,  "eventHandler");
   trEventSetHandler(248,  "eventHandler");
   trEventSetHandler(249,  "eventHandler");
   trEventSetHandler(250,  "eventHandler");
   trEventSetHandler(255,  "eventHandler");
   trEventSetHandler(253,  "eventHandler");
   trEventSetHandler(251,  "eventHandler");
   trEventSetHandler(256,  "eventHandler");
   trEventSetHandler(254,  "eventHandler");
   trEventSetHandler(257,  "eventHandler");
   trEventSetHandler(252,  "eventHandler");
   trEventSetHandler(258,  "eventHandler");
   trEventSetHandler(259,  "eventHandler");
   trEventSetHandler(261,  "eventHandler");
   trEventSetHandler(263,  "eventHandler");
   trEventSetHandler(262,  "eventHandler");
   trEventSetHandler(264,  "eventHandler");
   trEventSetHandler(260,  "eventHandler");
   trEventSetHandler(265,  "eventHandler");
   trEventSetHandler(266,  "eventHandler");
   trEventSetHandler(270,  "eventHandler");
   trEventSetHandler(271,  "eventHandler");
   trEventSetHandler(267,  "eventHandler");
   trEventSetHandler(272,  "eventHandler");
   trEventSetHandler(268,  "eventHandler");
   trEventSetHandler(269,  "eventHandler");
   trEventSetHandler(274,  "eventHandler");
   trEventSetHandler(273,  "eventHandler");
   trEventSetHandler(275,  "eventHandler");
   trEventSetHandler(246,  "eventHandler");
   trEventSetHandler(276,  "eventHandler");
   trEventSetHandler(278,  "eventHandler");
   trEventSetHandler(280,  "eventHandler");
   trEventSetHandler(279,  "eventHandler");
   trEventSetHandler(281,  "eventHandler");
   trEventSetHandler(277,  "eventHandler");
   trEventSetHandler(282,  "eventHandler");
   trEventSetHandler(284,  "eventHandler");
   trEventSetHandler(283,  "eventHandler");
   trEventSetHandler(285,  "eventHandler");
   trEventSetHandler(59,  "eventHandler");
   trEventSetHandler(286,  "eventHandler");
   trEventSetHandler(293,  "eventHandler");
   trEventSetHandler(291,  "eventHandler");
   trEventSetHandler(287,  "eventHandler");
   trEventSetHandler(295,  "eventHandler");
   trEventSetHandler(288,  "eventHandler");
   trEventSetHandler(296,  "eventHandler");
   trEventSetHandler(289,  "eventHandler");
   trEventSetHandler(297,  "eventHandler");
   trEventSetHandler(304,  "eventHandler");
   trEventSetHandler(294,  "eventHandler");
   trEventSetHandler(299,  "eventHandler");
   trEventSetHandler(300,  "eventHandler");
   trEventSetHandler(301,  "eventHandler");
   trEventSetHandler(302,  "eventHandler");
   trEventSetHandler(303,  "eventHandler");
   trEventSetHandler(298,  "eventHandler");
   trEventSetHandler(305,  "eventHandler");
   trEventSetHandler(308,  "eventHandler");
   trEventSetHandler(306,  "eventHandler");
   trEventSetHandler(309,  "eventHandler");
   trEventSetHandler(310,  "eventHandler");
   trEventSetHandler(307,  "eventHandler");
   trEventSetHandler(290,  "eventHandler");
   trEventSetHandler(312,  "eventHandler");
   trEventSetHandler(313,  "eventHandler");
   trEventSetHandler(314,  "eventHandler");
   trEventSetHandler(311,  "eventHandler");
   trEventSetHandler(315,  "eventHandler");
   trEventSetHandler(317,  "eventHandler");
   trEventSetHandler(319,  "eventHandler");
   trEventSetHandler(318,  "eventHandler");
   trEventSetHandler(320,  "eventHandler");
   trEventSetHandler(321,  "eventHandler");
   trEventSetHandler(316,  "eventHandler");
   trEventSetHandler(322,  "eventHandler");
   trEventSetHandler(323,  "eventHandler");
   trEventSetHandler(324,  "eventHandler");
   trEventSetHandler(325,  "eventHandler");
   trEventSetHandler(326,  "eventHandler");
   trEventSetHandler(327,  "eventHandler");
   trEventSetHandler(330,  "eventHandler");
   trEventSetHandler(328,  "eventHandler");
   trEventSetHandler(292,  "eventHandler");
   trEventSetHandler(331,  "eventHandler");
   trEventSetHandler(332,  "eventHandler");
   trEventSetHandler(333,  "eventHandler");
   trEventSetHandler(334,  "eventHandler");
   trEventSetHandler(335,  "eventHandler");
   trEventSetHandler(336,  "eventHandler");
   trEventSetHandler(339,  "eventHandler");
   trEventSetHandler(337,  "eventHandler");
   trEventSetHandler(341,  "eventHandler");
   trEventSetHandler(343,  "eventHandler");
   trEventSetHandler(340,  "eventHandler");
   trEventSetHandler(344,  "eventHandler");
   trEventSetHandler(342,  "eventHandler");
   trEventSetHandler(345,  "eventHandler");
   trEventSetHandler(346,  "eventHandler");
   trEventSetHandler(348,  "eventHandler");
   trEventSetHandler(351,  "eventHandler");
   trEventSetHandler(349,  "eventHandler");
   trEventSetHandler(352,  "eventHandler");
   trEventSetHandler(350,  "eventHandler");
   trEventSetHandler(347,  "eventHandler");
   trEventSetHandler(353,  "eventHandler");
   trEventSetHandler(354,  "eventHandler");
   trEventSetHandler(356,  "eventHandler");
   trEventSetHandler(355,  "eventHandler");
   trEventSetHandler(357,  "eventHandler");
   trEventSetHandler(358,  "eventHandler");
   trEventSetHandler(360,  "eventHandler");
   trEventSetHandler(362,  "eventHandler");
   trEventSetHandler(361,  "eventHandler");
   trEventSetHandler(363,  "eventHandler");
   trEventSetHandler(364,  "eventHandler");
   trEventSetHandler(359,  "eventHandler");
   trEventSetHandler(365,  "eventHandler");
   trEventSetHandler(367,  "eventHandler");
   trEventSetHandler(369,  "eventHandler");
   trEventSetHandler(368,  "eventHandler");
   trEventSetHandler(370,  "eventHandler");
   trEventSetHandler(371,  "eventHandler");
   trEventSetHandler(374,  "eventHandler");
   trEventSetHandler(376,  "eventHandler");
   trEventSetHandler(375,  "eventHandler");
   trEventSetHandler(378,  "eventHandler");
   trEventSetHandler(372,  "eventHandler");
   trEventSetHandler(379,  "eventHandler");
   trEventSetHandler(377,  "eventHandler");
   trEventSetHandler(380,  "eventHandler");
   trEventSetHandler(373,  "eventHandler");
   trEventSetHandler(338,  "eventHandler");
   trEventSetHandler(381,  "eventHandler");
   trEventSetHandler(383,  "eventHandler");
   trEventSetHandler(387,  "eventHandler");
   trEventSetHandler(384,  "eventHandler");
   trEventSetHandler(388,  "eventHandler");
   trEventSetHandler(385,  "eventHandler");
   trEventSetHandler(389,  "eventHandler");
   trEventSetHandler(386,  "eventHandler");
   trEventSetHandler(390,  "eventHandler");
   trEventSetHandler(329,  "eventHandler");
   trEventSetHandler(395,  "eventHandler");
   trEventSetHandler(391,  "eventHandler");
   trEventSetHandler(393,  "eventHandler");
   trEventSetHandler(392,  "eventHandler");
   trEventSetHandler(382,  "eventHandler");
   trEventSetHandler(396,  "eventHandler");
   trEventSetHandler(397,  "eventHandler");
   trEventSetHandler(398,  "eventHandler");
   trEventSetHandler(399,  "eventHandler");
   trEventSetHandler(400,  "eventHandler");
   trEventSetHandler(401,  "eventHandler");
   trEventSetHandler(403,  "eventHandler");
   trEventSetHandler(402,  "eventHandler");
   trEventSetHandler(405,  "eventHandler");
   trEventSetHandler(404,  "eventHandler");
   trEventSetHandler(394,  "eventHandler");
   trEventSetHandler(406,  "eventHandler");
   trEventSetHandler(366,  "eventHandler");
   trEventSetHandler(407,  "eventHandler");
   trEventSetHandler(43,  "eventHandler");
   trEventSetHandler(61,  "eventHandler");
   trEventSetHandler(408,  "eventHandler");
   trEventSetHandler(411,  "eventHandler");
   trEventSetHandler(409,  "eventHandler");
   trEventSetHandler(412,  "eventHandler");
   trEventSetHandler(413,  "eventHandler");
   trEventSetHandler(414,  "eventHandler");
   trEventSetHandler(415,  "eventHandler");
   trEventSetHandler(416,  "eventHandler");
   trEventSetHandler(417,  "eventHandler");
   trEventSetHandler(418,  "eventHandler");
   trEventSetHandler(419,  "eventHandler");
   trEventSetHandler(420,  "eventHandler");
   trEventSetHandler(421,  "eventHandler");
   trEventSetHandler(422,  "eventHandler");
   trEventSetHandler(423,  "eventHandler");
   trEventSetHandler(424,  "eventHandler");
   trEventSetHandler(425,  "eventHandler");
   trEventSetHandler(426,  "eventHandler");
   trEventSetHandler(427,  "eventHandler");
   trEventSetHandler(428,  "eventHandler");
   trEventSetHandler(429,  "eventHandler");
   trEventSetHandler(430,  "eventHandler");
   trEventSetHandler(431,  "eventHandler");
   trEventSetHandler(432,  "eventHandler");
   trEventSetHandler(433,  "eventHandler");
   trEventSetHandler(434,  "eventHandler");
   trEventSetHandler(435,  "eventHandler");
   trEventSetHandler(410,  "eventHandler");
   trEventSetHandler(436,  "eventHandler");
   trEventSetHandler(437,  "eventHandler");
   trEventSetHandler(438,  "eventHandler");
   trEventSetHandler(439,  "eventHandler");
   trEventSetHandler(440,  "eventHandler");
   trEventSetHandler(441,  "eventHandler");
   trEventSetHandler(442,  "eventHandler");
   trEventSetHandler(443,  "eventHandler");
   trEventSetHandler(444,  "eventHandler");
   trEventSetHandler(445,  "eventHandler");
   trEventSetHandler(446,  "eventHandler");
   trEventSetHandler(449,  "eventHandler");
   trEventSetHandler(447,  "eventHandler");
   trEventSetHandler(450,  "eventHandler");
   trEventSetHandler(451,  "eventHandler");
   trEventSetHandler(453,  "eventHandler");
   trEventSetHandler(452,  "eventHandler");
   trEventSetHandler(454,  "eventHandler");
   trEventSetHandler(455,  "eventHandler");
   trEventSetHandler(457,  "eventHandler");
   trEventSetHandler(459,  "eventHandler");
   trEventSetHandler(461,  "eventHandler");
   trEventSetHandler(460,  "eventHandler");
   trEventSetHandler(458,  "eventHandler");
   trEventSetHandler(456,  "eventHandler");
   trEventSetHandler(463,  "eventHandler");
   trEventSetHandler(462,  "eventHandler");
   trEventSetHandler(464,  "eventHandler");
   trEventSetHandler(465,  "eventHandler");
   trEventSetHandler(466,  "eventHandler");
   trEventSetHandler(470,  "eventHandler");
   trEventSetHandler(467,  "eventHandler");
   trEventSetHandler(468,  "eventHandler");
   trEventSetHandler(469,  "eventHandler");
   trEventSetHandler(471,  "eventHandler");
   trEventSetHandler(473,  "eventHandler");
   trEventSetHandler(474,  "eventHandler");
   trEventSetHandler(472,  "eventHandler");
   trEventSetHandler(476,  "eventHandler");
   trEventSetHandler(475,  "eventHandler");
   trEventSetHandler(477,  "eventHandler");
   trEventSetHandler(478,  "eventHandler");
   trEventSetHandler(479,  "eventHandler");
   trEventSetHandler(480,  "eventHandler");
   trEventSetHandler(481,  "eventHandler");
   trEventSetHandler(482,  "eventHandler");
   trEventSetHandler(483,  "eventHandler");
   trEventSetHandler(485,  "eventHandler");
   trEventSetHandler(484,  "eventHandler");
   trEventSetHandler(486,  "eventHandler");
   trEventSetHandler(488,  "eventHandler");
   trEventSetHandler(487,  "eventHandler");
   trEventSetHandler(490,  "eventHandler");
   trEventSetHandler(489,  "eventHandler");
   trEventSetHandler(491,  "eventHandler");
   trEventSetHandler(492,  "eventHandler");
   trEventSetHandler(493,  "eventHandler");
   trEventSetHandler(494,  "eventHandler");
   trEventSetHandler(496,  "eventHandler");
   trEventSetHandler(497,  "eventHandler");
   trEventSetHandler(499,  "eventHandler");
   trEventSetHandler(500,  "eventHandler");
   trEventSetHandler(498,  "eventHandler");
   trEventSetHandler(495,  "eventHandler");
   trEventSetHandler(501,  "eventHandler");
   trEventSetHandler(448,  "eventHandler");
   trEventSetHandler(502,  "eventHandler");
   trEventSetHandler(504,  "eventHandler");
   trEventSetHandler(503,  "eventHandler");
   trEventSetHandler(505,  "eventHandler");
   trEventSetHandler(507,  "eventHandler");
   trEventSetHandler(506,  "eventHandler");
   trEventSetHandler(508,  "eventHandler");
   trEventSetHandler(509,  "eventHandler");
   trEventSetHandler(510,  "eventHandler");
   trEventSetHandler(511,  "eventHandler");
   trEventSetHandler(512,  "eventHandler");
   trEventSetHandler(513,  "eventHandler");
   trEventSetHandler(514,  "eventHandler");
   trEventSetHandler(515,  "eventHandler");
   trEventSetHandler(516,  "eventHandler");
   trEventSetHandler(517,  "eventHandler");
   trEventSetHandler(518,  "eventHandler");
   trEventSetHandler(519,  "eventHandler");
   trEventSetHandler(520,  "eventHandler");
   trEventSetHandler(522,  "eventHandler");
   trEventSetHandler(521,  "eventHandler");
   trEventSetHandler(523,  "eventHandler");
   trEventSetHandler(26,  "eventHandler");
   trEventSetHandler(27,  "eventHandler");
   trEventSetHandler(28,  "eventHandler");
}

void eventHandler(int eventID=-1)
{
   switch(eventID)
   {
   case 0:
   {
      xsEnableRule("_Cin_Z_01");
      trEcho("Trigger enabling rule Cin_Z_01");
      break;
   }
   case 1:
   {
      xsEnableRule("_Cin_Z_02");
      trEcho("Trigger enabling rule Cin_Z_02");
      break;
   }
   case 72:
   {
      xsEnableRule("_Cin_Z_04_end");
      trEcho("Trigger enabling rule Cin_Z_04_end");
      break;
   }
   case 5:
   {
      xsEnableRule("_left");
      trEcho("Trigger enabling rule left");
      break;
   }
   case 6:
   {
      xsEnableRule("_right");
      trEcho("Trigger enabling rule right");
      break;
   }
   case 7:
   {
      xsEnableRule("_up");
      trEcho("Trigger enabling rule up");
      break;
   }
   case 8:
   {
      xsEnableRule("_down");
      trEcho("Trigger enabling rule down");
      break;
   }
   case 80:
   {
      xsEnableRule("_move_to_ace");
      trEcho("Trigger enabling rule move_to_ace");
      break;
   }
   case 12:
   {
      xsEnableRule("_down_shift");
      trEcho("Trigger enabling rule down_shift");
      break;
   }
   case 9:
   {
      xsEnableRule("_left_shift");
      trEcho("Trigger enabling rule left_shift");
      break;
   }
   case 10:
   {
      xsEnableRule("_right_shift");
      trEcho("Trigger enabling rule right_shift");
      break;
   }
   case 11:
   {
      xsEnableRule("_up_shift");
      trEcho("Trigger enabling rule up_shift");
      break;
   }
   case 13:
   {
      xsEnableRule("_x");
      trEcho("Trigger enabling rule x");
      break;
   }
   case 15:
   {
      xsEnableRule("_Bomb_00");
      trEcho("Trigger enabling rule Bomb_00");
      break;
   }
   case 17:
   {
      xsEnableRule("_clear_screen_00");
      trEcho("Trigger enabling rule clear_screen_00");
      break;
   }
   case 16:
   {
      xsEnableRule("_Bomb_02_change_ballista");
      trEcho("Trigger enabling rule Bomb_02_change_ballista");
      break;
   }
   case 20:
   {
      xsEnableRule("_Bomb_03_off");
      trEcho("Trigger enabling rule Bomb_03_off");
      break;
   }
   case 19:
   {
      xsEnableRule("_clear_screen_01");
      trEcho("Trigger enabling rule clear_screen_01");
      break;
   }
   case 18:
   {
      xsEnableRule("_Bomb_01_vision_sfx");
      trEcho("Trigger enabling rule Bomb_01_vision_sfx");
      break;
   }
   case 25:
   {
      xsEnableRule("_Die_00");
      trEcho("Trigger enabling rule Die_00");
      break;
   }
   case 21:
   {
      xsEnableRule("_Die_01_for_real");
      trEcho("Trigger enabling rule Die_01_for_real");
      break;
   }
   case 24:
   {
      xsEnableRule("_Die_03_reset");
      trEcho("Trigger enabling rule Die_03_reset");
      break;
   }
   case 23:
   {
      xsEnableRule("_Die_02_end");
      trEcho("Trigger enabling rule Die_02_end");
      break;
   }
   case 30:
   {
      xsEnableRule("_Shoot_spread_ace_01");
      trEcho("Trigger enabling rule Shoot_spread_ace_01");
      break;
   }
   case 29:
   {
      xsEnableRule("_Shoot_spread_ace_02");
      trEcho("Trigger enabling rule Shoot_spread_ace_02");
      break;
   }
   case 3:
   {
      xsEnableRule("_Stars_move");
      trEcho("Trigger enabling rule Stars_move");
      break;
   }
   case 32:
   {
      xsEnableRule("_enemy_line_s_01");
      trEcho("Trigger enabling rule enemy_line_s_01");
      break;
   }
   case 31:
   {
      xsEnableRule("_enemy_line_s_02");
      trEcho("Trigger enabling rule enemy_line_s_02");
      break;
   }
   case 34:
   {
      xsEnableRule("_enemy_siege_s_01");
      trEcho("Trigger enabling rule enemy_siege_s_01");
      break;
   }
   case 33:
   {
      xsEnableRule("_enemy_siege_s_02");
      trEcho("Trigger enabling rule enemy_siege_s_02");
      break;
   }
   case 36:
   {
      xsEnableRule("_enemy_basic_s1");
      trEcho("Trigger enabling rule enemy_basic_s1");
      break;
   }
   case 35:
   {
      xsEnableRule("_enemy_basic_s2");
      trEcho("Trigger enabling rule enemy_basic_s2");
      break;
   }
   case 38:
   {
      xsEnableRule("_enemy_siege_s1");
      trEcho("Trigger enabling rule enemy_siege_s1");
      break;
   }
   case 37:
   {
      xsEnableRule("_enemy_siege_s2");
      trEcho("Trigger enabling rule enemy_siege_s2");
      break;
   }
   case 40:
   {
      xsEnableRule("_lasers_off");
      trEcho("Trigger enabling rule lasers_off");
      break;
   }
   case 39:
   {
      xsEnableRule("_lasers_on");
      trEcho("Trigger enabling rule lasers_on");
      break;
   }
   case 14:
   {
      xsEnableRule("_eescape");
      trEcho("Trigger enabling rule eescape");
      break;
   }
   case 44:
   {
      xsEnableRule("_Shoot_laser_01");
      trEcho("Trigger enabling rule Shoot_laser_01");
      break;
   }
   case 42:
   {
      xsEnableRule("_Shoot_laser_02");
      trEcho("Trigger enabling rule Shoot_laser_02");
      break;
   }
   case 46:
   {
      xsEnableRule("_lasers_s1");
      trEcho("Trigger enabling rule lasers_s1");
      break;
   }
   case 45:
   {
      xsEnableRule("_lasers_s2");
      trEcho("Trigger enabling rule lasers_s2");
      break;
   }
   case 195:
   {
      xsEnableRule("_choose_01");
      trEcho("Trigger enabling rule choose_01");
      break;
   }
   case 62:
   {
      xsEnableRule("_choose_04_extra");
      trEcho("Trigger enabling rule choose_04_extra");
      break;
   }
   case 22:
   {
      xsEnableRule("_game_over_01");
      trEcho("Trigger enabling rule game_over_01");
      break;
   }
   case 48:
   {
      xsEnableRule("_game_over_02");
      trEcho("Trigger enabling rule game_over_02");
      break;
   }
   case 49:
   {
      xsEnableRule("_game_over_03");
      trEcho("Trigger enabling rule game_over_03");
      break;
   }
   case 50:
   {
      xsEnableRule("_game_over_04");
      trEcho("Trigger enabling rule game_over_04");
      break;
   }
   case 52:
   {
      xsEnableRule("_enemy_gunship_s_01");
      trEcho("Trigger enabling rule enemy_gunship_s_01");
      break;
   }
   case 51:
   {
      xsEnableRule("_enemy_gunship_s_02");
      trEcho("Trigger enabling rule enemy_gunship_s_02");
      break;
   }
   case 54:
   {
      xsEnableRule("_enemy_gunship_s1");
      trEcho("Trigger enabling rule enemy_gunship_s1");
      break;
   }
   case 53:
   {
      xsEnableRule("_enemy_gunship_s2");
      trEcho("Trigger enabling rule enemy_gunship_s2");
      break;
   }
   case 56:
   {
      xsEnableRule("_enemy_rocket_s_01");
      trEcho("Trigger enabling rule enemy_rocket_s_01");
      break;
   }
   case 55:
   {
      xsEnableRule("_enemy_rocket_s_02");
      trEcho("Trigger enabling rule enemy_rocket_s_02");
      break;
   }
   case 58:
   {
      xsEnableRule("_enemy_rocket_s1");
      trEcho("Trigger enabling rule enemy_rocket_s1");
      break;
   }
   case 57:
   {
      xsEnableRule("_enemy_rocket_s2");
      trEcho("Trigger enabling rule enemy_rocket_s2");
      break;
   }
   case 47:
   {
      xsEnableRule("_choose_02");
      trEcho("Trigger enabling rule choose_02");
      break;
   }
   case 63:
   {
      xsEnableRule("_choose_03_upgrade");
      trEcho("Trigger enabling rule choose_03_upgrade");
      break;
   }
   case 64:
   {
      xsEnableRule("_Cin_A_01_s1");
      trEcho("Trigger enabling rule Cin_A_01_s1");
      break;
   }
   case 65:
   {
      xsEnableRule("_Cin_A_01_s2");
      trEcho("Trigger enabling rule Cin_A_01_s2");
      break;
   }
   case 67:
   {
      xsEnableRule("_enemy_kebenit_s_01");
      trEcho("Trigger enabling rule enemy_kebenit_s_01");
      break;
   }
   case 66:
   {
      xsEnableRule("_enemy_kebenit_s_02");
      trEcho("Trigger enabling rule enemy_kebenit_s_02");
      break;
   }
   case 69:
   {
      xsEnableRule("_enemy_cruiser_s1");
      trEcho("Trigger enabling rule enemy_cruiser_s1");
      break;
   }
   case 68:
   {
      xsEnableRule("_enemy_cruiser_s2");
      trEcho("Trigger enabling rule enemy_cruiser_s2");
      break;
   }
   case 71:
   {
      xsEnableRule("_enemy_kebenit_s1");
      trEcho("Trigger enabling rule enemy_kebenit_s1");
      break;
   }
   case 70:
   {
      xsEnableRule("_enemy_kebenit_s2");
      trEcho("Trigger enabling rule enemy_kebenit_s2");
      break;
   }
   case 2:
   {
      xsEnableRule("_Cin_Z_03");
      trEcho("Trigger enabling rule Cin_Z_03");
      break;
   }
   case 41:
   {
      xsEnableRule("_escape_2");
      trEcho("Trigger enabling rule escape_2");
      break;
   }
   case 4:
   {
      xsEnableRule("_Cin_Choose_00");
      trEcho("Trigger enabling rule Cin_Choose_00");
      break;
   }
   case 73:
   {
      xsEnableRule("_Cin_Choose_01_s1");
      trEcho("Trigger enabling rule Cin_Choose_01_s1");
      break;
   }
   case 75:
   {
      xsEnableRule("_Cin_Choose_01_s2");
      trEcho("Trigger enabling rule Cin_Choose_01_s2");
      break;
   }
   case 74:
   {
      xsEnableRule("_Cin_Choose_02");
      trEcho("Trigger enabling rule Cin_Choose_02");
      break;
   }
   case 78:
   {
      xsEnableRule("_Cin_Choose_03");
      trEcho("Trigger enabling rule Cin_Choose_03");
      break;
   }
   case 76:
   {
      xsEnableRule("_choose_ace");
      trEcho("Trigger enabling rule choose_ace");
      break;
   }
   case 77:
   {
      xsEnableRule("_choose_oliver");
      trEcho("Trigger enabling rule choose_oliver");
      break;
   }
   case 81:
   {
      xsEnableRule("_move_to_oliver");
      trEcho("Trigger enabling rule move_to_oliver");
      break;
   }
   case 82:
   {
      xsEnableRule("_Shoot_spread_oliver_01");
      trEcho("Trigger enabling rule Shoot_spread_oliver_01");
      break;
   }
   case 83:
   {
      xsEnableRule("_Shoot_spread_oliver_02");
      trEcho("Trigger enabling rule Shoot_spread_oliver_02");
      break;
   }
   case 60:
   {
      xsEnableRule("_Stage_B_01_Start");
      trEcho("Trigger enabling rule Stage_B_01_Start");
      break;
   }
   case 85:
   {
      xsEnableRule("_asteroids_move");
      trEcho("Trigger enabling rule asteroids_move");
      break;
   }
   case 84:
   {
      xsEnableRule("_Stage_B_music1");
      trEcho("Trigger enabling rule Stage_B_music1");
      break;
   }
   case 88:
   {
      xsEnableRule("_Stage_B_music2");
      trEcho("Trigger enabling rule Stage_B_music2");
      break;
   }
   case 90:
   {
      xsEnableRule("_enemy_row_s_01");
      trEcho("Trigger enabling rule enemy_row_s_01");
      break;
   }
   case 89:
   {
      xsEnableRule("_enemy_row_s_02");
      trEcho("Trigger enabling rule enemy_row_s_02");
      break;
   }
   case 92:
   {
      xsEnableRule("_enemy_spray_s_01");
      trEcho("Trigger enabling rule enemy_spray_s_01");
      break;
   }
   case 91:
   {
      xsEnableRule("_enemy_spray_s_02");
      trEcho("Trigger enabling rule enemy_spray_s_02");
      break;
   }
   case 86:
   {
      xsEnableRule("_Stage_B_02");
      trEcho("Trigger enabling rule Stage_B_02");
      break;
   }
   case 95:
   {
      xsEnableRule("_enemy_spray_s1");
      trEcho("Trigger enabling rule enemy_spray_s1");
      break;
   }
   case 94:
   {
      xsEnableRule("_enemy_spray_s2");
      trEcho("Trigger enabling rule enemy_spray_s2");
      break;
   }
   case 93:
   {
      xsEnableRule("_Stage_B_03");
      trEcho("Trigger enabling rule Stage_B_03");
      break;
   }
   case 96:
   {
      xsEnableRule("_Stage_B_04");
      trEcho("Trigger enabling rule Stage_B_04");
      break;
   }
   case 97:
   {
      xsEnableRule("_Stage_B_05");
      trEcho("Trigger enabling rule Stage_B_05");
      break;
   }
   case 98:
   {
      xsEnableRule("_Stage_B_06_reflect");
      trEcho("Trigger enabling rule Stage_B_06_reflect");
      break;
   }
   case 99:
   {
      xsEnableRule("_Stage_B_07");
      trEcho("Trigger enabling rule Stage_B_07");
      break;
   }
   case 100:
   {
      xsEnableRule("_Stage_B_08");
      trEcho("Trigger enabling rule Stage_B_08");
      break;
   }
   case 101:
   {
      xsEnableRule("_Stage_B_09");
      trEcho("Trigger enabling rule Stage_B_09");
      break;
   }
   case 102:
   {
      xsEnableRule("_Stage_B_10_row");
      trEcho("Trigger enabling rule Stage_B_10_row");
      break;
   }
   case 103:
   {
      xsEnableRule("_Stage_B_11_reflec");
      trEcho("Trigger enabling rule Stage_B_11_reflec");
      break;
   }
   case 104:
   {
      xsEnableRule("_Stage_B_12");
      trEcho("Trigger enabling rule Stage_B_12");
      break;
   }
   case 105:
   {
      xsEnableRule("_Stage_B_13");
      trEcho("Trigger enabling rule Stage_B_13");
      break;
   }
   case 106:
   {
      xsEnableRule("_Stage_B_14");
      trEcho("Trigger enabling rule Stage_B_14");
      break;
   }
   case 107:
   {
      xsEnableRule("_Stage_B_15");
      trEcho("Trigger enabling rule Stage_B_15");
      break;
   }
   case 108:
   {
      xsEnableRule("_Stage_B_16_diamond_is_unbreakable");
      trEcho("Trigger enabling rule Stage_B_16_diamond_is_unbreakable");
      break;
   }
   case 109:
   {
      xsEnableRule("_Stage_B_17_diamond_is_unbreakable");
      trEcho("Trigger enabling rule Stage_B_17_diamond_is_unbreakable");
      break;
   }
   case 110:
   {
      xsEnableRule("_Stage_B_18_row");
      trEcho("Trigger enabling rule Stage_B_18_row");
      break;
   }
   case 111:
   {
      xsEnableRule("_Stage_B_19_reflec");
      trEcho("Trigger enabling rule Stage_B_19_reflec");
      break;
   }
   case 112:
   {
      xsEnableRule("_Stage_B_20_reflect");
      trEcho("Trigger enabling rule Stage_B_20_reflect");
      break;
   }
   case 113:
   {
      xsEnableRule("_Stage_B_21_diamond");
      trEcho("Trigger enabling rule Stage_B_21_diamond");
      break;
   }
   case 114:
   {
      xsEnableRule("_Stage_B_22_diamond");
      trEcho("Trigger enabling rule Stage_B_22_diamond");
      break;
   }
   case 115:
   {
      xsEnableRule("_Stage_B_23_row");
      trEcho("Trigger enabling rule Stage_B_23_row");
      break;
   }
   case 116:
   {
      xsEnableRule("_Stage_B_24_reflect");
      trEcho("Trigger enabling rule Stage_B_24_reflect");
      break;
   }
   case 117:
   {
      xsEnableRule("_Stage_B_25_reflect");
      trEcho("Trigger enabling rule Stage_B_25_reflect");
      break;
   }
   case 118:
   {
      xsEnableRule("_Stage_B_27");
      trEcho("Trigger enabling rule Stage_B_27");
      break;
   }
   case 119:
   {
      xsEnableRule("_Stage_B_28");
      trEcho("Trigger enabling rule Stage_B_28");
      break;
   }
   case 120:
   {
      xsEnableRule("_Stage_B_29");
      trEcho("Trigger enabling rule Stage_B_29");
      break;
   }
   case 87:
   {
      xsEnableRule("_Stage_B_30_end");
      trEcho("Trigger enabling rule Stage_B_30_end");
      break;
   }
   case 121:
   {
      xsEnableRule("_Stage_B_31_boss_appear");
      trEcho("Trigger enabling rule Stage_B_31_boss_appear");
      break;
   }
   case 122:
   {
      xsEnableRule("_Stage_B_boss_m1");
      trEcho("Trigger enabling rule Stage_B_boss_m1");
      break;
   }
   case 125:
   {
      xsEnableRule("_Stage_B_boss_m2");
      trEcho("Trigger enabling rule Stage_B_boss_m2");
      break;
   }
   case 123:
   {
      xsEnableRule("_Stage_B_32");
      trEcho("Trigger enabling rule Stage_B_32");
      break;
   }
   case 126:
   {
      xsEnableRule("_Stage_B_33");
      trEcho("Trigger enabling rule Stage_B_33");
      break;
   }
   case 127:
   {
      xsEnableRule("_Stage_B_34");
      trEcho("Trigger enabling rule Stage_B_34");
      break;
   }
   case 128:
   {
      xsEnableRule("_Stage_B_35");
      trEcho("Trigger enabling rule Stage_B_35");
      break;
   }
   case 129:
   {
      xsEnableRule("_Stage_B_36");
      trEcho("Trigger enabling rule Stage_B_36");
      break;
   }
   case 130:
   {
      xsEnableRule("_Stage_B_37_dammit_yeeb");
      trEcho("Trigger enabling rule Stage_B_37_dammit_yeeb");
      break;
   }
   case 131:
   {
      xsEnableRule("_Stage_B_38");
      trEcho("Trigger enabling rule Stage_B_38");
      break;
   }
   case 132:
   {
      xsEnableRule("_Stage_B_39");
      trEcho("Trigger enabling rule Stage_B_39");
      break;
   }
   case 133:
   {
      xsEnableRule("_Stage_B_40_boss_start");
      trEcho("Trigger enabling rule Stage_B_40_boss_start");
      break;
   }
   case 135:
   {
      xsEnableRule("_x_spells_startup");
      trEcho("Trigger enabling rule x_spells_startup");
      break;
   }
   case 151:
   {
      xsEnableRule("_x_spells_decrement");
      trEcho("Trigger enabling rule x_spells_decrement");
      break;
   }
   case 138:
   {
      xsEnableRule("_lightning_lasers");
      trEcho("Trigger enabling rule lightning_lasers");
      break;
   }
   case 139:
   {
      xsEnableRule("_lightning_laser_transform");
      trEcho("Trigger enabling rule lightning_laser_transform");
      break;
   }
   case 136:
   {
      xsEnableRule("_yeeb_a0_00_startup");
      trEcho("Trigger enabling rule yeeb_a0_00_startup");
      break;
   }
   case 134:
   {
      xsEnableRule("_yeeb_music1");
      trEcho("Trigger enabling rule yeeb_music1");
      break;
   }
   case 141:
   {
      xsEnableRule("_yeeb_music2");
      trEcho("Trigger enabling rule yeeb_music2");
      break;
   }
   case 140:
   {
      xsEnableRule("_yeeb_a0_01_fire");
      trEcho("Trigger enabling rule yeeb_a0_01_fire");
      break;
   }
   case 142:
   {
      xsEnableRule("_yeeb_a0_02_s1");
      trEcho("Trigger enabling rule yeeb_a0_02_s1");
      break;
   }
   case 144:
   {
      xsEnableRule("_yeeb_a0_02_s2");
      trEcho("Trigger enabling rule yeeb_a0_02_s2");
      break;
   }
   case 143:
   {
      xsEnableRule("_yeeb_a0_03");
      trEcho("Trigger enabling rule yeeb_a0_03");
      break;
   }
   case 145:
   {
      xsEnableRule("_yeeb_move");
      trEcho("Trigger enabling rule yeeb_move");
      break;
   }
   case 124:
   {
      xsEnableRule("_yeeb_spell_01");
      trEcho("Trigger enabling rule yeeb_spell_01");
      break;
   }
   case 148:
   {
      xsEnableRule("_yeeb_spell_02_s1");
      trEcho("Trigger enabling rule yeeb_spell_02_s1");
      break;
   }
   case 150:
   {
      xsEnableRule("_yeeb_spell_02_s2");
      trEcho("Trigger enabling rule yeeb_spell_02_s2");
      break;
   }
   case 149:
   {
      xsEnableRule("_yeeb_spell_03");
      trEcho("Trigger enabling rule yeeb_spell_03");
      break;
   }
   case 146:
   {
      xsEnableRule("_surgical_00_startup");
      trEcho("Trigger enabling rule surgical_00_startup");
      break;
   }
   case 152:
   {
      xsEnableRule("_surgical_01_start");
      trEcho("Trigger enabling rule surgical_01_start");
      break;
   }
   case 153:
   {
      xsEnableRule("_surgical_02_s1");
      trEcho("Trigger enabling rule surgical_02_s1");
      break;
   }
   case 155:
   {
      xsEnableRule("_surgical_02_s2");
      trEcho("Trigger enabling rule surgical_02_s2");
      break;
   }
   case 154:
   {
      xsEnableRule("_surgical_03_fire");
      trEcho("Trigger enabling rule surgical_03_fire");
      break;
   }
   case 156:
   {
      xsEnableRule("_surgical_04_s1");
      trEcho("Trigger enabling rule surgical_04_s1");
      break;
   }
   case 158:
   {
      xsEnableRule("_surgical_04_s2");
      trEcho("Trigger enabling rule surgical_04_s2");
      break;
   }
   case 157:
   {
      xsEnableRule("_surgical_05");
      trEcho("Trigger enabling rule surgical_05");
      break;
   }
   case 159:
   {
      xsEnableRule("_surgical_06_end");
      trEcho("Trigger enabling rule surgical_06_end");
      break;
   }
   case 160:
   {
      xsEnableRule("_yeeb_a1_00_startup");
      trEcho("Trigger enabling rule yeeb_a1_00_startup");
      break;
   }
   case 161:
   {
      xsEnableRule("_yeeb_a1_01_s1");
      trEcho("Trigger enabling rule yeeb_a1_01_s1");
      break;
   }
   case 163:
   {
      xsEnableRule("_yeeb_a1_01_s2");
      trEcho("Trigger enabling rule yeeb_a1_01_s2");
      break;
   }
   case 162:
   {
      xsEnableRule("_yeeb_a1_02_move");
      trEcho("Trigger enabling rule yeeb_a1_02_move");
      break;
   }
   case 164:
   {
      xsEnableRule("_yeeb_a1_03_check");
      trEcho("Trigger enabling rule yeeb_a1_03_check");
      break;
   }
   case 165:
   {
      xsEnableRule("_yeeb_a1_04_end");
      trEcho("Trigger enabling rule yeeb_a1_04_end");
      break;
   }
   case 182:
   {
      xsEnableRule("_yeeb_a2_00_startup");
      trEcho("Trigger enabling rule yeeb_a2_00_startup");
      break;
   }
   case 167:
   {
      xsEnableRule("_yeeb_a2_01_fire");
      trEcho("Trigger enabling rule yeeb_a2_01_fire");
      break;
   }
   case 168:
   {
      xsEnableRule("_yeeb_a2_03");
      trEcho("Trigger enabling rule yeeb_a2_03");
      break;
   }
   case 166:
   {
      xsEnableRule("_thunderclap_00_startup");
      trEcho("Trigger enabling rule thunderclap_00_startup");
      break;
   }
   case 169:
   {
      xsEnableRule("_thunderclap_01");
      trEcho("Trigger enabling rule thunderclap_01");
      break;
   }
   case 170:
   {
      xsEnableRule("_thunderclap_02_done_moving");
      trEcho("Trigger enabling rule thunderclap_02_done_moving");
      break;
   }
   case 171:
   {
      xsEnableRule("_thunderclap_03_warn");
      trEcho("Trigger enabling rule thunderclap_03_warn");
      break;
   }
   case 172:
   {
      xsEnableRule("_thunderclap_04_w1");
      trEcho("Trigger enabling rule thunderclap_04_w1");
      break;
   }
   case 174:
   {
      xsEnableRule("_thunderclap_04_w2");
      trEcho("Trigger enabling rule thunderclap_04_w2");
      break;
   }
   case 173:
   {
      xsEnableRule("_thunderclap_05");
      trEcho("Trigger enabling rule thunderclap_05");
      break;
   }
   case 175:
   {
      xsEnableRule("_thunderclap_06_shoot");
      trEcho("Trigger enabling rule thunderclap_06_shoot");
      break;
   }
   case 176:
   {
      xsEnableRule("_thunderclap_07_start_scatter");
      trEcho("Trigger enabling rule thunderclap_07_start_scatter");
      break;
   }
   case 177:
   {
      xsEnableRule("_thunderclap_08_m1");
      trEcho("Trigger enabling rule thunderclap_08_m1");
      break;
   }
   case 179:
   {
      xsEnableRule("_thunderclap_08_m2");
      trEcho("Trigger enabling rule thunderclap_08_m2");
      break;
   }
   case 178:
   {
      xsEnableRule("_thunderclap_09");
      trEcho("Trigger enabling rule thunderclap_09");
      break;
   }
   case 180:
   {
      xsEnableRule("_thunderclap_10_check");
      trEcho("Trigger enabling rule thunderclap_10_check");
      break;
   }
   case 181:
   {
      xsEnableRule("_thunderclap_11");
      trEcho("Trigger enabling rule thunderclap_11");
      break;
   }
   case 137:
   {
      xsEnableRule("_electrosurge_00_startup");
      trEcho("Trigger enabling rule electrosurge_00_startup");
      break;
   }
   case 183:
   {
      xsEnableRule("_electrosurge_01");
      trEcho("Trigger enabling rule electrosurge_01");
      break;
   }
   case 185:
   {
      xsEnableRule("_electrosurge_02_fire");
      trEcho("Trigger enabling rule electrosurge_02_fire");
      break;
   }
   case 186:
   {
      xsEnableRule("_electrosurge_03_s1");
      trEcho("Trigger enabling rule electrosurge_03_s1");
      break;
   }
   case 188:
   {
      xsEnableRule("_electrosurge_03_s2");
      trEcho("Trigger enabling rule electrosurge_03_s2");
      break;
   }
   case 187:
   {
      xsEnableRule("_electrosurge_04");
      trEcho("Trigger enabling rule electrosurge_04");
      break;
   }
   case 189:
   {
      xsEnableRule("_electrosurge_05_done_moving");
      trEcho("Trigger enabling rule electrosurge_05_done_moving");
      break;
   }
   case 184:
   {
      xsEnableRule("_electrosurge_06_m1");
      trEcho("Trigger enabling rule electrosurge_06_m1");
      break;
   }
   case 191:
   {
      xsEnableRule("_electrosurge_06_m2");
      trEcho("Trigger enabling rule electrosurge_06_m2");
      break;
   }
   case 190:
   {
      xsEnableRule("_electrosurge_07_end");
      trEcho("Trigger enabling rule electrosurge_07_end");
      break;
   }
   case 147:
   {
      xsEnableRule("_Stage_B_41");
      trEcho("Trigger enabling rule Stage_B_41");
      break;
   }
   case 192:
   {
      xsEnableRule("_Stage_B_42");
      trEcho("Trigger enabling rule Stage_B_42");
      break;
   }
   case 196:
   {
      xsEnableRule("_Stage_B_44");
      trEcho("Trigger enabling rule Stage_B_44");
      break;
   }
   case 194:
   {
      xsEnableRule("_Stage_B_45");
      trEcho("Trigger enabling rule Stage_B_45");
      break;
   }
   case 193:
   {
      xsEnableRule("_Stage_B_43");
      trEcho("Trigger enabling rule Stage_B_43");
      break;
   }
   case 79:
   {
      xsEnableRule("_Stage_A_01_Start");
      trEcho("Trigger enabling rule Stage_A_01_Start");
      break;
   }
   case 197:
   {
      xsEnableRule("_Stage_A_music1");
      trEcho("Trigger enabling rule Stage_A_music1");
      break;
   }
   case 202:
   {
      xsEnableRule("_Stage_A_music2");
      trEcho("Trigger enabling rule Stage_A_music2");
      break;
   }
   case 198:
   {
      xsEnableRule("_Stage_A_02");
      trEcho("Trigger enabling rule Stage_A_02");
      break;
   }
   case 203:
   {
      xsEnableRule("_Stage_A_03");
      trEcho("Trigger enabling rule Stage_A_03");
      break;
   }
   case 204:
   {
      xsEnableRule("_Stage_A_04");
      trEcho("Trigger enabling rule Stage_A_04");
      break;
   }
   case 205:
   {
      xsEnableRule("_Stage_A_05");
      trEcho("Trigger enabling rule Stage_A_05");
      break;
   }
   case 206:
   {
      xsEnableRule("_Stage_A_06");
      trEcho("Trigger enabling rule Stage_A_06");
      break;
   }
   case 207:
   {
      xsEnableRule("_Stage_A_07");
      trEcho("Trigger enabling rule Stage_A_07");
      break;
   }
   case 208:
   {
      xsEnableRule("_Stage_A_08_midboss");
      trEcho("Trigger enabling rule Stage_A_08_midboss");
      break;
   }
   case 209:
   {
      xsEnableRule("_Stage_A_09_midboss_2");
      trEcho("Trigger enabling rule Stage_A_09_midboss_2");
      break;
   }
   case 200:
   {
      xsEnableRule("_stage_A_boss_m1");
      trEcho("Trigger enabling rule stage_A_boss_m1");
      break;
   }
   case 211:
   {
      xsEnableRule("_Stage_A_boss_m2");
      trEcho("Trigger enabling rule Stage_A_boss_m2");
      break;
   }
   case 210:
   {
      xsEnableRule("_crush_a0_00_startup");
      trEcho("Trigger enabling rule crush_a0_00_startup");
      break;
   }
   case 212:
   {
      xsEnableRule("_crush_a0_01");
      trEcho("Trigger enabling rule crush_a0_01");
      break;
   }
   case 214:
   {
      xsEnableRule("_crush_a0_02_s1");
      trEcho("Trigger enabling rule crush_a0_02_s1");
      break;
   }
   case 216:
   {
      xsEnableRule("_crush_a0_02_s2");
      trEcho("Trigger enabling rule crush_a0_02_s2");
      break;
   }
   case 215:
   {
      xsEnableRule("_crush_a0_03");
      trEcho("Trigger enabling rule crush_a0_03");
      break;
   }
   case 218:
   {
      xsEnableRule("_crush_move");
      trEcho("Trigger enabling rule crush_move");
      break;
   }
   case 217:
   {
      xsEnableRule("_crush_a0_04");
      trEcho("Trigger enabling rule crush_a0_04");
      break;
   }
   case 221:
   {
      xsEnableRule("_meteor_00_start");
      trEcho("Trigger enabling rule meteor_00_start");
      break;
   }
   case 213:
   {
      xsEnableRule("_crush_a0_05_end");
      trEcho("Trigger enabling rule crush_a0_05_end");
      break;
   }
   case 222:
   {
      xsEnableRule("_Stage_A_10_leave");
      trEcho("Trigger enabling rule Stage_A_10_leave");
      break;
   }
   case 226:
   {
      xsEnableRule("_crush_spell_01_s1");
      trEcho("Trigger enabling rule crush_spell_01_s1");
      break;
   }
   case 201:
   {
      xsEnableRule("_crush_spell_00_start");
      trEcho("Trigger enabling rule crush_spell_00_start");
      break;
   }
   case 224:
   {
      xsEnableRule("_crush_spell_01_s2");
      trEcho("Trigger enabling rule crush_spell_01_s2");
      break;
   }
   case 225:
   {
      xsEnableRule("_crush_spell_02_end");
      trEcho("Trigger enabling rule crush_spell_02_end");
      break;
   }
   case 219:
   {
      xsEnableRule("_meteor_01_move");
      trEcho("Trigger enabling rule meteor_01_move");
      break;
   }
   case 227:
   {
      xsEnableRule("_meteor_02_drop");
      trEcho("Trigger enabling rule meteor_02_drop");
      break;
   }
   case 228:
   {
      xsEnableRule("_meteor_03_s1");
      trEcho("Trigger enabling rule meteor_03_s1");
      break;
   }
   case 231:
   {
      xsEnableRule("_meteor_03_s2");
      trEcho("Trigger enabling rule meteor_03_s2");
      break;
   }
   case 229:
   {
      xsEnableRule("_meteor_04_m1");
      trEcho("Trigger enabling rule meteor_04_m1");
      break;
   }
   case 232:
   {
      xsEnableRule("_meteor_04_m2");
      trEcho("Trigger enabling rule meteor_04_m2");
      break;
   }
   case 230:
   {
      xsEnableRule("_meteor_05");
      trEcho("Trigger enabling rule meteor_05");
      break;
   }
   case 220:
   {
      xsEnableRule("_meteor_06_end");
      trEcho("Trigger enabling rule meteor_06_end");
      break;
   }
   case 223:
   {
      xsEnableRule("_Stage_A_11");
      trEcho("Trigger enabling rule Stage_A_11");
      break;
   }
   case 233:
   {
      xsEnableRule("_Stage_A_12");
      trEcho("Trigger enabling rule Stage_A_12");
      break;
   }
   case 234:
   {
      xsEnableRule("_Stage_A_13");
      trEcho("Trigger enabling rule Stage_A_13");
      break;
   }
   case 235:
   {
      xsEnableRule("_Stage_A_14");
      trEcho("Trigger enabling rule Stage_A_14");
      break;
   }
   case 236:
   {
      xsEnableRule("_Stage_A_15_lines");
      trEcho("Trigger enabling rule Stage_A_15_lines");
      break;
   }
   case 237:
   {
      xsEnableRule("_Stage_A_16");
      trEcho("Trigger enabling rule Stage_A_16");
      break;
   }
   case 238:
   {
      xsEnableRule("_Stage_A_17");
      trEcho("Trigger enabling rule Stage_A_17");
      break;
   }
   case 239:
   {
      xsEnableRule("_Stage_A_18");
      trEcho("Trigger enabling rule Stage_A_18");
      break;
   }
   case 199:
   {
      xsEnableRule("_Stage_A_19_stop");
      trEcho("Trigger enabling rule Stage_A_19_stop");
      break;
   }
   case 240:
   {
      xsEnableRule("_Stage_A_20_hi");
      trEcho("Trigger enabling rule Stage_A_20_hi");
      break;
   }
   case 241:
   {
      xsEnableRule("_Stage_A_21");
      trEcho("Trigger enabling rule Stage_A_21");
      break;
   }
   case 242:
   {
      xsEnableRule("_Stage_A_22");
      trEcho("Trigger enabling rule Stage_A_22");
      break;
   }
   case 243:
   {
      xsEnableRule("_Stage_A_23_start_boss");
      trEcho("Trigger enabling rule Stage_A_23_start_boss");
      break;
   }
   case 244:
   {
      xsEnableRule("_crush_music1");
      trEcho("Trigger enabling rule crush_music1");
      break;
   }
   case 247:
   {
      xsEnableRule("_crush_music2");
      trEcho("Trigger enabling rule crush_music2");
      break;
   }
   case 245:
   {
      xsEnableRule("_crush_a1_00_startup");
      trEcho("Trigger enabling rule crush_a1_00_startup");
      break;
   }
   case 248:
   {
      xsEnableRule("_crush_a1_05_end");
      trEcho("Trigger enabling rule crush_a1_05_end");
      break;
   }
   case 249:
   {
      xsEnableRule("_bbullets_00_start");
      trEcho("Trigger enabling rule bbullets_00_start");
      break;
   }
   case 250:
   {
      xsEnableRule("_bbullets_01");
      trEcho("Trigger enabling rule bbullets_01");
      break;
   }
   case 255:
   {
      xsEnableRule("_bbullets_02_s2");
      trEcho("Trigger enabling rule bbullets_02_s2");
      break;
   }
   case 253:
   {
      xsEnableRule("_bbullets_02_s1");
      trEcho("Trigger enabling rule bbullets_02_s1");
      break;
   }
   case 251:
   {
      xsEnableRule("_bbullets_03_m1");
      trEcho("Trigger enabling rule bbullets_03_m1");
      break;
   }
   case 256:
   {
      xsEnableRule("_bbullets_03_m2");
      trEcho("Trigger enabling rule bbullets_03_m2");
      break;
   }
   case 254:
   {
      xsEnableRule("_bbullets_04");
      trEcho("Trigger enabling rule bbullets_04");
      break;
   }
   case 257:
   {
      xsEnableRule("_bbullets_05");
      trEcho("Trigger enabling rule bbullets_05");
      break;
   }
   case 252:
   {
      xsEnableRule("_bbullets_06_end");
      trEcho("Trigger enabling rule bbullets_06_end");
      break;
   }
   case 258:
   {
      xsEnableRule("_crush_a2_00_startup");
      trEcho("Trigger enabling rule crush_a2_00_startup");
      break;
   }
   case 259:
   {
      xsEnableRule("_crush_a2_01");
      trEcho("Trigger enabling rule crush_a2_01");
      break;
   }
   case 261:
   {
      xsEnableRule("_crush_a2_02_s1");
      trEcho("Trigger enabling rule crush_a2_02_s1");
      break;
   }
   case 263:
   {
      xsEnableRule("_crush_a2_02_s2");
      trEcho("Trigger enabling rule crush_a2_02_s2");
      break;
   }
   case 262:
   {
      xsEnableRule("_crush_a2_03");
      trEcho("Trigger enabling rule crush_a2_03");
      break;
   }
   case 264:
   {
      xsEnableRule("_crush_a2_04");
      trEcho("Trigger enabling rule crush_a2_04");
      break;
   }
   case 260:
   {
      xsEnableRule("_crush_a2_05_end");
      trEcho("Trigger enabling rule crush_a2_05_end");
      break;
   }
   case 265:
   {
      xsEnableRule("_bbombs_00_start");
      trEcho("Trigger enabling rule bbombs_00_start");
      break;
   }
   case 266:
   {
      xsEnableRule("_bbombs_01_f1");
      trEcho("Trigger enabling rule bbombs_01_f1");
      break;
   }
   case 270:
   {
      xsEnableRule("_bbombs_01_f2");
      trEcho("Trigger enabling rule bbombs_01_f2");
      break;
   }
   case 271:
   {
      xsEnableRule("_bbombs_02_cleared");
      trEcho("Trigger enabling rule bbombs_02_cleared");
      break;
   }
   case 267:
   {
      xsEnableRule("_bbombs_03_b1");
      trEcho("Trigger enabling rule bbombs_03_b1");
      break;
   }
   case 272:
   {
      xsEnableRule("_bbombs_03_b2");
      trEcho("Trigger enabling rule bbombs_03_b2");
      break;
   }
   case 268:
   {
      xsEnableRule("_bbombs_05_end");
      trEcho("Trigger enabling rule bbombs_05_end");
      break;
   }
   case 269:
   {
      xsEnableRule("_bbombs_04_m1");
      trEcho("Trigger enabling rule bbombs_04_m1");
      break;
   }
   case 274:
   {
      xsEnableRule("_bbombs_04_m2");
      trEcho("Trigger enabling rule bbombs_04_m2");
      break;
   }
   case 273:
   {
      xsEnableRule("_crush_a3_00_startup");
      trEcho("Trigger enabling rule crush_a3_00_startup");
      break;
   }
   case 275:
   {
      xsEnableRule("_crush_a3_05_end");
      trEcho("Trigger enabling rule crush_a3_05_end");
      break;
   }
   case 246:
   {
      xsEnableRule("_bboss_00_start");
      trEcho("Trigger enabling rule bboss_00_start");
      break;
   }
   case 276:
   {
      xsEnableRule("_bboss_01");
      trEcho("Trigger enabling rule bboss_01");
      break;
   }
   case 278:
   {
      xsEnableRule("_bboss_02_m1");
      trEcho("Trigger enabling rule bboss_02_m1");
      break;
   }
   case 280:
   {
      xsEnableRule("_bboss_02_m2");
      trEcho("Trigger enabling rule bboss_02_m2");
      break;
   }
   case 279:
   {
      xsEnableRule("_bboss_03_s1");
      trEcho("Trigger enabling rule bboss_03_s1");
      break;
   }
   case 281:
   {
      xsEnableRule("_bboss_03_s2");
      trEcho("Trigger enabling rule bboss_03_s2");
      break;
   }
   case 277:
   {
      xsEnableRule("_crush_die_01");
      trEcho("Trigger enabling rule crush_die_01");
      break;
   }
   case 282:
   {
      xsEnableRule("_crush_die_02_s1");
      trEcho("Trigger enabling rule crush_die_02_s1");
      break;
   }
   case 284:
   {
      xsEnableRule("_crush_die_02_s2");
      trEcho("Trigger enabling rule crush_die_02_s2");
      break;
   }
   case 283:
   {
      xsEnableRule("_crush_die_03");
      trEcho("Trigger enabling rule crush_die_03");
      break;
   }
   case 285:
   {
      xsEnableRule("_crush_die_04_yay");
      trEcho("Trigger enabling rule crush_die_04_yay");
      break;
   }
   case 59:
   {
      xsEnableRule("_Stage_C_01_Start");
      trEcho("Trigger enabling rule Stage_C_01_Start");
      break;
   }
   case 286:
   {
      xsEnableRule("_Stage_C_music1");
      trEcho("Trigger enabling rule Stage_C_music1");
      break;
   }
   case 293:
   {
      xsEnableRule("_Stage_C_music2");
      trEcho("Trigger enabling rule Stage_C_music2");
      break;
   }
   case 291:
   {
      xsEnableRule("_Stage_C_02");
      trEcho("Trigger enabling rule Stage_C_02");
      break;
   }
   case 287:
   {
      xsEnableRule("_Stage_C_boss_m1");
      trEcho("Trigger enabling rule Stage_C_boss_m1");
      break;
   }
   case 295:
   {
      xsEnableRule("_Stage_C_boss_m2");
      trEcho("Trigger enabling rule Stage_C_boss_m2");
      break;
   }
   case 288:
   {
      xsEnableRule("_enemy_barge_s_01");
      trEcho("Trigger enabling rule enemy_barge_s_01");
      break;
   }
   case 296:
   {
      xsEnableRule("_enemy_barge_s_02");
      trEcho("Trigger enabling rule enemy_barge_s_02");
      break;
   }
   case 289:
   {
      xsEnableRule("_enemy_barge_s1");
      trEcho("Trigger enabling rule enemy_barge_s1");
      break;
   }
   case 297:
   {
      xsEnableRule("_enemy_barge_s2");
      trEcho("Trigger enabling rule enemy_barge_s2");
      break;
   }
   case 304:
   {
      xsEnableRule("_Stage_C_09_midboss");
      trEcho("Trigger enabling rule Stage_C_09_midboss");
      break;
   }
   case 294:
   {
      xsEnableRule("_Stage_C_03");
      trEcho("Trigger enabling rule Stage_C_03");
      break;
   }
   case 299:
   {
      xsEnableRule("_Stage_C_04");
      trEcho("Trigger enabling rule Stage_C_04");
      break;
   }
   case 300:
   {
      xsEnableRule("_Stage_C_05");
      trEcho("Trigger enabling rule Stage_C_05");
      break;
   }
   case 301:
   {
      xsEnableRule("_Stage_C_06");
      trEcho("Trigger enabling rule Stage_C_06");
      break;
   }
   case 302:
   {
      xsEnableRule("_Stage_C_07");
      trEcho("Trigger enabling rule Stage_C_07");
      break;
   }
   case 303:
   {
      xsEnableRule("_Stage_C_08_cleared");
      trEcho("Trigger enabling rule Stage_C_08_cleared");
      break;
   }
   case 298:
   {
      xsEnableRule("_nick_a0_00_startup");
      trEcho("Trigger enabling rule nick_a0_00_startup");
      break;
   }
   case 305:
   {
      xsEnableRule("_nick_a0_01_s1");
      trEcho("Trigger enabling rule nick_a0_01_s1");
      break;
   }
   case 308:
   {
      xsEnableRule("_nick_a0_01_s2");
      trEcho("Trigger enabling rule nick_a0_01_s2");
      break;
   }
   case 306:
   {
      xsEnableRule("_nick_a0_02_m1");
      trEcho("Trigger enabling rule nick_a0_02_m1");
      break;
   }
   case 309:
   {
      xsEnableRule("_nick_move");
      trEcho("Trigger enabling rule nick_move");
      break;
   }
   case 310:
   {
      xsEnableRule("_nick_a0_02_m2");
      trEcho("Trigger enabling rule nick_a0_02_m2");
      break;
   }
   case 307:
   {
      xsEnableRule("_nick_a0_03_end");
      trEcho("Trigger enabling rule nick_a0_03_end");
      break;
   }
   case 290:
   {
      xsEnableRule("_nick_spell_00_start");
      trEcho("Trigger enabling rule nick_spell_00_start");
      break;
   }
   case 312:
   {
      xsEnableRule("_nick_spell_01_s1");
      trEcho("Trigger enabling rule nick_spell_01_s1");
      break;
   }
   case 313:
   {
      xsEnableRule("_nick_spell_01_s2");
      trEcho("Trigger enabling rule nick_spell_01_s2");
      break;
   }
   case 314:
   {
      xsEnableRule("_nick_spell_02_end");
      trEcho("Trigger enabling rule nick_spell_02_end");
      break;
   }
   case 311:
   {
      xsEnableRule("_escape_00_startup");
      trEcho("Trigger enabling rule escape_00_startup");
      break;
   }
   case 315:
   {
      xsEnableRule("_escape_01");
      trEcho("Trigger enabling rule escape_01");
      break;
   }
   case 317:
   {
      xsEnableRule("_escape_02_s1");
      trEcho("Trigger enabling rule escape_02_s1");
      break;
   }
   case 319:
   {
      xsEnableRule("_escape_02_s2");
      trEcho("Trigger enabling rule escape_02_s2");
      break;
   }
   case 318:
   {
      xsEnableRule("_escape_03_s1");
      trEcho("Trigger enabling rule escape_03_s1");
      break;
   }
   case 320:
   {
      xsEnableRule("_escape_03_s2");
      trEcho("Trigger enabling rule escape_03_s2");
      break;
   }
   case 321:
   {
      xsEnableRule("_escape_04_success");
      trEcho("Trigger enabling rule escape_04_success");
      break;
   }
   case 316:
   {
      xsEnableRule("_escape_05_fail");
      trEcho("Trigger enabling rule escape_05_fail");
      break;
   }
   case 322:
   {
      xsEnableRule("_Stage_C_10");
      trEcho("Trigger enabling rule Stage_C_10");
      break;
   }
   case 323:
   {
      xsEnableRule("_Stage_C_11");
      trEcho("Trigger enabling rule Stage_C_11");
      break;
   }
   case 324:
   {
      xsEnableRule("_Stage_C_12");
      trEcho("Trigger enabling rule Stage_C_12");
      break;
   }
   case 325:
   {
      xsEnableRule("_Stage_C_13_rows");
      trEcho("Trigger enabling rule Stage_C_13_rows");
      break;
   }
   case 326:
   {
      xsEnableRule("_Stage_C_14");
      trEcho("Trigger enabling rule Stage_C_14");
      break;
   }
   case 327:
   {
      xsEnableRule("_Stage_C_15_rows");
      trEcho("Trigger enabling rule Stage_C_15_rows");
      break;
   }
   case 330:
   {
      xsEnableRule("_Stage_C_17");
      trEcho("Trigger enabling rule Stage_C_17");
      break;
   }
   case 328:
   {
      xsEnableRule("_Stage_C_16_rows");
      trEcho("Trigger enabling rule Stage_C_16_rows");
      break;
   }
   case 292:
   {
      xsEnableRule("_Stage_C_18_stop");
      trEcho("Trigger enabling rule Stage_C_18_stop");
      break;
   }
   case 331:
   {
      xsEnableRule("_Stage_C_19");
      trEcho("Trigger enabling rule Stage_C_19");
      break;
   }
   case 332:
   {
      xsEnableRule("_Stage_C_20");
      trEcho("Trigger enabling rule Stage_C_20");
      break;
   }
   case 333:
   {
      xsEnableRule("_Stage_C_21");
      trEcho("Trigger enabling rule Stage_C_21");
      break;
   }
   case 334:
   {
      xsEnableRule("_Stage_C_22");
      trEcho("Trigger enabling rule Stage_C_22");
      break;
   }
   case 335:
   {
      xsEnableRule("_Stage_C_23_start_boss");
      trEcho("Trigger enabling rule Stage_C_23_start_boss");
      break;
   }
   case 336:
   {
      xsEnableRule("_nick_music1");
      trEcho("Trigger enabling rule nick_music1");
      break;
   }
   case 339:
   {
      xsEnableRule("_nick_music2");
      trEcho("Trigger enabling rule nick_music2");
      break;
   }
   case 337:
   {
      xsEnableRule("_nick_a1_00_startup");
      trEcho("Trigger enabling rule nick_a1_00_startup");
      break;
   }
   case 341:
   {
      xsEnableRule("_nick_a1_01_m1");
      trEcho("Trigger enabling rule nick_a1_01_m1");
      break;
   }
   case 343:
   {
      xsEnableRule("_nick_a1_01_m2");
      trEcho("Trigger enabling rule nick_a1_01_m2");
      break;
   }
   case 340:
   {
      xsEnableRule("_nick_a1_02_s1");
      trEcho("Trigger enabling rule nick_a1_02_s1");
      break;
   }
   case 344:
   {
      xsEnableRule("_nick_a1_02_s2");
      trEcho("Trigger enabling rule nick_a1_02_s2");
      break;
   }
   case 342:
   {
      xsEnableRule("_nick_a1_03");
      trEcho("Trigger enabling rule nick_a1_03");
      break;
   }
   case 345:
   {
      xsEnableRule("_boundary_00_startup");
      trEcho("Trigger enabling rule boundary_00_startup");
      break;
   }
   case 346:
   {
      xsEnableRule("_boundary_01");
      trEcho("Trigger enabling rule boundary_01");
      break;
   }
   case 348:
   {
      xsEnableRule("_boundary_02_s1");
      trEcho("Trigger enabling rule boundary_02_s1");
      break;
   }
   case 351:
   {
      xsEnableRule("_boundary_02_s2");
      trEcho("Trigger enabling rule boundary_02_s2");
      break;
   }
   case 349:
   {
      xsEnableRule("_boundary_03_b1");
      trEcho("Trigger enabling rule boundary_03_b1");
      break;
   }
   case 352:
   {
      xsEnableRule("_boundary_03_b2");
      trEcho("Trigger enabling rule boundary_03_b2");
      break;
   }
   case 350:
   {
      xsEnableRule("_boundary_04_cleared");
      trEcho("Trigger enabling rule boundary_04_cleared");
      break;
   }
   case 347:
   {
      xsEnableRule("_boundary_05_end");
      trEcho("Trigger enabling rule boundary_05_end");
      break;
   }
   case 353:
   {
      xsEnableRule("_nick_a2_00_startup");
      trEcho("Trigger enabling rule nick_a2_00_startup");
      break;
   }
   case 354:
   {
      xsEnableRule("_nick_a2_01_s1");
      trEcho("Trigger enabling rule nick_a2_01_s1");
      break;
   }
   case 356:
   {
      xsEnableRule("_nick_a2_01_s2");
      trEcho("Trigger enabling rule nick_a2_01_s2");
      break;
   }
   case 355:
   {
      xsEnableRule("_nick_a2_02");
      trEcho("Trigger enabling rule nick_a2_02");
      break;
   }
   case 357:
   {
      xsEnableRule("_crossfire_00_startup");
      trEcho("Trigger enabling rule crossfire_00_startup");
      break;
   }
   case 358:
   {
      xsEnableRule("_crossfire_01");
      trEcho("Trigger enabling rule crossfire_01");
      break;
   }
   case 360:
   {
      xsEnableRule("_crossfire_02_m1");
      trEcho("Trigger enabling rule crossfire_02_m1");
      break;
   }
   case 362:
   {
      xsEnableRule("_crossfire_02_m2");
      trEcho("Trigger enabling rule crossfire_02_m2");
      break;
   }
   case 361:
   {
      xsEnableRule("_crossfire_03_s1");
      trEcho("Trigger enabling rule crossfire_03_s1");
      break;
   }
   case 363:
   {
      xsEnableRule("_crossfire_02_m3");
      trEcho("Trigger enabling rule crossfire_02_m3");
      break;
   }
   case 364:
   {
      xsEnableRule("_crossfire_03_s2");
      trEcho("Trigger enabling rule crossfire_03_s2");
      break;
   }
   case 359:
   {
      xsEnableRule("_crossfire_04_end");
      trEcho("Trigger enabling rule crossfire_04_end");
      break;
   }
   case 365:
   {
      xsEnableRule("_nick_a3_00_startup");
      trEcho("Trigger enabling rule nick_a3_00_startup");
      break;
   }
   case 367:
   {
      xsEnableRule("_nick_a3_02_s1");
      trEcho("Trigger enabling rule nick_a3_02_s1");
      break;
   }
   case 369:
   {
      xsEnableRule("_nick_a3_02_s2");
      trEcho("Trigger enabling rule nick_a3_02_s2");
      break;
   }
   case 368:
   {
      xsEnableRule("_nick_a3_03");
      trEcho("Trigger enabling rule nick_a3_03");
      break;
   }
   case 370:
   {
      xsEnableRule("_dive_00_startup");
      trEcho("Trigger enabling rule dive_00_startup");
      break;
   }
   case 371:
   {
      xsEnableRule("_dive_01");
      trEcho("Trigger enabling rule dive_01");
      break;
   }
   case 374:
   {
      xsEnableRule("_dive_02_m1");
      trEcho("Trigger enabling rule dive_02_m1");
      break;
   }
   case 376:
   {
      xsEnableRule("_dive_02_m2");
      trEcho("Trigger enabling rule dive_02_m2");
      break;
   }
   case 375:
   {
      xsEnableRule("_dive_03_s1");
      trEcho("Trigger enabling rule dive_03_s1");
      break;
   }
   case 378:
   {
      xsEnableRule("_dive_03_s2");
      trEcho("Trigger enabling rule dive_03_s2");
      break;
   }
   case 372:
   {
      xsEnableRule("_dive_04_b1");
      trEcho("Trigger enabling rule dive_04_b1");
      break;
   }
   case 379:
   {
      xsEnableRule("_dive_04_b2");
      trEcho("Trigger enabling rule dive_04_b2");
      break;
   }
   case 377:
   {
      xsEnableRule("_dive_02_m3");
      trEcho("Trigger enabling rule dive_02_m3");
      break;
   }
   case 380:
   {
      xsEnableRule("_dive_05");
      trEcho("Trigger enabling rule dive_05");
      break;
   }
   case 373:
   {
      xsEnableRule("_dive_06_end");
      trEcho("Trigger enabling rule dive_06_end");
      break;
   }
   case 338:
   {
      xsEnableRule("_jump_00_startup");
      trEcho("Trigger enabling rule jump_00_startup");
      break;
   }
   case 381:
   {
      xsEnableRule("_jump_01");
      trEcho("Trigger enabling rule jump_01");
      break;
   }
   case 383:
   {
      xsEnableRule("_jump_02_t1");
      trEcho("Trigger enabling rule jump_02_t1");
      break;
   }
   case 387:
   {
      xsEnableRule("_jump_02_t2");
      trEcho("Trigger enabling rule jump_02_t2");
      break;
   }
   case 384:
   {
      xsEnableRule("_jump_03_s1");
      trEcho("Trigger enabling rule jump_03_s1");
      break;
   }
   case 388:
   {
      xsEnableRule("_jump_03_s2");
      trEcho("Trigger enabling rule jump_03_s2");
      break;
   }
   case 385:
   {
      xsEnableRule("_jump_04_m1");
      trEcho("Trigger enabling rule jump_04_m1");
      break;
   }
   case 389:
   {
      xsEnableRule("_jump_04_m2");
      trEcho("Trigger enabling rule jump_04_m2");
      break;
   }
   case 386:
   {
      xsEnableRule("_jump_05_s1");
      trEcho("Trigger enabling rule jump_05_s1");
      break;
   }
   case 390:
   {
      xsEnableRule("_jump_05_s2");
      trEcho("Trigger enabling rule jump_05_s2");
      break;
   }
   case 329:
   {
      xsEnableRule("_Stage_C_17_rows");
      trEcho("Trigger enabling rule Stage_C_17_rows");
      break;
   }
   case 395:
   {
      xsEnableRule("_nick_die_01");
      trEcho("Trigger enabling rule nick_die_01");
      break;
   }
   case 391:
   {
      xsEnableRule("_nick_die_02_s1");
      trEcho("Trigger enabling rule nick_die_02_s1");
      break;
   }
   case 393:
   {
      xsEnableRule("_nick_die_02_s2");
      trEcho("Trigger enabling rule nick_die_02_s2");
      break;
   }
   case 392:
   {
      xsEnableRule("_nick_die_03");
      trEcho("Trigger enabling rule nick_die_03");
      break;
   }
   case 382:
   {
      xsEnableRule("_jump_06_end");
      trEcho("Trigger enabling rule jump_06_end");
      break;
   }
   case 396:
   {
      xsEnableRule("_hyperspace_00_start");
      trEcho("Trigger enabling rule hyperspace_00_start");
      break;
   }
   case 397:
   {
      xsEnableRule("_hyperspace_01");
      trEcho("Trigger enabling rule hyperspace_01");
      break;
   }
   case 398:
   {
      xsEnableRule("_hyperspace_02_s1");
      trEcho("Trigger enabling rule hyperspace_02_s1");
      break;
   }
   case 399:
   {
      xsEnableRule("_hyperspace_02_s2");
      trEcho("Trigger enabling rule hyperspace_02_s2");
      break;
   }
   case 400:
   {
      xsEnableRule("_hyperspace_03_start");
      trEcho("Trigger enabling rule hyperspace_03_start");
      break;
   }
   case 401:
   {
      xsEnableRule("_hyperspace_04_s1");
      trEcho("Trigger enabling rule hyperspace_04_s1");
      break;
   }
   case 403:
   {
      xsEnableRule("_hyperspace_04_s2");
      trEcho("Trigger enabling rule hyperspace_04_s2");
      break;
   }
   case 402:
   {
      xsEnableRule("_hyperspace_05_s1");
      trEcho("Trigger enabling rule hyperspace_05_s1");
      break;
   }
   case 405:
   {
      xsEnableRule("_hyperspace_05_s2");
      trEcho("Trigger enabling rule hyperspace_05_s2");
      break;
   }
   case 404:
   {
      xsEnableRule("_hyperspace_06_end");
      trEcho("Trigger enabling rule hyperspace_06_end");
      break;
   }
   case 394:
   {
      xsEnableRule("_Stage_C_24_nooo");
      trEcho("Trigger enabling rule Stage_C_24_nooo");
      break;
   }
   case 406:
   {
      xsEnableRule("_Stage_C_25");
      trEcho("Trigger enabling rule Stage_C_25");
      break;
   }
   case 366:
   {
      xsEnableRule("_nick_a3_01_s1");
      trEcho("Trigger enabling rule nick_a3_01_s1");
      break;
   }
   case 407:
   {
      xsEnableRule("_nick_a3_01_s2");
      trEcho("Trigger enabling rule nick_a3_01_s2");
      break;
   }
   case 43:
   {
      xsEnableRule("_laser_timer_0");
      trEcho("Trigger enabling rule laser_timer_0");
      break;
   }
   case 61:
   {
      xsEnableRule("_Stage_D_01_Start");
      trEcho("Trigger enabling rule Stage_D_01_Start");
      break;
   }
   case 408:
   {
      xsEnableRule("_Stage_D_music1");
      trEcho("Trigger enabling rule Stage_D_music1");
      break;
   }
   case 411:
   {
      xsEnableRule("_Stage_D_music2");
      trEcho("Trigger enabling rule Stage_D_music2");
      break;
   }
   case 409:
   {
      xsEnableRule("_Stage_D_02");
      trEcho("Trigger enabling rule Stage_D_02");
      break;
   }
   case 412:
   {
      xsEnableRule("_Stage_D_03");
      trEcho("Trigger enabling rule Stage_D_03");
      break;
   }
   case 413:
   {
      xsEnableRule("_Stage_D_04");
      trEcho("Trigger enabling rule Stage_D_04");
      break;
   }
   case 414:
   {
      xsEnableRule("_Stage_D_05");
      trEcho("Trigger enabling rule Stage_D_05");
      break;
   }
   case 415:
   {
      xsEnableRule("_Stage_D_06");
      trEcho("Trigger enabling rule Stage_D_06");
      break;
   }
   case 416:
   {
      xsEnableRule("_Stage_D_07_lines");
      trEcho("Trigger enabling rule Stage_D_07_lines");
      break;
   }
   case 417:
   {
      xsEnableRule("_Stage_D_08_reflect");
      trEcho("Trigger enabling rule Stage_D_08_reflect");
      break;
   }
   case 418:
   {
      xsEnableRule("_Stage_D_09");
      trEcho("Trigger enabling rule Stage_D_09");
      break;
   }
   case 419:
   {
      xsEnableRule("_Stage_D_10");
      trEcho("Trigger enabling rule Stage_D_10");
      break;
   }
   case 420:
   {
      xsEnableRule("_Stage_D_11");
      trEcho("Trigger enabling rule Stage_D_11");
      break;
   }
   case 421:
   {
      xsEnableRule("_Stage_D_12");
      trEcho("Trigger enabling rule Stage_D_12");
      break;
   }
   case 422:
   {
      xsEnableRule("_Stage_D_13_side_spray");
      trEcho("Trigger enabling rule Stage_D_13_side_spray");
      break;
   }
   case 423:
   {
      xsEnableRule("_Stage_D_14");
      trEcho("Trigger enabling rule Stage_D_14");
      break;
   }
   case 424:
   {
      xsEnableRule("_Stage_D_15_lines");
      trEcho("Trigger enabling rule Stage_D_15_lines");
      break;
   }
   case 425:
   {
      xsEnableRule("_Stage_D_16_reflect");
      trEcho("Trigger enabling rule Stage_D_16_reflect");
      break;
   }
   case 426:
   {
      xsEnableRule("_Stage_D_17");
      trEcho("Trigger enabling rule Stage_D_17");
      break;
   }
   case 427:
   {
      xsEnableRule("_Stage_D_18_side_spray");
      trEcho("Trigger enabling rule Stage_D_18_side_spray");
      break;
   }
   case 428:
   {
      xsEnableRule("_Stage_D_19");
      trEcho("Trigger enabling rule Stage_D_19");
      break;
   }
   case 429:
   {
      xsEnableRule("_Stage_D_20");
      trEcho("Trigger enabling rule Stage_D_20");
      break;
   }
   case 430:
   {
      xsEnableRule("_Stage_D_21_lines");
      trEcho("Trigger enabling rule Stage_D_21_lines");
      break;
   }
   case 431:
   {
      xsEnableRule("_Stage_D_22_reflect");
      trEcho("Trigger enabling rule Stage_D_22_reflect");
      break;
   }
   case 432:
   {
      xsEnableRule("_Stage_D_23_side_spray");
      trEcho("Trigger enabling rule Stage_D_23_side_spray");
      break;
   }
   case 433:
   {
      xsEnableRule("_Stage_D_24_reflect");
      trEcho("Trigger enabling rule Stage_D_24_reflect");
      break;
   }
   case 434:
   {
      xsEnableRule("_Stage_D_25_side_spray");
      trEcho("Trigger enabling rule Stage_D_25_side_spray");
      break;
   }
   case 435:
   {
      xsEnableRule("_Stage_D_26_reflect");
      trEcho("Trigger enabling rule Stage_D_26_reflect");
      break;
   }
   case 410:
   {
      xsEnableRule("_Stage_D_27_end");
      trEcho("Trigger enabling rule Stage_D_27_end");
      break;
   }
   case 436:
   {
      xsEnableRule("_Stage_D_28_boss_appear");
      trEcho("Trigger enabling rule Stage_D_28_boss_appear");
      break;
   }
   case 437:
   {
      xsEnableRule("_Stage_D_29");
      trEcho("Trigger enabling rule Stage_D_29");
      break;
   }
   case 438:
   {
      xsEnableRule("_Stage_D_30_A");
      trEcho("Trigger enabling rule Stage_D_30_A");
      break;
   }
   case 439:
   {
      xsEnableRule("_Stage_D_30_O");
      trEcho("Trigger enabling rule Stage_D_30_O");
      break;
   }
   case 440:
   {
      xsEnableRule("_Stage_D_31_A");
      trEcho("Trigger enabling rule Stage_D_31_A");
      break;
   }
   case 441:
   {
      xsEnableRule("_Stage_D_31_O");
      trEcho("Trigger enabling rule Stage_D_31_O");
      break;
   }
   case 442:
   {
      xsEnableRule("_Stage_D_32_A");
      trEcho("Trigger enabling rule Stage_D_32_A");
      break;
   }
   case 443:
   {
      xsEnableRule("_Stage_D_32_O");
      trEcho("Trigger enabling rule Stage_D_32_O");
      break;
   }
   case 444:
   {
      xsEnableRule("_Stage_D_33_A");
      trEcho("Trigger enabling rule Stage_D_33_A");
      break;
   }
   case 445:
   {
      xsEnableRule("_Stage_D_34_boss_start");
      trEcho("Trigger enabling rule Stage_D_34_boss_start");
      break;
   }
   case 446:
   {
      xsEnableRule("_yeeb_music3");
      trEcho("Trigger enabling rule yeeb_music3");
      break;
   }
   case 449:
   {
      xsEnableRule("_yeeb_music4");
      trEcho("Trigger enabling rule yeeb_music4");
      break;
   }
   case 447:
   {
      xsEnableRule("_yeeb_a3_00_startup");
      trEcho("Trigger enabling rule yeeb_a3_00_startup");
      break;
   }
   case 450:
   {
      xsEnableRule("_yeeb_a3_01_fire");
      trEcho("Trigger enabling rule yeeb_a3_01_fire");
      break;
   }
   case 451:
   {
      xsEnableRule("_yeeb_a3_02_s1");
      trEcho("Trigger enabling rule yeeb_a3_02_s1");
      break;
   }
   case 453:
   {
      xsEnableRule("_yeeb_a3_02_s2");
      trEcho("Trigger enabling rule yeeb_a3_02_s2");
      break;
   }
   case 452:
   {
      xsEnableRule("_yeeb_a3_03");
      trEcho("Trigger enabling rule yeeb_a3_03");
      break;
   }
   case 454:
   {
      xsEnableRule("_sparks_00_startup");
      trEcho("Trigger enabling rule sparks_00_startup");
      break;
   }
   case 455:
   {
      xsEnableRule("_sparks_01");
      trEcho("Trigger enabling rule sparks_01");
      break;
   }
   case 457:
   {
      xsEnableRule("_sparks_02_targeted");
      trEcho("Trigger enabling rule sparks_02_targeted");
      break;
   }
   case 459:
   {
      xsEnableRule("_sparks_03_s1");
      trEcho("Trigger enabling rule sparks_03_s1");
      break;
   }
   case 461:
   {
      xsEnableRule("_sparks_03_s2");
      trEcho("Trigger enabling rule sparks_03_s2");
      break;
   }
   case 460:
   {
      xsEnableRule("_sparks_04_next");
      trEcho("Trigger enabling rule sparks_04_next");
      break;
   }
   case 458:
   {
      xsEnableRule("_sparks_05_grid");
      trEcho("Trigger enabling rule sparks_05_grid");
      break;
   }
   case 456:
   {
      xsEnableRule("_sparks_06_s1");
      trEcho("Trigger enabling rule sparks_06_s1");
      break;
   }
   case 463:
   {
      xsEnableRule("_sparks_06_s2");
      trEcho("Trigger enabling rule sparks_06_s2");
      break;
   }
   case 462:
   {
      xsEnableRule("_sparks_07_end");
      trEcho("Trigger enabling rule sparks_07_end");
      break;
   }
   case 464:
   {
      xsEnableRule("_yeeb_a4_00_startup");
      trEcho("Trigger enabling rule yeeb_a4_00_startup");
      break;
   }
   case 465:
   {
      xsEnableRule("_yeeb_a4_01_s1");
      trEcho("Trigger enabling rule yeeb_a4_01_s1");
      break;
   }
   case 466:
   {
      xsEnableRule("_yeeb_a4_02_move");
      trEcho("Trigger enabling rule yeeb_a4_02_move");
      break;
   }
   case 470:
   {
      xsEnableRule("_yeeb_a4_04_end");
      trEcho("Trigger enabling rule yeeb_a4_04_end");
      break;
   }
   case 467:
   {
      xsEnableRule("_yeeb_a4_01_s2");
      trEcho("Trigger enabling rule yeeb_a4_01_s2");
      break;
   }
   case 468:
   {
      xsEnableRule("_yeeb_a4_03_check");
      trEcho("Trigger enabling rule yeeb_a4_03_check");
      break;
   }
   case 469:
   {
      xsEnableRule("_array_00_startup");
      trEcho("Trigger enabling rule array_00_startup");
      break;
   }
   case 471:
   {
      xsEnableRule("_array_01_shoot");
      trEcho("Trigger enabling rule array_01_shoot");
      break;
   }
   case 473:
   {
      xsEnableRule("_array_02_shoot");
      trEcho("Trigger enabling rule array_02_shoot");
      break;
   }
   case 474:
   {
      xsEnableRule("_array_03_reset");
      trEcho("Trigger enabling rule array_03_reset");
      break;
   }
   case 472:
   {
      xsEnableRule("_array_04_s1");
      trEcho("Trigger enabling rule array_04_s1");
      break;
   }
   case 476:
   {
      xsEnableRule("_array_04_s2");
      trEcho("Trigger enabling rule array_04_s2");
      break;
   }
   case 475:
   {
      xsEnableRule("_array_05_end");
      trEcho("Trigger enabling rule array_05_end");
      break;
   }
   case 477:
   {
      xsEnableRule("_yeeb_a5_00_startup");
      trEcho("Trigger enabling rule yeeb_a5_00_startup");
      break;
   }
   case 478:
   {
      xsEnableRule("_yeeb_a5_01_fire");
      trEcho("Trigger enabling rule yeeb_a5_01_fire");
      break;
   }
   case 479:
   {
      xsEnableRule("_yeeb_a5_03");
      trEcho("Trigger enabling rule yeeb_a5_03");
      break;
   }
   case 480:
   {
      xsEnableRule("_yeeb_a5_04_end");
      trEcho("Trigger enabling rule yeeb_a5_04_end");
      break;
   }
   case 481:
   {
      xsEnableRule("_death_00_startup");
      trEcho("Trigger enabling rule death_00_startup");
      break;
   }
   case 482:
   {
      xsEnableRule("_death_01");
      trEcho("Trigger enabling rule death_01");
      break;
   }
   case 483:
   {
      xsEnableRule("_death_02_p1");
      trEcho("Trigger enabling rule death_02_p1");
      break;
   }
   case 485:
   {
      xsEnableRule("_death_02_p2");
      trEcho("Trigger enabling rule death_02_p2");
      break;
   }
   case 484:
   {
      xsEnableRule("_death_03_laser_activate");
      trEcho("Trigger enabling rule death_03_laser_activate");
      break;
   }
   case 486:
   {
      xsEnableRule("_death_04_l1");
      trEcho("Trigger enabling rule death_04_l1");
      break;
   }
   case 488:
   {
      xsEnableRule("_death_04_l2");
      trEcho("Trigger enabling rule death_04_l2");
      break;
   }
   case 487:
   {
      xsEnableRule("_death_04_s1");
      trEcho("Trigger enabling rule death_04_s1");
      break;
   }
   case 490:
   {
      xsEnableRule("_death_04_s2");
      trEcho("Trigger enabling rule death_04_s2");
      break;
   }
   case 489:
   {
      xsEnableRule("_death_05_laser_stop");
      trEcho("Trigger enabling rule death_05_laser_stop");
      break;
   }
   case 491:
   {
      xsEnableRule("_death_06_check");
      trEcho("Trigger enabling rule death_06_check");
      break;
   }
   case 492:
   {
      xsEnableRule("_death_07_end");
      trEcho("Trigger enabling rule death_07_end");
      break;
   }
   case 493:
   {
      xsEnableRule("_yeeb_a6_00_startup");
      trEcho("Trigger enabling rule yeeb_a6_00_startup");
      break;
   }
   case 494:
   {
      xsEnableRule("_yeeb_a6_02_fire");
      trEcho("Trigger enabling rule yeeb_a6_02_fire");
      break;
   }
   case 496:
   {
      xsEnableRule("_yeeb_a6_03");
      trEcho("Trigger enabling rule yeeb_a6_03");
      break;
   }
   case 497:
   {
      xsEnableRule("_yeeb_a6_04");
      trEcho("Trigger enabling rule yeeb_a6_04");
      break;
   }
   case 499:
   {
      xsEnableRule("_yeeb_a6_05");
      trEcho("Trigger enabling rule yeeb_a6_05");
      break;
   }
   case 500:
   {
      xsEnableRule("_yeeb_a6_07");
      trEcho("Trigger enabling rule yeeb_a6_07");
      break;
   }
   case 498:
   {
      xsEnableRule("_yeeb_a6_08_end");
      trEcho("Trigger enabling rule yeeb_a6_08_end");
      break;
   }
   case 495:
   {
      xsEnableRule("_yeeb_a6_01_s1");
      trEcho("Trigger enabling rule yeeb_a6_01_s1");
      break;
   }
   case 501:
   {
      xsEnableRule("_yeeb_a6_01_s2");
      trEcho("Trigger enabling rule yeeb_a6_01_s2");
      break;
   }
   case 448:
   {
      xsEnableRule("_lightning_00_startup");
      trEcho("Trigger enabling rule lightning_00_startup");
      break;
   }
   case 502:
   {
      xsEnableRule("_lightning_01_s1");
      trEcho("Trigger enabling rule lightning_01_s1");
      break;
   }
   case 504:
   {
      xsEnableRule("_lightning_01_s2");
      trEcho("Trigger enabling rule lightning_01_s2");
      break;
   }
   case 503:
   {
      xsEnableRule("_lightning_03");
      trEcho("Trigger enabling rule lightning_03");
      break;
   }
   case 505:
   {
      xsEnableRule("_lightning_02_s1");
      trEcho("Trigger enabling rule lightning_02_s1");
      break;
   }
   case 507:
   {
      xsEnableRule("_lightning_02_s2");
      trEcho("Trigger enabling rule lightning_02_s2");
      break;
   }
   case 506:
   {
      xsEnableRule("_lightning_04");
      trEcho("Trigger enabling rule lightning_04");
      break;
   }
   case 508:
   {
      xsEnableRule("_lightning_05_end");
      trEcho("Trigger enabling rule lightning_05_end");
      break;
   }
   case 509:
   {
      xsEnableRule("_omega_00_startup");
      trEcho("Trigger enabling rule omega_00_startup");
      break;
   }
   case 510:
   {
      xsEnableRule("_omega_01");
      trEcho("Trigger enabling rule omega_01");
      break;
   }
   case 511:
   {
      xsEnableRule("_omega_02_fire");
      trEcho("Trigger enabling rule omega_02_fire");
      break;
   }
   case 512:
   {
      xsEnableRule("_omega_03_shoot");
      trEcho("Trigger enabling rule omega_03_shoot");
      break;
   }
   case 513:
   {
      xsEnableRule("_omega_04_shake_end");
      trEcho("Trigger enabling rule omega_04_shake_end");
      break;
   }
   case 514:
   {
      xsEnableRule("_omega_05_s1");
      trEcho("Trigger enabling rule omega_05_s1");
      break;
   }
   case 515:
   {
      xsEnableRule("_omega_05_s2");
      trEcho("Trigger enabling rule omega_05_s2");
      break;
   }
   case 516:
   {
      xsEnableRule("_omega_05_s3");
      trEcho("Trigger enabling rule omega_05_s3");
      break;
   }
   case 517:
   {
      xsEnableRule("_omega_06_check");
      trEcho("Trigger enabling rule omega_06_check");
      break;
   }
   case 518:
   {
      xsEnableRule("_omega_07_end");
      trEcho("Trigger enabling rule omega_07_end");
      break;
   }
   case 519:
   {
      xsEnableRule("_Stage_D_35_A");
      trEcho("Trigger enabling rule Stage_D_35_A");
      break;
   }
   case 520:
   {
      xsEnableRule("_Stage_D_35_O");
      trEcho("Trigger enabling rule Stage_D_35_O");
      break;
   }
   case 522:
   {
      xsEnableRule("_Stage_D_36_O");
      trEcho("Trigger enabling rule Stage_D_36_O");
      break;
   }
   case 521:
   {
      xsEnableRule("_Stage_D_36_A");
      trEcho("Trigger enabling rule Stage_D_36_A");
      break;
   }
   case 523:
   {
      xsEnableRule("_Stage_D_37");
      trEcho("Trigger enabling rule Stage_D_37");
      break;
   }
   case 26:
   {
      xsEnableRule("_Die_00_crush");
      trEcho("Trigger enabling rule Die_00_crush");
      break;
   }
   case 27:
   {
      xsEnableRule("_Die_00_nick");
      trEcho("Trigger enabling rule Die_00_nick");
      break;
   }
   case 28:
   {
      xsEnableRule("_Die_00_yeeb");
      trEcho("Trigger enabling rule Die_00_yeeb");
      break;
   }
   }
}

rule _ATL
highFrequency
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      xsEnableRule("IfyouarereadingthisthenjustsoyouknowIammuchmuchbetterthanyouwilleverbe");
      xsDisableSelf();}}
      const float PI = 3.14159265358979323846;
      const float e = 2.71828182845904523536;
      //Internal Vars:
      float seed = 123;
      bool isMultiplayer = true;
      float M = 233280;
      float A = 9301;
      float C = 4927;
      extern int trQuestVarsN = 1;
      extern int trQuestVarsOP = 0;
      int FP = -1;
      int contextIndex = 1;
      //Globals:
      int cMyID = -1;
      int cNumberNonGaiaPlayers = -1;
      int cMyCulture = -1;
      int cMyCiv = -1;
      int cGameMode = -1;
      //Unit Stances:
      const int cUnitStanceAggressive=0;
      const int cUnitStanceDefensive=1;
      const int cUnitStancePassive=2;
      //Victory Condition/Game Mode Types:
      const int cGameModeSupremacy=0;
      const int cGameModeConquest=1;
      const int cGameModeLightning=2;
      const int cGameModeDeathmatch=3;
      //Difficulty Levels:
      const int cDifficultyEasy=0;
      const int cDifficultyModerate=1;
      const int cDifficultyHard=2;
      const int cDifficultyNightmare=3;
      //Age Constants:
      const int cAge1=0;
      const int cAge2=1;
      const int cAge3=2;
      const int cAge4=3;
      const int cAge5=4;
      //Player Relation Constants:
      const int cPlayerRelationAny=-1;
      const int cPlayerRelationSelf=0;
      const int cPlayerRelationEnemy=2;
      const int cPlayerRelationAlly=1;
      //ProtoPower Constants:
      const int cPowerLure=0;
      const int cPowerCarnivora=1;
      const int cPowerBlessingofZeus=2;
      const int cPowerBolt=3;
      const int cPowerBronzeXP05=4;
      const int cPowerBronze=5;
      const int cPowerCeaseFireNomad=6;
      const int cPowerCeaseFire=7;
      const int cPowerChangeCaladria=8;
      const int cPowerChangeChimera=9;
      const int cPowerChangeCyclops=10;
      const int cPowerChangeHydra=11;
      const int cPowerChangeManticore=12;
      const int cPowerChangeNemean=13;
      const int cPowerChaos=14;
      const int cPowerChickenStorm=15;
      const int cPowerCitadel=16;
      const int cPowerDwarvenMine=17;
      const int cPowerCurse=18;
      const int cPowerEarthquake=19;
      const int cPowerEclipse=20;
      const int cPowerFlamingWeapons=21;
      const int cPowerForestFire=22;
      const int cPowerFrost=23;
      const int cPowerGaiaForestSPC=24;
      const int cPowerGaiaForest=25;
      const int cPowerGoatunheim=26;
      const int cPowerGreatHunt=27;
      const int cPowerHealingSpring=28;
      const int cPowerHeroize=29;
      const int cPowerHesperides=30;
      const int cPowerImplode=31;
      const int cPowerLightningStorm=32;
      const int cPowerLocustSwarm=33;
      const int cPowerMeteor=34;
      const int cPowerNidhogg=35;
      const int cPowerPestilence=36;
      const int cPowerPlenty=37;
      const int cPowerProsperity=38;
      const int cPowerRagnorok=39;
      const int cPowerRain=40;
      const int cPowerRestoration=41;
      const int cPowerDeconstruction=42;
      const int cPowerReverseWonder=43;
      const int cPowerShiftingSands=44;
      const int cPowerSeedofGaia=45;
      const int cPowerSentinel=46;
      const int cPowerPlagueofSerpents=47;
      const int cPowerAncestors=48;
      const int cPowerFimbulwinter=49;
      const int cPowerSonofOsiris=50;
      const int cPowerSPCLightningStorm=51;
      const int cPowerSPCMeteor=52;
      const int cPowerSpiders=53;
      const int cPowerSpy=54;
      const int cPowerTartarianGate=55;
      const int cPowerTitanGate=56;
      const int cPowerTornadoXP05=57;
      const int cPowerTornado=58;
      const int cPowerTraitors=59;
      const int cPowerTraitorsSPC=60;
      const int cPowerTremor=61;
      const int cPowerUndermine=62;
      const int cPowerUnderworldPassage=63;
      const int cPowerVision=64;
      const int cPowerVolcano=65;
      const int cPowerVortex=66;
      const int cPowerWalkingBerryBushes=67;
      const int cPowerWalkingWoods=68;
      const int cPowerWellOfUrd=69;
      //Power Type Constants:
      const int cPowerTypeGeneric=0;
      const int cPowerTypeTempUnit=1;
      const int cPowerTypeLightning=2;
      const int cPowerTypeFrost=3;
      const int cPowerTypeLocust=4;
      const int cPowerTypeTeleport=5;
      const int cPowerTypeMeteor=6;
      const int cPowerTypeInferno=7;
      const int cPowerTypeHealing=8;
      const int cPowerTypeEnrage=9;
      const int cPowerTypeClone=10;
      const int cPowerTypeDamageUnit=11;
      const int cPowerTypeTornado=12;
      const int cPowerTypeRain=13;
      const int cPowerTypeUndermine=14;
      const int cPowerTypeSnowStorm=15;
      const int cPowerTypeBronze=16;
      const int cPowerTypePeace=17;
      const int cPowerTypeProsperity=18;
      const int cPowerTypeEclipse=19;
      const int cPowerTypeShowUnit=20;
      const int cPowerTypeBolt=21;
      const int cPowerTypeSpy=22;
      const int cPowerTypeTechActivate=23;
      const int cPowerTypeAnimalMagnet=24;
      const int cPowerTypeHealingSpring=25;
      const int cPowerTypeSwapUnit=26;
      const int cPowerTypeRebellion=27;
      const int cPowerTypeSandstorm=28;
      const int cPowerTypeEarthquake=29;
      const int cPowerTypePlenty=30;
      const int cPowerTypeForestFire=31;
      const int cPowerTypeFlamingWeapons=32;
      const int cPowerTypeDwarvenMines=33;
      const int cPowerTypePestilence=34;
      const int cPowerTypeReverseTime=35;
      const int cPowerTypeTraitors=36;
      const int cPowerTypeVolcano=37;
      const int cPowerTypeTremor=38;
      const int cPowerTypeTartarianGate=39;
      const int cPowerTypeVortex=40;
      const int cPowerTypeHesperides=41;
      const int cPowerTypeChaos=42;
      const int cPowerTypeSpiders=43;
      const int cPowerTypeHeroize=44;
      const int cPowerTypeImplode=45;
      const int cPowerTypeTitanGate=46;
      const int cPowerTypeGaiaForest=47;
      const int cPowerTypeCarnivora=48;
      //Unit Movement Types:
      const int cMovementTypeNone=0;
      const int cMovementTypeLand=1;
      const int cMovementTypeWater=2;
      const int cMovementTypeAir=4;
      const int cMovementTypeNonSolid=8;
      //KB Unit States:
      const int cUnitStateNone=0;
      const int cUnitStateBuilding=1;
      const int cUnitStateAlive=2;
      const int cUnitStateDead=4;
      const int cUnitStateAny=255;
      const int cUnitStateAliveOrBuilding=3;
      //Civs:
      const int cCivZeus=0;
      const int cCivPoseidon=1;
      const int cCivHades=2;
      const int cCivIsis=3;
      const int cCivRa=4;
      const int cCivSet=5;
      const int cCivOdin=6;
      const int cCivThor=7;
      const int cCivLoki=8;
      const int cCivKronos=9;
      const int cCivOuranos=10;
      const int cCivGaia=11;
      const int cCivRandom=12;
      const int cCivGreek=13;
      const int cCivNorse=14;
      const int cCivEgyptian=15;
      const int cCivAtlantean=16;
      const int cCivNature=17;
      //Cultures:
      const int cCultureGreek=0;
      const int cCultureEgyptian=1;
      const int cCultureNorse=2;
      const int cCultureAtlantean=3;
      const int cCultureNature=4;
      //Resources:
      const int cResourceGold=0;
      const int cResourceWood=1;
      const int cResourceFood=2;
      const int cResourceFavor=3;
      const int cAllResources=-1234;
      //Unit Action Constants:
      const int cActionBored=0;
      const int cActionBuild=1;
      const int cActionConvert=2;
      const int cActionDeath=3;
      const int cActionDecay=4;
      const int cActionGather=5;
      const int cActionHandAttack=6;
      const int cActionHeal=7;
      const int cActionHunting=8;
      const int cActionIdle=9;
      const int cActionMove=10;
      const int cActionMoveByGroup=11;
      const int cActionRangedAttack=12;
      const int cActionRepair=13;
      const int cActionResearch=14;
      const int cActionTrain=15;
      const int cActionOverrideAnimation=16;
      const int cActionWork=17;
      const int cActionAttack=18;
      const int cActionUnused0=19;
      const int cActionWander=20;
      const int cActionEnter=21;
      const int cActionAutoConvert=22;
      const int cActionBirth=23;
      const int cActionAreaAttack=24;
      const int cActionFreeze=25;
      const int cActionDormant=26;
      const int cActionGatherPoint=27;
      const int cActionMoveAttack=28;
      const int cActionThrown=29;
      const int cActionLightning=30;
      const int cActionLight=31;
      const int cActionJumpAttack=32;
      const int cActionUnused1=33;
      const int cActionMeteor=34;
      const int cActionAttach=35;
      const int cActionGuide=36;
      const int cActionJumpMove=37;
      const int cActionPickup=38;
      const int cActionDiveBomb=39;
      const int cActionUnused2=40;
      const int cActionRegenerate=41;
      const int cActionUse=42;
      const int cActionEmpower=43;
      const int cActionAutoGather=44;
      const int cActionThrow=45;
      const int cActionGore=46;
      const int cActionDropoff=47;
      const int cActionWhirlwindAttack=48;
      const int cActionChargedRangedAttack=49;
      const int cActionEject=50;
      const int cActionFreezeAttack=51;
      const int cActionConvertAttack=52;
      const int cActionTrade=53;
      const int cActionGuard=54;
      const int cActionAutoMover=55;
      const int cActionGetOnMover=56;
      const int cActionSwallow=57;
      const int cActionGate=58;
      const int cActionLightningAttack=59;
      const int cActionExplore=60;
      const int cActionEat=61;
      const int cActionBoost=62;
      const int cActionCorpseDecay=63;
      const int cActionTeleport=64;
      const int cActionBuckAttack=65;
      const int cActionTownBell=66;
      const int cActionHeroDeath=67;
      const int cActionUnbuild=68;
      const int cActionAutoLOS=69;
      //Tech Status:
      const int cTechStatusUnobtainable=0;
      const int cTechStatusObtainable=1;
      const int cTechStatusAvailable=2;
      const int cTechStatusResearching=3;
      const int cTechStatusActive=4;
      const int cTechStatusPersistent=5;
      //Area Types:
      const int cAreaTypeForest=1;
      const int cAreaTypeWater=2;
      const int cAreaTypeImpassableLand=3;
      const int cAreaTypeGold=4;
      const int cAreaTypeSettlement=5;
      //AreaGroup Types:
      const int cAreaGroupTypeLand=0;
      const int cAreaGroupTypeWater=1;
      //KB TechTree Unit Functions:
      const int cUnitFunctionBuilder=0;
      const int cUnitFunctionGatherer=1;
      const int cUnitFunctionEmpower=2;
      const int cUnitFunctionFish=3;
      const int cUnitFunctionWaterTransport=4;
      const int cUnitFunctionTrade=5;
      const int cUnitFunctionUnknown=6;
      //KB TechTree Upgrade Types:
      const int cUpgradeTypeAttack=0;
      const int cUpgradeTypeArmor=1;
      const int cUpgradeTypeHitpoints=2;
      const int cUpgradeTypeSpeed=3;
      const int cUpgradeTypeWorkRate=4;
      const int cUpgradeTypeTrainPoints=5;
      const int cUpgradeTypeAny=6;
      //Techs: 507 total
      const int cTechAge1=0;
      const int cTechAge2=1;
      const int cTechAge3=2;
      const int cTechMediumArchers=3;
      const int cTechHeavyArchers=4;
      const int cTechChampionArchers=5;
      const int cTechMediumInfantry=6;
      const int cTechHeavyInfantry=7;
      const int cTechChampionInfantry=8;
      const int cTechHusbandry=9;
      const int cTechPlow=10;
      const int cTechIrrigation=11;
      const int cTechCopperWeapons=12;
      const int cTechBronzeWeapons=13;
      const int cTechIronWeapons=14;
      const int cTechCopperMail=15;
      const int cTechBronzeMail=16;
      const int cTechIronMail=17;
      const int cTechCopperShields=18;
      const int cTechBronzeShields=19;
      const int cTechIronShields=20;
      const int cTechAmbassadors=21;
      const int cTechTaxCollectors=22;
      const int cTechCoinage=23;
      const int cTechMediumCavalry=24;
      const int cTechHeavyCavalry=25;
      const int cTechChampionCavalry=26;
      const int cTechWatchTower=27;
      const int cTechGuardTower=28;
      const int cTechBallistaTower=29;
      const int cTechBoilingOil=30;
      const int cTechLevyInfantry=31;
      const int cTechBurningPitch=32;
      const int cTechMasons=33;
      const int cTechPickaxe=34;
      const int cTechHandAxe=35;
      const int cTechShaftMine=36;
      const int cTechBowSaw=37;
      const int cTechQuarry=38;
      const int cTechCarpenters=39;
      const int cTechBravery=40;
      const int cTechValleyoftheKings=41;
      const int cTechLightningStorm=42;
      const int cTechLocustSwarm=43;
      const int cTechTornado=44;
      const int cTechWinterHarvest=45;
      const int cTechSafeguard=46;
      const int cTechRampage=47;
      const int cTechMithrilBreastplate=48;
      const int cTechCallOfValhalla=49;
      const int cTechArcticWinds=50;
      const int cTechArcticGale=51;
      const int cTechWrathOfTheDeep=52;
      const int cTechSpiritedCharge=53;
      const int cTechThunderingHooves=54;
      const int cTechBerserkergang=55;
      const int cTechRime=56;
      const int cTechFrost=57;
      const int cTechDraftHorses=58;
      const int cTechEngineers=59;
      const int cTechArchitects=60;
      const int cTechMeteor=61;
      const int cTechBoneBow=62;
      const int cTechAxeofVengeance=63;
      const int cTechDesertWind=64;
      const int cTechEnclosedDeck=65;
      const int cTechCladding=66;
      const int cTechFortifiedWall=67;
      const int cTechAge1Zeus=68;
      const int cTechSkinOfTheRhino=69;
      const int cTechAge15Egyptian=70;
      const int cTechSacredCats=71;
      const int cTechGraniteBlood=72;
      const int cTechHamarrtroll=73;
      const int cTechCriosphinx=74;
      const int cTechHieracosphinx=75;
      const int cTechMonstrousRage=76;
      const int cTechPhobosSpearofPanic=77;
      const int cTechBacchanalia=78;
      const int cTechSunRay=79;
      const int cTechSylvanLore=80;
      const int cTechForgeofOlympus=81;
      const int cTechAge1Hades=82;
      const int cTechAge1Poseidon=83;
      const int cTechCreateGold=84;
      const int cTechAge1Ra=85;
      const int cTechAge1Isis=86;
      const int cTechAge1Set=87;
      const int cTechAge1Odin=88;
      const int cTechAge1Thor=89;
      const int cTechAge1Loki=90;
      const int cTechAuroraBorealis=91;
      const int cTechAge2Athena=92;
      const int cTechAge2Ares=93;
      const int cTechAge2Hermes=94;
      const int cTechAge3Dionysos=95;
      const int cTechAge3Apollo=96;
      const int cTechAge3Aphrodite=97;
      const int cTechAge4Hera=98;
      const int cTechAge4Artemis=99;
      const int cTechAge4Hephaestus=100;
      const int cTechHuntingDogs=101;
      const int cTechHandofTalos=102;
      const int cTechSarissa=103;
      const int cTechAegisShield=104;
      const int cTechWingedMessenger=105;
      const int cTechAge2Anubis=106;
      const int cTechAge2Bast=107;
      const int cTechAge2Ptah=108;
      const int cTechAge3Hathor=109;
      const int cTechAge3Nephthys=110;
      const int cTechAge3Sekhmet=111;
      const int cTechAge4Thoth=112;
      const int cTechAge4Osiris=113;
      const int cTechAge4Horus=114;
      const int cTechFeetoftheJackal=115;
      const int cTechAge4=116;
      const int cTechAge2Forseti=117;
      const int cTechAge2Heimdall=118;
      const int cTechAge2Freyja=119;
      const int cTechAge3Skadi=120;
      const int cTechAge3Bragi=121;
      const int cTechAge3Njord=122;
      const int cTechAge4Hel=123;
      const int cTechAge4Baldr=124;
      const int cTechAge4Tyr=125;
      const int cTechSignalFires=126;
      const int cTechStoneWall=127;
      const int cTechShoulderofTalos=128;
      const int cTechSkeletonPower=129;
      const int cTechBookofThoth=130;
      const int cTechFaceoftheGorgon=131;
      const int cTechCitadelWall=132;
      const int cTechUnderworldPassage=133;
      const int cTechRestoration=134;
      const int cTechConscriptInfantry=135;
      const int cTechLevyArchers=136;
      const int cTechConscriptArchers=137;
      const int cTechLevyCavalry=138;
      const int cTechConscriptCavalry=139;
      const int cTechCarrierPigeons=140;
      const int cTechFloodControl=141;
      const int cTechPharaohRespawn=142;
      const int cTechStartingUnitsNorse=143;
      const int cTechStartingUnitsGreek=144;
      const int cTechStartingUnitsEgyptian=145;
      const int cTechGreatHunt=146;
      const int cTechCeaseFire=147;
      const int cTechMonument1=148;
      const int cTechMonument2=149;
      const int cTechMonument3=150;
      const int cTechMonument4=151;
      const int cTechUndermine=152;
      const int cTechDwarvenMail=153;
      const int cTechDwarvenShields=154;
      const int cTechDwarvenWeapons=155;
      const int cTechRain=156;
      const int cTechSerpentSpear=157;
      const int cTechFloodoftheNile=158;
      const int cTechVaultsofErebus=159;
      const int cTechLordofHorses=160;
      const int cTechOlympicParentage=161;
      const int cTechPigSticker=162;
      const int cTechLoneWanderer=163;
      const int cTechEyesintheForest=164;
      const int cTechScallopedAxe=165;
      const int cTechRingGiver=166;
      const int cTechLongSerpent=167;
      const int cTechSwineArray=168;
      const int cTechAge15Norse=169;
      const int cTechAge15Greek=170;
      const int cTechOdinsRavenRespawn=171;
      const int cTechSnowStorm=172;
      const int cTechHeavyCamelry=173;
      const int cTechChampionCamelry=174;
      const int cTechBronze=175;
      const int cTechPharaohRespawnOsiris=176;
      const int cTechNewKingdom=177;
      const int cTechMedjay=178;
      const int cTechFuneralRites=179;
      const int cTechSpiritofMaat=180;
      const int cTechCityoftheDead=181;
      const int cTechFortifyTownCenter=182;
      const int cTechHeroesZeusAge2=183;
      const int cTechHeroesZeusAge3=184;
      const int cTechHeroesZeusAge4=185;
      const int cTechHeroesPoseidonAge2=186;
      const int cTechHeroesPoseidonAge3=187;
      const int cTechHeroesPoseidonAge4=188;
      const int cTechHeroesHadesAge2=189;
      const int cTechHeroesHadesAge3=190;
      const int cTechHeroesHadesAge4=191;
      const int cTechShaduf=192;
      const int cTechMonument0=193;
      const int cTechRelicAnkhofRa=194;
      const int cTechRelicEyeofHorus=195;
      const int cTechRelicSistrumofBast=196;
      const int cTechRelicHeadofOrpheus=197;
      const int cTechRelicRingoftheNibelung=198;
      const int cTechRelicStaffofDionysus=199;
      const int cTechRelicFettersofFenrir=200;
      const int cTechRelicOdinsSpear=201;
      const int cTechRelicKitharaofApollo=202;
      const int cTechRelicMithrilHorseshoes=203;
      const int cTechRelicBowofArtemis=204;
      const int cTechRelicWedjatEye=205;
      const int cTechRelicNoseoftheSphinx=206;
      const int cTechGoldenApples=207;
      const int cTechEldhrimnirKettle=208;
      const int cTechRelicArrowsofAlfar=209;
      const int cTechRelicToothedArrows=210;
      const int cTechRelicWandofGambantein=211;
      const int cTechProsperity=212;
      const int cTechPegasusRelicRespawn=213;
      const int cTechRelicGoldenBridleofPegasus=214;
      const int cTechEclipse=215;
      const int cTechWillofKronos=216;
      const int cTechLabyrinthofMinos=217;
      const int cTechFlamesofTyphon=218;
      const int cTechDivineBlood=219;
      const int cTechShaftsofPlague=220;
      const int cTechVision=221;
      const int cTechBolt=222;
      const int cTechSpy=223;
      const int cTechFlamingWeapons=224;
      const int cTechFlamingWeaponsActive=225;
      const int cTechLossofLOS=226;
      const int cTechSerpents=227;
      const int cTechAnimalMagnetism=228;
      const int cTechHealingSpring=229;
      const int cTechCurse=230;
      const int cTechSentinel=231;
      const int cTechSandstorm=232;
      const int cTechCitadel=233;
      const int cTechWalkingWoods=234;
      const int cTechRagnorok=235;
      const int cTechNidhogg=236;
      const int cTechPlenty=237;
      const int cTechSonofOsiris=238;
      const int cTechPharaohRespawnCityoftheDead=239;
      const int cTechEarthquake=240;
      const int cTechAthenianWall=241;
      const int cTechHeroesHadesAge1=242;
      const int cTechHeroesPoseidonAge1=243;
      const int cTechHeroesZeusAge1=244;
      const int cTechDwarvenAuger=245;
      const int cTechPurseSeine=246;
      const int cTechReinforcedHull=247;
      const int cTechHuntressAxe=248;
      const int cTechForestFire=249;
      const int cTechPestilence=250;
      const int cTechRelicTriosBow=251;
      const int cTechRelicShardofBlueCrystal=252;
      const int cTechRelicArmorofAchilles=253;
      const int cTechRelicShipofFingernails=254;
      const int cTechCrocodopolis=255;
      const int cTechLeatherFrameShield=256;
      const int cTechElectrumBullets=257;
      const int cTechStonesofRedLinen=258;
      const int cTechSpearontheHorizon=259;
      const int cTechFeral=260;
      const int cTechAnastrophe=261;
      const int cTechTrierarch=262;
      const int cTechThracianHorses=263;
      const int cTechRelicShinglesofSteel=264;
      const int cTechRelicEyeofOrnlu=265;
      const int cTechRelicTuskoftheIronBoar=266;
      const int cTechAssignLOS=267;
      const int cTechRoarofOrthus=268;
      const int cTechAtefCrown=269;
      const int cTechConscriptSailors=270;
      const int cTechNavalOxybeles=271;
      const int cTechEnyosBowofHorror=272;
      const int cTechDeimosSwordofDread=273;
      const int cTechChampionElephants=274;
      const int cTechHallofThanes=275;
      const int cTechAdzeofWepwawet=276;
      const int cTechSlingsoftheSun=277;
      const int cTechRamoftheWestWind=278;
      const int cTechSundriedMudBrick=279;
      const int cTechFuneralBarge=280;
      const int cTechNecropolis=281;
      const int cTechDisableArmoryforThor=282;
      const int cTechIronMailThor=283;
      const int cTechBronzeMailThor=284;
      const int cTechBronzeShieldsThor=285;
      const int cTechBronzeWeaponsThor=286;
      const int cTechIronShieldsThor=287;
      const int cTechIronWeaponsThor=288;
      const int cTechBurningPitchThor=289;
      const int cTechHammeroftheGods=290;
      const int cTechMeteoricIronMail=291;
      const int cTechDragonscaleShields=292;
      const int cTechTusksofApedemak=293;
      const int cTechRelicPandorasBox=294;
      const int cTechRelicHerasThundercloudShawl=295;
      const int cTechRelicHarmoniasNecklace=296;
      const int cTechRelicDwarfenCalipers=297;
      const int cTechOracle=298;
      const int cTechSonsofSleipnir=299;
      const int cTechSetAge2Critter=300;
      const int cTechSetAge3Critter=301;
      const int cTechSetAge4Critter=302;
      const int cTechPoseidonHippocampusRespawn=303;
      const int cTechEgyptianbuildingbonus=304;
      const int cTechOmniscience=305;
      const int cTechMediumAxemen=306;
      const int cTechHeavyAxemen=307;
      const int cTechChampionAxemen=308;
      const int cTechMediumSpearmen=309;
      const int cTechHeavySpearmen=310;
      const int cTechChampionSpearmen=311;
      const int cTechHeavyChariots=312;
      const int cTechChampionChariots=313;
      const int cTechHeavyElephants=314;
      const int cTechLevyBarracksSoldiers=315;
      const int cTechConscriptBarracksSoldiers=316;
      const int cTechLevyMigdolSoldiers=317;
      const int cTechConscriptMigdolSoldiers=318;
      const int cTechMediumSlingers=319;
      const int cTechHeavySlingers=320;
      const int cTechChampionSlingers=321;
      const int cTechRelicGoldenLions=322;
      const int cTechRelicMonkeyHead=323;
      const int cTechLevyLonghouseSoldiers=324;
      const int cTechConscriptLonghouseSoldiers=325;
      const int cTechConscriptHillFortSoldiers=326;
      const int cTechLevyHillFortSoldiers=327;
      const int cTechThurisazRune=328;
      const int cTechGoldenLionsRelicRespawn=329;
      const int cTechMonkeyHeadRelicRespawn=330;
      const int cTechRelicCanopicJarofImsety=331;
      const int cTechRelicTowerofSestus=332;
      const int cTechRelicTrojanGateHinge=333;
      const int cTechSPCMeteor=334;
      const int cTechOdinsFirstRavens=335;
      const int cTechHeroesEgyptianAge1=336;
      const int cTechWeakenAge1Units=337;
      const int cTechSaltAmphora=338;
      const int cTechMediumMigdolShadow=339;
      const int cTechPoseidonFirstHippocampus=340;
      const int cTechTempleofHealing=341;
      const int cTechGreatestofFifty=342;
      const int cTechCopperMailThor=343;
      const int cTechCopperShieldsThor=344;
      const int cTechCopperWeaponsThor=345;
      const int cTechWeaponoftheTitans=346;
      const int cTechAge2Fake=347;
      const int cTechAge3Fake=348;
      const int cTechAge4Fake=349;
      const int cTechCrenellations=350;
      const int cTechBlessingofZeus=351;
      const int cTechRelicGirdleofHippolyta=352;
      const int cTechSharedLOS=353;
      const int cTechRelicPygmalionsStatue=354;
      const int cTechRelicBlackLotus=355;
      const int cTechDeathmatchGreek=356;
      const int cTechDeathmatchEgyptian=357;
      const int cTechDeathmatchNorse=358;
      const int cTechCeasefireEffect=359;
      const int cTechNorsebuildingbonus=360;
      const int cTechLightningMode=361;
      const int cTechFortifiedTents=362;
      const int cTechDwarvenShieldsEffect=363;
      const int cTechRelicHartersFolly=364;
      const int cTechRelicScarabPendant=365;
      const int cTechWellofUrd=366;
      const int cTechRelicBootsofKickEverything=367;
      const int cTechRelicAnvilofHephaestus=368;
      const int cTechRelicPeltofArgus=369;
      const int cTechRelicOsebergWagon=370;
      const int cTechRelicBuhenFlagstone=371;
      const int cTechRelicCatoblepasScales=372;
      const int cTechRelicTailofCerberus=373;
      const int cTechRelicBlanketofEmpressZoe=374;
      const int cTechRelicKhopeshofHorus=375;
      const int cTechCeaseFireNomad=376;
      const int cTechEclipseActive=377;
      const int cTechPlentyKOTHenable=378;
      const int cTechStartingUnitsThor=379;
      const int cTechSetAge1Critter=380;
      const int cTechStartingResourcesEgyptian=381;
      const int cTechStartingResourcesGreek=382;
      const int cTechStartingResourcesNorse=383;
      const int cTechRelicReedofNekhebet=384;
      const int cTechWeakenTrojanGate=385;
      const int cTechBuildTCfaster=386;
      const int cTechIncreaseRegeneration=387;
      const int cTechChickenStorm=388;
      const int cTechWalkingBerryBushes=389;
      const int cTechEliteHersir=390;
      const int cTechGoatunheim=391;
      const int cTechAge1Kronos=392;
      const int cTechAge1Gaia=393;
      const int cTechStartingUnitsAtlantean=394;
      const int cTechAge1Ouranos=395;
      const int cTechStartingResourcesAtlantean=396;
      const int cTechAge2Okeanus=397;
      const int cTechAge2Prometheus=398;
      const int cTechAge2Leto=399;
      const int cTechAge3Hyperion=400;
      const int cTechAge3Rheia=401;
      const int cTechAge3Theia=402;
      const int cTechAge4Helios=403;
      const int cTechAge4Hekate=404;
      const int cTechAge4Atlas=405;
      const int cTechReverseTime=406;
      const int cTechAudrey=407;
      const int cTechTraitors=408;
      const int cTechChaos=409;
      const int cTechVolcano=410;
      const int cTechBronzeWall=411;
      const int cTechIronWall=412;
      const int cTechOreichalkosWall=413;
      const int cTechTremor=414;
      const int cTechHeavyFireship=415;
      const int cTechHeartoftheTitans=416;
      const int cTechHephaestusRevenge=417;
      const int cTechGaiaForest=418;
      const int cTechTartarianGate=419;
      const int cTechLevyMainlineUnits=420;
      const int cTechLevySpecialtyUnits=421;
      const int cTechLevyPalaceUnits=422;
      const int cTechConscriptMainlineUnits=423;
      const int cTechConscriptSpecialtyUnits=424;
      const int cTechConscriptPalaceUnits=425;
      const int cTechHalooftheSun=426;
      const int cTechHornsofConsecration=427;
      const int cTechLemurianDescendants=428;
      const int cTechChannels=429;
      const int cTechAlluvialClay=430;
      const int cTechVortex=431;
      const int cTechMythicRejuvenation=432;
      const int cTechHeroicRenewal=433;
      const int cTechReverseWonder=434;
      const int cTechBiteoftheShark=435;
      const int cTechHesperides=436;
      const int cTechHeavyChieroballista=437;
      const int cTechSpiders=438;
      const int cTechHeroize=439;
      const int cTechGemino=440;
      const int cTechNorseArmory=441;
      const int cTechImplode=442;
      const int cTechSecretsoftheTitans=443;
      const int cTechTitanGate=444;
      const int cTechDisableTitan=445;
      const int cTechFocus=446;
      const int cTechSafePassage=447;
      const int cTechHeroicFleet=448;
      const int cTechWeightlessMace=449;
      const int cTechEyesofAtlas=450;
      const int cTechAsperBlood=451;
      const int cTechTitanShield=452;
      const int cTechPoseidonsSecret=453;
      const int cTechRelicWhirlwindSPC=454;
      const int cTechRelicofBronzeSPC=455;
      const int cTechRelicofEarthquakeSPC=456;
      const int cTechBronzeXP05=457;
      const int cTechTornadoXP05=458;
      const int cTechRelicTitansTreasure=459;
      const int cTechVolcanicForge=460;
      const int cTechRelicGaiasBookofKnowledge=461;
      const int cTechChangeCyclops=462;
      const int cTechChangeChimera=463;
      const int cTechChangeCaladria=464;
      const int cTechChangeManticore=465;
      const int cTechChangeNemean=466;
      const int cTechChangeHydra=467;
      const int cTechSPCLightningStorm=468;
      const int cTechDeathmatchAtlantean=469;
      const int cTechMailofOrichalkos=470;
      const int cTechHandsofthePharaoh=471;
      const int cTechBronzeAll=472;
      const int cTechBronzeAllThor=473;
      const int cTechCopperAll=474;
      const int cTechCopperAllThor=475;
      const int cTechIronAll=476;
      const int cTechIronAllThor=477;
      const int cTechMediumAll=478;
      const int cTechHeavyAll=479;
      const int cTechChampionAll=480;
      const int cTechRheiasGift=481;
      const int cTechTimeShiftFake=482;
      const int cTechFocusTurbo=483;
      const int cTechCelerity=484;
      const int cTechSeedofGaia=485;
      const int cTechGrantPhoenixEgg=486;
      const int cTechIoGuardian=487;
      const int cTechDisableAtlanteanFavor=488;
      const int cTechTimeShiftFake2=489;
      const int cTechAxeofMuspell=490;
      const int cTechChampionChieroballista=491;
      const int cTechTraitorsSPC=492;
      const int cTechSuperRocs=493;
      const int cTechBeastSlayer=494;
      const int cTechLanceofStone=495;
      const int cTechSuddenDeathAtlantean=496;
      const int cTechRelicofAncestorsSPC=497;
      const int cTechSuperTitanSPC=498;
      const int cTechSuperNidhoggSPC=499;
      const int cTechPetrified=500;
      const int cTechPrometheusWeak=501;
      const int cTechPrometheusWeakest=502;
      const int cTechAge2AtlanteanHeroes=503;
      const int cTechAge4AtlanteanHeroes=504;
      const int cTechAge15Atlantean=505;
      const int cTechGaiaForestSPC=506;
      //Unit Types: 995 total.
      const int cUnitTypeHawk=0;
      const int cUnitTypePalmStump=1;
      const int cUnitTypeBush=2;
      const int cUnitTypeArrow=3;
      const int cUnitTypeAxe=4;
      const int cUnitTypeBlood=5;
      const int cUnitTypeScarabBlood=6;
      const int cUnitTypeWaypointFlag=7;
      const int cUnitTypeMoveto=8;
      const int cUnitTypeTestObject=9;
      const int cUnitTypeYardstick=10;
      const int cUnitTypeSmoke=11;
      const int cUnitTypeCloud=12;
      const int cUnitTypeTornado=13;
      const int cUnitTypeRevealer=14;
      const int cUnitTypeAttackRevealer=15;
      const int cUnitTypeConstructionSmall=16;
      const int cUnitTypeConstructionMedium=17;
      const int cUnitTypeConstructionLarge=18;
      const int cUnitTypeConstructionExtraLarge=19;
      const int cUnitTypeIceBlock=20;
      const int cUnitTypePapyrus=21;
      const int cUnitTypeWave=22;
      const int cUnitTypeRainfall=23;
      const int cUnitTypeIceSheet=24;
      const int cUnitTypeCamera=25;
      const int cUnitTypeCameraMotionArrow=26;
      const int cUnitTypeCameraStart=27;
      const int cUnitTypeWhale=28;
      const int cUnitTypeFirePit=29;
      const int cUnitTypeRockSymbols=30;
      const int cUnitTypeStalagmite=31;
      const int cUnitTypeRunestone=32;
      const int cUnitTypeRockSnow=33;
      const int cUnitTypeWaterLilly=34;
      const int cUnitTypeWaterReeds=35;
      const int cUnitTypeSnowfall=36;
      const int cUnitTypeMist=37;
      const int cUnitTypeWaterfall=38;
      const int cUnitTypeGarrisonFlag=39;
      const int cUnitTypeCrate=40;
      const int cUnitTypeRugs=41;
      const int cUnitTypeMarketStall=42;
      const int cUnitTypeCatapultShot=43;
      const int cUnitTypeMiscObjects=44;
      const int cUnitTypeInfernoFireGround=45;
      const int cUnitTypeLightningStrike=46;
      const int cUnitTypeBallistaShot=47;
      const int cUnitTypeSplash=48;
      const int cUnitTypeMiscStairs=49;
      const int cUnitTypeCoralReef=50;
      const int cUnitTypeHeroBirth=51;
      const int cUnitTypeCinematicBlock=52;
      const int cUnitTypeFootprintVillager=53;
      const int cUnitTypeFlamingFootprint=54;
      const int cUnitTypeIcyFootprint=55;
      const int cUnitTypeOarFootprint=56;
      const int cUnitTypeMeteor=57;
      const int cUnitTypeLightningsparks=58;
      const int cUnitTypeLightningScorch=59;
      const int cUnitTypeDustSmall=60;
      const int cUnitTypeDustMedium=61;
      const int cUnitTypeDustLarge=62;
      const int cUnitTypeArrowFlaming=63;
      const int cUnitTypeLightningCloud=64;
      const int cUnitTypeLightningRain=65;
      const int cUnitTypeUIArmyBannerFurled=66;
      const int cUnitTypeUIArmyBannerPlain=67;
      const int cUnitTypeUIArmyBannerInfantry=68;
      const int cUnitTypeUIArmyBannerCavalry=69;
      const int cUnitTypeUIArmyBannerArcher=70;
      const int cUnitTypeUIArmyBannerVillager=71;
      const int cUnitTypeBloodGore=72;
      const int cUnitTypeLightningSparksGround=73;
      const int cUnitTypeHoofprint=74;
      const int cUnitTypeFootprintMilitary=75;
      const int cUnitTypeFireObject=76;
      const int cUnitTypeUIHeroBanner=77;
      const int cUnitTypeUIIdleVillagerBanner=78;
      const int cUnitTypeGiantFootprint=79;
      const int cUnitTypeShark=80;
      const int cUnitTypeOrca=81;
      const int cUnitTypeRockGraniteSmall=82;
      const int cUnitTypeRockLimestoneSmall=83;
      const int cUnitTypeGrass=84;
      const int cUnitTypeSeagull=85;
      const int cUnitTypeRockGraniteBig=86;
      const int cUnitTypeRockLimestoneBig=87;
      const int cUnitTypeRockSandstoneBig=88;
      const int cUnitTypeRockSandstoneSmall=89;
      const int cUnitTypeRockRiverSandy=90;
      const int cUnitTypeRockRiverGrassy=91;
      const int cUnitTypeRockRiverIcy=92;
      const int cUnitTypeShiftingSandsIn=93;
      const int cUnitTypeUIArmyBannerMyth=94;
      const int cUnitTypeUIIdleMilitaryBanner=95;
      const int cUnitTypeHeavenlight=96;
      const int cUnitTypeShiftingSandsOut=97;
      const int cUnitTypeShiftingSandsOutEffect=98;
      const int cUnitTypeInfernoUnitFlame=99;
      const int cUnitTypeRevealertoPlayer=100;
      const int cUnitTypeSkeleton=101;
      const int cUnitTypeSandDriftDune=102;
      const int cUnitTypeSandDriftPlain=103;
      const int cUnitTypeSandDriftPatch=104;
      const int cUnitTypeHealingSFX=105;
      const int cUnitTypeHealingAreaSFX=106;
      const int cUnitTypeFrostDrift=107;
      const int cUnitTypeDustDevil=108;
      const int cUnitTypeFountain=109;
      const int cUnitTypeFireWood=110;
      const int cUnitTypeCampfire=111;
      const int cUnitTypeColumns=112;
      const int cUnitTypeColumnsFallen=113;
      const int cUnitTypeColumnsBroken=114;
      const int cUnitTypeMilestone=115;
      const int cUnitTypeSign=116;
      const int cUnitTypeCloneSFX=117;
      const int cUnitTypeInvisibleRam=118;
      const int cUnitTypeSpear=119;
      const int cUnitTypeSlingStone=120;
      const int cUnitTypeRain=121;
      const int cUnitTypeSnowStorm=122;
      const int cUnitTypeFertilePlantsSFX=123;
      const int cUnitTypeCinematicrocks=124;
      const int cUnitTypeCinematicTrees=125;
      const int cUnitTypeCinematicDeadBodies=126;
      const int cUnitTypeDestroyedBuildingsSmall=127;
      const int cUnitTypeCinematicScorch=128;
      const int cUnitTypeunderminegrounddecallong=129;
      const int cUnitTypeunderminegrounddecalshort=130;
      const int cUnitTypeunderminegrounddecalcorner=131;
      const int cUnitTypeArmorGlowSmall=132;
      const int cUnitTypeTornadoDebris=133;
      const int cUnitTypeRaft=134;
      const int cUnitTypeMeteorImpactWater=135;
      const int cUnitTypeMeteorImpactGround=136;
      const int cUnitTypeRainSmall=137;
      const int cUnitTypeBallofFire=138;
      const int cUnitTypeIncreaseProsperityLarge=139;
      const int cUnitTypeIncreaseProsperitySmall=140;
      const int cUnitTypeBalloffireimpact=141;
      const int cUnitTypeDove=142;
      const int cUnitTypeSnowDriftArchery=143;
      const int cUnitTypeSnowDriftBarracks=144;
      const int cUnitTypeSnowDriftStable=145;
      const int cUnitTypeSnowDriftSettlements=146;
      const int cUnitTypeSnowDriftTower=147;
      const int cUnitTypeSnowDriftSiege=148;
      const int cUnitTypeSnowDriftMajorTemple=149;
      const int cUnitTypeTunnelOpening=150;
      const int cUnitTypeVolley=151;
      const int cUnitTypeHadesFire=152;
      const int cUnitTypeRockGraniteSprite=153;
      const int cUnitTypeVisionRevealer=154;
      const int cUnitTypeBoltStrike=155;
      const int cUnitTypeSpyEye=156;
      const int cUnitTypeCurseSFX=157;
      const int cUnitTypeSentinelBase=158;
      const int cUnitTypeBoltScorch=159;
      const int cUnitTypeCitadelSFX=160;
      const int cUnitTypeVisionSFX=161;
      const int cUnitTypeRagnorokSFX=162;
      const int cUnitTypeFimbulwinterSFX=163;
      const int cUnitTypePlentyFlare=164;
      const int cUnitTypeOsirisLightning=165;
      const int cUnitTypeOsirisSFX=166;
      const int cUnitTypePriestProjectile=167;
      const int cUnitTypeUIArmyBannerSiege=168;
      const int cUnitTypeRockLimestoneSprite=169;
      const int cUnitTypeRockSandstoneSprite=170;
      const int cUnitTypePineStump=171;
      const int cUnitTypeOakstump=172;
      const int cUnitTypeEarthquake=173;
      const int cUnitTypeBarrel=174;
      const int cUnitTypePots=175;
      const int cUnitTypeBrokenSiegeWeapons=176;
      const int cUnitTypeKrakenBits=177;
      const int cUnitTypeFlowers=178;
      const int cUnitTypeSeaweed=179;
      const int cUnitTypeFern=180;
      const int cUnitTypeFlagNumbered=181;
      const int cUnitTypeScorpionTail=182;
      const int cUnitTypeGenericCorpse=183;
      const int cUnitTypeWadjetSpit=184;
      const int cUnitTypeHeroDeath=185;
      const int cUnitTypePetosuchusBeam=186;
      const int cUnitTypeEarthquakeCrackA=187;
      const int cUnitTypeEarthquakeCrackB=188;
      const int cUnitTypeEarthquakeCrackC=189;
      const int cUnitTypeEarthquakeCrackD=190;
      const int cUnitTypeForestFireSFX=191;
      const int cUnitTypePetosuchusprojectile=192;
      const int cUnitTypeRecognizer=193;
      const int cUnitTypeManticoreBarb=194;
      const int cUnitTypeArrowSplashSFX=195;
      const int cUnitTypePetrobolosShot=196;
      const int cUnitTypeUITownBellBanner=197;
      const int cUnitTypePestilenceSFX1=198;
      const int cUnitTypePestilenceSFX2=199;
      const int cUnitTypeHeroDeathRevealer=200;
      const int cUnitTypeTestomatic=201;
      const int cUnitTypeGateRamDestroyed=202;
      const int cUnitTypeSpearFlaming=203;
      const int cUnitTypeDestroyedBuildingsMed=204;
      const int cUnitTypeDestroyedBuildingsLarge=205;
      const int cUnitTypeOsiris=206;
      const int cUnitTypeSPCMeteor=207;
      const int cUnitTypeAvalanche=208;
      const int cUnitTypeEinheriarBoostSFX=209;
      const int cUnitTypeArrowSignal=210;
      const int cUnitTypeOsirisBirth=211;
      const int cUnitTypeOsirisBoxGlow=212;
      const int cUnitTypeUIBannerObjective=213;
      const int cUnitTypeOakstumpburnt=214;
      const int cUnitTypeFireObjectBig=215;
      const int cUnitTypeSmokeBig=216;
      const int cUnitTypeUIArmyBannerHero=217;
      const int cUnitTypeMummyFlies=218;
      const int cUnitTypeVulture=219;
      const int cUnitTypeConversionSFX=220;
      const int cUnitTypeUIArmyBannerNaval=221;
      const int cUnitTypeFireHades=222;
      const int cUnitTypeDestruction3x3=223;
      const int cUnitTypeDestruction4x4=224;
      const int cUnitTypeDestruction5x5=225;
      const int cUnitTypeDestruction8x8=226;
      const int cUnitTypeThorhammer=227;
      const int cUnitTypeRegenerationSFX=228;
      const int cUnitTypePoisonSFX=229;
      const int cUnitTypeTaprootlarge=230;
      const int cUnitTypeTaprootSmall=231;
      const int cUnitTypeShadow=232;
      const int cUnitTypeDestructionSettlement=233;
      const int cUnitTypeDestruction2x2=234;
      const int cUnitTypeDestruction1x1=235;
      const int cUnitTypeUIArmyBannerCaravan=236;
      const int cUnitTypeUIArmyBannerOxcart=237;
      const int cUnitTypeMInePieces=238;
      const int cUnitTypeUnderworldSmoke=239;
      const int cUnitTypeUnderworldExplosion=240;
      const int cUnitTypeUICloudBoarder=241;
      const int cUnitTypeBloodCinematic=242;
      const int cUnitTypeSkeletonGiant=243;
      const int cUnitTypeSkeletonAnimal=244;
      const int cUnitTypeShipwreck=245;
      const int cUnitTypeRuins=246;
      const int cUnitTypeRottingLog=247;
      const int cUnitTypeUnderbrush=248;
      const int cUnitTypeGrassTall=249;
      const int cUnitTypeRockCliff=250;
      const int cUnitTypeUIRangeIndicatorEgyptSFX=251;
      const int cUnitTypeHarpy=252;
      const int cUnitTypeBlowingLeaves=253;
      const int cUnitTypeHawksbill=254;
      const int cUnitTypeBloodFlow=255;
      const int cUnitTypeBallofFireinvisible=256;
      const int cUnitTypeSplashFootprint=257;
      const int cUnitTypeLavaBubbling=258;
      const int cUnitTypeWoodPile1=259;
      const int cUnitTypeWoodPile2=260;
      const int cUnitTypeWoodPile3=261;
      const int cUnitTypeTrident=262;
      const int cUnitTypeDestructionCitadel=263;
      const int cUnitTypeForestFireAttack=264;
      const int cUnitTypeUIRangeIndicatorGreekSFX=265;
      const int cUnitTypeUIRangeIndicatorNorseSFX=266;
      const int cUnitTypeInvisibleGate=267;
      const int cUnitTypeUIArmyBannerBuilding=268;
      const int cUnitTypeWaterdecoration=269;
      const int cUnitTypeFootprintCavalry=270;
      const int cUnitTypeFootprintAnimalLarge=271;
      const int cUnitTypeFootprintAnimalSmall=272;
      const int cUnitTypeFootprintSiege=273;
      const int cUnitTypeEvilCloudSFX=274;
      const int cUnitTypeSmokeGiant=275;
      const int cUnitTypeCrateSmall=276;
      const int cUnitTypeCinematicWake=277;
      const int cUnitTypeWeapons=278;
      const int cUnitTypeFootprintGiant=279;
      const int cUnitTypeFootprintElephant=280;
      const int cUnitTypeFootprintWheel=281;
      const int cUnitTypeFootprintHydra=282;
      const int cUnitTypeFootprintPortableRam=283;
      const int cUnitTypeFootprintScorpion=284;
      const int cUnitTypeFootprintScarab=285;
      const int cUnitTypeSavannahstump=286;
      const int cUnitTypeChickenBlood=287;
      const int cUnitTypeCrabBlood=288;
      const int cUnitTypeArkantosBoostSFX=289;
      const int cUnitTypeTremor=290;
      const int cUnitTypeMeteorite=291;
      const int cUnitTypeIceberg=292;
      const int cUnitTypeGaiaCreepFlowers=293;
      const int cUnitTypeDeconstructUnit=294;
      const int cUnitTypeDeconstructBuilding=295;
      const int cUnitTypeChaoseffect=296;
      const int cUnitTypeTraitorseffect=297;
      const int cUnitTypeMeteoritedeath=298;
      const int cUnitTypeMarshBrush=299;
      const int cUnitTypeTundraBrush=300;
      const int cUnitTypeAudreyBase=301;
      const int cUnitTypeAudreyWaterBase=302;
      const int cUnitTypeVortexstart=303;
      const int cUnitTypeVortexfinish=304;
      const int cUnitTypeMarshstump=305;
      const int cUnitTypeTundrastump=306;
      const int cUnitTypeFireballLaunchDamageEffect=307;
      const int cUnitTypeSpider=308;
      const int cUnitTypeImplodeSphere=309;
      const int cUnitTypeImplodeSphereEffect=310;
      const int cUnitTypeImplodeLightningEffect=311;
      const int cUnitTypeImplodePullEffect=312;
      const int cUnitTypeJavelinFlaming=313;
      const int cUnitTypeImplodeShockwave=314;
      const int cUnitTypeSpiderDoor=315;
      const int cUnitTypeLampadesBlood=316;
      const int cUnitTypeAcidPool=317;
      const int cUnitTypeSpiderWarn=318;
      const int cUnitTypeGaiaForesteffect=319;
      const int cUnitTypeVortexstartlinked=320;
      const int cUnitTypeVortexfinishlinked=321;
      const int cUnitTypeVortexlanding=322;
      const int cUnitTypeImplodeDebris=323;
      const int cUnitTypeTitanAtlanteanFootprint=324;
      const int cUnitTypeTimeshiftout=325;
      const int cUnitTypeTimeshiftin=326;
      const int cUnitTypeTartarianGateflame=327;
      const int cUnitTypeHekaShockwaveSFX=328;
      const int cUnitTypeTartarianGatecreatureeffect=329;
      const int cUnitTypeGarrisonFlagSkyPassage=330;
      const int cUnitTypeLampadesBolt=331;
      const int cUnitTypeFireSiphonFire=332;
      const int cUnitTypeStymphBirdFeather=333;
      const int cUnitTypeOsirisPyramidDead=334;
      const int cUnitTypeRocket=335;
      const int cUnitTypeUIRangeIndicatorAtlanteanSFX=336;
      const int cUnitTypeTowerMirrorFocuser=337;
      const int cUnitTypeKronnyBirth=338;
      const int cUnitTypeMistOlympus=339;
      const int cUnitTypeSeagullHigh=340;
      const int cUnitTypeSeagullLow=341;
      const int cUnitTypeRepeatFlag=342;
      const int cUnitTypeBallofFirePrometheus=343;
      const int cUnitTypeShockwavestuneffect=344;
      const int cUnitTypeArkantosGodOut=345;
      const int cUnitTypeOlympusTempleSFX=346;
      const int cUnitTypeKronnyBirthSFX=347;
      const int cUnitTypeLavaSheet=348;
      const int cUnitTypeSoundGaiaSFX=349;
      const int cUnitTypeFootprintPrometheanbig=350;
      const int cUnitTypeFootprintPrometheansmall=351;
      const int cUnitTypeCinematicDeadBodiesXpack=352;
      const int cUnitTypeTartarianRubble=353;
      const int cUnitTypeTitanDeath=354;
      const int cUnitTypeSpearman=355;
      const int cUnitTypeAxeman=356;
      const int cUnitTypeSlinger=357;
      const int cUnitTypeRaidingCavalry=358;
      const int cUnitTypeCamelry=359;
      const int cUnitTypeDwarf=360;
      const int cUnitTypeBarracks=361;
      const int cUnitTypeDock=362;
      const int cUnitTypeFarm=363;
      const int cUnitTypeGranary=364;
      const int cUnitTypeArmory=365;
      const int cUnitTypeGate=366;
      const int cUnitTypeMarket=367;
      const int cUnitTypeStable=368;
      const int cUnitTypeFortress=369;
      const int cUnitTypeMonument=370;
      const int cUnitTypeSiegeCamp=371;
      const int cUnitTypeWonder=372;
      const int cUnitTypeCyclops=373;
      const int cUnitTypeGoat=374;
      const int cUnitTypeWolf=375;
      const int cUnitTypePine=376;
      const int cUnitTypeStorehouse=377;
      const int cUnitTypeScarab=378;
      const int cUnitTypeBallista=379;
      const int cUnitTypeSiegeTower=380;
      const int cUnitTypeCrocodile=381;
      const int cUnitTypeHippo=382;
      const int cUnitTypePalm=383;
      const int cUnitTypeFlag=384;
      const int cUnitTypeAnubite=385;
      const int cUnitTypeBear=386;
      const int cUnitTypeFireGiant=387;
      const int cUnitTypeLocustSwarm=388;
      const int cUnitTypeBoar=389;
      const int cUnitTypeFrostGiant=390;
      const int cUnitTypeWallLong=391;
      const int cUnitTypeCatapult=392;
      const int cUnitTypeCaravanNorse=393;
      const int cUnitTypeTroll=394;
      const int cUnitTypeMountainGiant=395;
      const int cUnitTypeEinheriar=396;
      const int cUnitTypeKraken=397;
      const int cUnitTypeSeaTurtle=398;
      const int cUnitTypeValkyrie=399;
      const int cUnitTypeBattleBoar=400;
      const int cUnitTypeTrireme=401;
      const int cUnitTypeFishingShipGreek=402;
      const int cUnitTypeBridge=403;
      const int cUnitTypeCow=404;
      const int cUnitTypeGiraffe=405;
      const int cUnitTypeStatuePharaoh=406;
      const int cUnitTypeTorch=407;
      const int cUnitTypePig=408;
      const int cUnitTypeLazerBear=409;
      const int cUnitTypeZebra=410;
      const int cUnitTypeWaterBuffalo=411;
      const int cUnitTypeGazelle=412;
      const int cUnitTypeBaboon=413;
      const int cUnitTypeCentaur=414;
      const int cUnitTypePhoenix=415;
      const int cUnitTypeManticore=416;
      const int cUnitTypeChimera=417;
      const int cUnitTypeSphinx=418;
      const int cUnitTypeMinotaur=419;
      const int cUnitTypeHydra=420;
      const int cUnitTypeChicken=421;
      const int cUnitTypeMonkey=422;
      const int cUnitTypeColossus=423;
      const int cUnitTypeMummy=424;
      const int cUnitTypeRoc=425;
      const int cUnitTypeMedusa=426;
      const int cUnitTypeObelisk=427;
      const int cUnitTypeHadesDoor=428;
      const int cUnitTypeAjax=429;
      const int cUnitTypeArkantos=430;
      const int cUnitTypeGargarensis=431;
      const int cUnitTypeSetna=432;
      const int cUnitTypeShabaKa=433;
      const int cUnitTypeOdysseus=434;
      const int cUnitTypeChiron=435;
      const int cUnitTypeAmanra=436;
      const int cUnitTypeWallConnector=437;
      const int cUnitTypeWallShort=438;
      const int cUnitTypeLeviathan=439;
      const int cUnitTypeStatueLionRight=440;
      const int cUnitTypeStatueLionLeft=441;
      const int cUnitTypeEgyptianVulture=442;
      const int cUnitTypeReginleif=443;
      const int cUnitTypeScout=444;
      const int cUnitTypeArcheryRange=445;
      const int cUnitTypeScorpionMan=446;
      const int cUnitTypeMinion=447;
      const int cUnitTypeFishPerch=448;
      const int cUnitTypeGreatBox=449;
      const int cUnitTypeGreatBoxCart=450;
      const int cUnitTypeGoldMine=451;
      const int cUnitTypeKamos=452;
      const int cUnitTypeOakTree=453;
      const int cUnitTypePyramidLarge=454;
      const int cUnitTypePyramidSmall=455;
      const int cUnitTypeLion=456;
      const int cUnitTypeRhinocerous=457;
      const int cUnitTypeHyena=458;
      const int cUnitTypeCrownedCrane=459;
      const int cUnitTypeAurochs=460;
      const int cUnitTypeFishMahi=461;
      const int cUnitTypeFishSalmon=462;
      const int cUnitTypeGiantDuckbilledPlatypus=463;
      const int cUnitTypeTemple=464;
      const int cUnitTypeHouse=465;
      const int cUnitTypeTent=466;
      const int cUnitTypeElephant=467;
      const int cUnitTypeTunnel=468;
      const int cUnitTypeTower=469;
      const int cUnitTypeSettlement=470;
      const int cUnitTypePegasus=471;
      const int cUnitTypeScylla=472;
      const int cUnitTypeAvenger=473;
      const int cUnitTypeRaven=474;
      const int cUnitTypeExcavation=475;
      const int cUnitTypeGuardian=476;
      const int cUnitTypeGuardianSleeping=477;
      const int cUnitTypeSwordBearers=478;
      const int cUnitTypeDeer=479;
      const int cUnitTypeSettlementLevel1=480;
      const int cUnitTypeOxCart=481;
      const int cUnitTypeFenceStone=482;
      const int cUnitTypeFenceWood=483;
      const int cUnitTypeVillagerNorse=484;
      const int cUnitTypeLonghouse=485;
      const int cUnitTypeAcademy=486;
      const int cUnitTypeVillagerGreek=487;
      const int cUnitTypePortableRam=488;
      const int cUnitTypeHillFort=489;
      const int cUnitTypeVillagerEgyptian=490;
      const int cUnitTypeThrowingAxeman=491;
      const int cUnitTypeUlfsark=492;
      const int cUnitTypeHuskarl=493;
      const int cUnitTypeShrine=494;
      const int cUnitTypeHeroNorse=495;
      const int cUnitTypeHeroGreekAchilles=496;
      const int cUnitTypePharaoh=497;
      const int cUnitTypeLumberCamp=498;
      const int cUnitTypeMiningCamp=499;
      const int cUnitTypeHeroGreekOdysseus=500;
      const int cUnitTypeHeroGreekChiron=501;
      const int cUnitTypeHeroGreekPolyphemus=502;
      const int cUnitTypeHoplite=503;
      const int cUnitTypeHypaspist=504;
      const int cUnitTypeHippikon=505;
      const int cUnitTypeProdromos=506;
      const int cUnitTypePeltast=507;
      const int cUnitTypeToxotes=508;
      const int cUnitTypePetrobolos=509;
      const int cUnitTypeHelepolis=510;
      const int cUnitTypePriest=511;
      const int cUnitTypeMigdolStronghold=512;
      const int cUnitTypeChariotArcher=513;
      const int cUnitTypeMyrmidon=514;
      const int cUnitTypeHetairoi=515;
      const int cUnitTypeCataphract=516;
      const int cUnitTypeMercenary=517;
      const int cUnitTypeMonument2=518;
      const int cUnitTypeMonument3=519;
      const int cUnitTypeMonument4=520;
      const int cUnitTypeMonument5=521;
      const int cUnitTypeStatueofMajorGod=522;
      const int cUnitTypeDwarvenForge=523;
      const int cUnitTypeFolstagFlagBearer=524;
      const int cUnitTypeTrojanHorse=525;
      const int cUnitTypeBerryBush=526;
      const int cUnitTypeBolderWall=527;
      const int cUnitTypeMercenaryCavalry=528;
      const int cUnitTypePirateShip=529;
      const int cUnitTypeGateRam=530;
      const int cUnitTypeJarl=531;
      const int cUnitTypeWallLongDestructionSFX=532;
      const int cUnitTypeWallShortDestructionSFX=533;
      const int cUnitTypeWallConnectorDestructionSFX=534;
      const int cUnitTypeOutpost=535;
      const int cUnitTypeTransportShipGreek=536;
      const int cUnitTypeKebenit=537;
      const int cUnitTypeLongboat=538;
      const int cUnitTypeLighthouse=539;
      const int cUnitTypeHeroBoar=540;
      const int cUnitTypeHeroGreekHeracles=541;
      const int cUnitTypeHeroGreekJason=542;
      const int cUnitTypeFishingShipNorse=543;
      const int cUnitTypeFishingShipEgyptian=544;
      const int cUnitTypeTransportShipEgyptian=545;
      const int cUnitTypeTroyGate=546;
      const int cUnitTypeTroyWallConnector=547;
      const int cUnitTypeTroyWallLong=548;
      const int cUnitTypeTroyWallShort=549;
      const int cUnitTypeHeroGreekHippolyta=550;
      const int cUnitTypeHeroGreekTheseus=551;
      const int cUnitTypeHeroGreekBellerophon=552;
      const int cUnitTypeHeroGreekAjax=553;
      const int cUnitTypeHeroGreekAtalanta=554;
      const int cUnitTypeHeroGreekPerseus=555;
      const int cUnitTypeFlyingPurpleHippo=556;
      const int cUnitTypeCaravanGreek=557;
      const int cUnitTypeCaravanEgyptian=558;
      const int cUnitTypeRelic=559;
      const int cUnitTypeSkult=560;
      const int cUnitTypeBolderRolling=561;
      const int cUnitTypeGoldMineSmall=562;
      const int cUnitTypePineSnow=563;
      const int cUnitTypeCirce=564;
      const int cUnitTypeStopCombat=565;
      const int cUnitTypeNavalShipyard=566;
      const int cUnitTypeRammingShipGreek=567;
      const int cUnitTypeSiegeShipGreek=568;
      const int cUnitTypeHeroGreekArgo=569;
      const int cUnitTypeRammingShipNorse=570;
      const int cUnitTypeRammingShipEgyptian=571;
      const int cUnitTypeSiegeShipNorse=572;
      const int cUnitTypeSiegeShipEgyptian=573;
      const int cUnitTypeShade=574;
      const int cUnitTypeAnimalAttractor=575;
      const int cUnitTypeHealingSpringObject=576;
      const int cUnitTypeSerpent=577;
      const int cUnitTypeSentinelMain=578;
      const int cUnitTypeCitadelCenter=579;
      const int cUnitTypeWalkingWoodsPine=580;
      const int cUnitTypeWalkingWoodsOak=581;
      const int cUnitTypeWalkingWoodsPalm=582;
      const int cUnitTypeHeroRagnorok=583;
      const int cUnitTypeNidhogg=584;
      const int cUnitTypeFimbulwinterWolf=585;
      const int cUnitTypePlentyVault=586;
      const int cUnitTypePharaohofOsiris=587;
      const int cUnitTypeGoldMineDwarven=588;
      const int cUnitTypeFenrisWolf=589;
      const int cUnitTypeAthena=590;
      const int cUnitTypeWalrus=591;
      const int cUnitTypeWadjet=592;
      const int cUnitTypePetsuchos=593;
      const int cUnitTypeNemeanLion=594;
      const int cUnitTypeAgamemnon=595;
      const int cUnitTypeTheocrat=596;
      const int cUnitTypeShadeofHades=597;
      const int cUnitTypeAtlantisWallConnector=598;
      const int cUnitTypeAtlantisWallLong=599;
      const int cUnitTypeAtlantisGate=600;
      const int cUnitTypeTamariskTree=601;
      const int cUnitTypePhoenixEgg=602;
      const int cUnitTypePolarBear=603;
      const int cUnitTypeWalkingWoodsPineSnow=604;
      const int cUnitTypeCaribou=605;
      const int cUnitTypeElk=606;
      const int cUnitTypePigSpecial=607;
      const int cUnitTypeTitanBad=608;
      const int cUnitTypePalmBurning=609;
      const int cUnitTypeOakTreeBurning=610;
      const int cUnitTypePineBurning=611;
      const int cUnitTypeGreatBoxCart2=612;
      const int cUnitTypeTransportShipNorse=613;
      const int cUnitTypeThorHammerHaft=614;
      const int cUnitTypeThorHammerHead=615;
      const int cUnitTypePineSnowBurning=616;
      const int cUnitTypeWarElephant=617;
      const int cUnitTypeOakAutumn=618;
      const int cUnitTypeBrokk=619;
      const int cUnitTypeEitri=620;
      const int cUnitTypeDwarfFoundry=621;
      const int cUnitTypeHippocampus=622;
      const int cUnitTypeOakAutumnBurning=623;
      const int cUnitTypeSkraeling=624;
      const int cUnitTypeUnderworldPassageSPC=625;
      const int cUnitTypeCarcinos=626;
      const int cUnitTypeJormundElver=627;
      const int cUnitTypeMilitia=628;
      const int cUnitTypeKastor=629;
      const int cUnitTypeSeaSnake=630;
      const int cUnitTypeOldMan=631;
      const int cUnitTypeJailWall=632;
      const int cUnitTypeDigPile=633;
      const int cUnitTypeGoldenFleece=634;
      const int cUnitTypeTempleUnderworld=635;
      const int cUnitTypeArkantosman=636;
      const int cUnitTypeBolderRollingDead=637;
      const int cUnitTypeBolderRolling2=638;
      const int cUnitTypePineDead=639;
      const int cUnitTypeGateRam2=640;
      const int cUnitTypeMiniAtlantis=641;
      const int cUnitTypeAtlantisTile=642;
      const int cUnitTypeAtlantisTileDead=643;
      const int cUnitTypeWellofUrd=644;
      const int cUnitTypeTroyGateDead=645;
      const int cUnitTypePlentyVaultKOTH=646;
      const int cUnitTypePoseidonStatue=647;
      const int cUnitTypePharaohSecondary=648;
      const int cUnitTypeSavannahTree=649;
      const int cUnitTypeGoldenLion=650;
      const int cUnitTypeMonkeyRelic=651;
      const int cUnitTypeGhostShip=652;
      const int cUnitTypeShadeofErebus=653;
      const int cUnitTypeBanditMigdol=654;
      const int cUnitTypeGoldMineTiny=655;
      const int cUnitTypeWallMedium=656;
      const int cUnitTypeStatueofLightning=657;
      const int cUnitTypeCrossbowman=658;
      const int cUnitTypeFenceIron=659;
      const int cUnitTypeCharonFerry=660;
      const int cUnitTypeHeroBoar2=661;
      const int cUnitTypeTaproot=662;
      const int cUnitTypeFemale=663;
      const int cUnitTypeTheris=664;
      const int cUnitTypeOrnlu=665;
      const int cUnitTypePolaris=666;
      const int cUnitTypeTamariskTreeDead=667;
      const int cUnitTypePrisoner=668;
      const int cUnitTypeFolstagFlag=669;
      const int cUnitTypeUndermineBuildingDestructionSFX=670;
      const int cUnitTypePineDeadBurning=671;
      const int cUnitTypeApeofSet=672;
      const int cUnitTypeGazelleofSet=673;
      const int cUnitTypeHyenaofSet=674;
      const int cUnitTypeCrocodileofSet=675;
      const int cUnitTypeHippoofSet=676;
      const int cUnitTypeRhinocerosofSet=677;
      const int cUnitTypeGiraffeofSet=678;
      const int cUnitTypeKrakenSPC=679;
      const int cUnitTypeSavannahTreeBurning=680;
      const int cUnitTypeWonderSPC=681;
      const int cUnitTypeMonkeyRaft=682;
      const int cUnitTypeForkboy=683;
      const int cUnitTypeWalkingBerryBush=684;
      const int cUnitTypeChickenExploding=685;
      const int cUnitTypeWalkingWoodsSavannah=686;
      const int cUnitTypeErebusTree=687;
      const int cUnitTypeVillagerAtlantean=688;
      const int cUnitTypeManor=689;
      const int cUnitTypeVillagerAtlanteanHero=690;
      const int cUnitTypeSwordsman=691;
      const int cUnitTypeTridentSoldier=692;
      const int cUnitTypeTridentSoldierHero=693;
      const int cUnitTypeSwordsmanHero=694;
      const int cUnitTypeFishingShipAtlantean=695;
      const int cUnitTypeBireme=696;
      const int cUnitTypeTransportShipAtlantean=697;
      const int cUnitTypeFireShipAtlantean=698;
      const int cUnitTypeSiegeShipAtlantean=699;
      const int cUnitTypeLancer=700;
      const int cUnitTypeLancerHero=701;
      const int cUnitTypeCounterBuilding=702;
      const int cUnitTypeChieroballista=703;
      const int cUnitTypeFireSiphon=704;
      const int cUnitTypeCaravanAtlantean=705;
      const int cUnitTypePalace=706;
      const int cUnitTypeRoyalGuard=707;
      const int cUnitTypeRoyalGuardHero=708;
      const int cUnitTypeSkyPassage=709;
      const int cUnitTypeTitanAtlantean=710;
      const int cUnitTypeBarracksAtlantean=711;
      const int cUnitTypeArcherAtlantean=712;
      const int cUnitTypeArcherAtlanteanHero=713;
      const int cUnitTypeMaceman=714;
      const int cUnitTypeMacemanHero=715;
      const int cUnitTypeJavelinCavalry=716;
      const int cUnitTypeJavelinCavalryHero=717;
      const int cUnitTypeAudrey=718;
      const int cUnitTypeAudreyWater=719;
      const int cUnitTypeGuild=720;
      const int cUnitTypeVolcano=721;
      const int cUnitTypeBehemoth=722;
      const int cUnitTypeFlyingMedic=723;
      const int cUnitTypeTowerMirror=724;
      const int cUnitTypePromethean=725;
      const int cUnitTypeServant=726;
      const int cUnitTypeSatyr=727;
      const int cUnitTypeStymphalianBird=728;
      const int cUnitTypeAutomaton=729;
      const int cUnitTypeManOWar=730;
      const int cUnitTypePrometheanSmall=731;
      const int cUnitTypeOracleHero=732;
      const int cUnitTypeGaiaForesttree=733;
      const int cUnitTypeHekaGigantes=734;
      const int cUnitTypeTundraTree=735;
      const int cUnitTypeMarshTree=736;
      const int cUnitTypeTartarianGate=737;
      const int cUnitTypeOracleScout=738;
      const int cUnitTypeTartarianGatespawn=739;
      const int cUnitTypeLampades=740;
      const int cUnitTypeKastorAdult=741;
      const int cUnitTypeMarshTreeBurning=742;
      const int cUnitTypeTundraTreeBurning=743;
      const int cUnitTypePhoenixFromEgg=744;
      const int cUnitTypeHesperidesTree=745;
      const int cUnitTypeDryad=746;
      const int cUnitTypeNereid=747;
      const int cUnitTypeTitanGate=748;
      const int cUnitTypeWalkingWoodsMarsh=749;
      const int cUnitTypeWalkingWoodsTundra=750;
      const int cUnitTypeTitanPrometheus=751;
      const int cUnitTypeGeneralMelagius=752;
      const int cUnitTypePharaohofOsirisXP=753;
      const int cUnitTypeGuardianSleepingXP=754;
      const int cUnitTypeStatueofAutomaton=755;
      const int cUnitTypeStatueofAutomatonBase=756;
      const int cUnitTypeArgus=757;
      const int cUnitTypeGaiaPool=758;
      const int cUnitTypeSpiderEgg=759;
      const int cUnitTypeKingFolstag=760;
      const int cUnitTypeOdinsTower=761;
      const int cUnitTypeStatueManticore=762;
      const int cUnitTypeStatueCyclops=763;
      const int cUnitTypeStatueNemeanLion=764;
      const int cUnitTypeStatueValkyrie=765;
      const int cUnitTypeStatueHydra=766;
      const int cUnitTypeStatueChimera=767;
      const int cUnitTypeGaiaForesttreeburning=768;
      const int cUnitTypeTartarianGateplacement=769;
      const int cUnitTypeTartarianGatebirth=770;
      const int cUnitTypeKrios=771;
      const int cUnitTypeKronny=772;
      const int cUnitTypeAjaxOlder=773;
      const int cUnitTypeAmanraOlder=774;
      const int cUnitTypeTitanGateDead=775;
      const int cUnitTypeTempleKronos=776;
      const int cUnitTypeArkantosGod=777;
      const int cUnitTypeEarth=778;
      const int cUnitTypeKronnyFlying=779;
      const int cUnitTypeVictoryMarker=780;
      const int cUnitTypeInvisibleWall=781;
      const int cUnitTypeInvisibleTarget=782;
      const int cUnitTypePyramidOsirisXpack=783;
      const int cUnitTypeStatueofMelagius=784;
      const int cUnitTypeTempleOvergrown=785;
      const int cUnitTypeRocTent=786;
      const int cUnitTypeGuardianXP=787;
      const int cUnitTypeAutomatonSPC=788;
      const int cUnitTypeSummoningTree=789;
      const int cUnitTypeSummoningTree2=790;
      const int cUnitTypeBolderRollingSmall=791;
      const int cUnitTypeTreeFinale=792;
      const int cUnitTypeKastorStaff=793;
      const int cUnitTypeHadesDoorSmall=794;
      const int cUnitTypeTitanKronos=795;
      const int cUnitTypeTitanGaia=796;
      const int cUnitTypeWolfArctic=797;
      const int cUnitTypeShadeXP=798;
      const int cUnitTypeWolfArctic2=799;
      const int cUnitTypeBella=800;
      const int cUnitTypeUnit=801;
      const int cUnitTypeShip=802;
      const int cUnitTypeBuilding=803;
      const int cUnitTypeMilitaryBuilding=804;
      const int cUnitTypeEconomicBuilding=805;
      const int cUnitTypeDropsite=806;
      const int cUnitTypeResource=807;
      const int cUnitTypeHuntedResource=808;
      const int cUnitTypeMinedResource=809;
      const int cUnitTypeLandResource=810;
      const int cUnitTypeWaterResource=811;
      const int cUnitTypeProjectile=812;
      const int cUnitTypeNature=813;
      const int cUnitTypeSpecialPowers=814;
      const int cUnitTypeUnattackable=815;
      const int cUnitTypeAbstractTemple=816;
      const int cUnitTypeMilitary=817;
      const int cUnitTypeHero=818;
      const int cUnitTypeTree=819;
      const int cUnitTypeAbstractInfantry=820;
      const int cUnitTypeAbstractCavalry=821;
      const int cUnitTypeAbstractArcher=822;
      const int cUnitTypeAbstractVillager=823;
      const int cUnitTypeAbstractFarm=824;
      const int cUnitTypeAbstractDock=825;
      const int cUnitTypeInventoryHolder=826;
      const int cUnitTypeInventoryItem=827;
      const int cUnitTypeUseableItem=828;
      const int cUnitTypeStrengthBonus=829;
      const int cUnitTypeTradeableTo=830;
      const int cUnitTypeTradeableFrom=831;
      const int cUnitTypeAbstractSiegeWeapon=832;
      const int cUnitTypeFlyingUnit=833;
      const int cUnitTypeMythUnit=834;
      const int cUnitTypeEconomic=835;
      const int cUnitTypeRanged=836;
      const int cUnitTypeFastSpeed=837;
      const int cUnitTypeAverageSpeed=838;
      const int cUnitTypeSlowSpeed=839;
      const int cUnitTypeGeneric=840;
      const int cUnitTypeUnitClass=841;
      const int cUnitTypeBuildingClass=842;
      const int cUnitTypeNatureClass=843;
      const int cUnitTypeEmbellishmentClass=844;
      const int cUnitTypeTestClass=845;
      const int cUnitTypeE3Class=846;
      const int cUnitTypeAll=847;
      const int cUnitTypeActionGather=848;
      const int cUnitTypeActionTrain=849;
      const int cUnitTypeActionBuild=850;
      const int cUnitTypeActionAttack=851;
      const int cUnitTypeActionTrickle=852;
      const int cUnitTypeFish=853;
      const int cUnitTypeTransport=854;
      const int cUnitTypeAbstractWall=855;
      const int cUnitTypeHerdable=856;
      const int cUnitTypeAbstractSettlement=857;
      const int cUnitTypeBuildingsThatShoot=858;
      const int cUnitTypeMythUnitGodPower=859;
      const int cUnitTypeAbstractTitan=860;
      const int cUnitTypeAbstractTradeUnit=861;
      const int cUnitTypeLokiHero=862;
      const int cUnitTypeAge2Building=863;
      const int cUnitTypeAge3Building=864;
      const int cUnitTypeAge1Temple=865;
      const int cUnitTypeFood=866;
      const int cUnitTypeGold=867;
      const int cUnitTypeWood=868;
      const int cUnitTypeWildCrops=869;
      const int cUnitTypeAge1Building=870;
      const int cUnitTypeFoodDropsite=871;
      const int cUnitTypeWoodDropsite=872;
      const int cUnitTypeGoldDropsite=873;
      const int cUnitTypeHumanSoldier=874;
      const int cUnitTypeHuntable=875;
      const int cUnitTypeAbstractMonument=876;
      const int cUnitTypeSettlementsThatTrainVillagers=877;
      const int cUnitTypeHack=878;
      const int cUnitTypeCrush=879;
      const int cUnitTypePierce=880;
      const int cUnitTypeSharedBuilding=881;
      const int cUnitTypeAbstractStable=882;
      const int cUnitTypeAbstractFortress=883;
      const int cUnitTypeAbstractBarracks=884;
      const int cUnitTypeAbstractArcheryRange=885;
      const int cUnitTypeEarlyWoodDropsite=886;
      const int cUnitTypeEarlyFoodDropsite=887;
      const int cUnitTypeEarlyGoldDropsite=888;
      const int cUnitTypeConvertableBuilding=889;
      const int cUnitTypeFavor=890;
      const int cUnitTypeAnimalPrey=891;
      const int cUnitTypeAnimalReactive=892;
      const int cUnitTypeAnimalPredator=893;
      const int cUnitTypeAbstractPharaoh=894;
      const int cUnitTypeMythUnitInfantry=895;
      const int cUnitTypeMythUnitCavalry=896;
      const int cUnitTypeMythUnitArcher=897;
      const int cUnitTypeMythUnitSiege=898;
      const int cUnitTypeUtilityShip=899;
      const int cUnitTypeLogicalTypeHandUnitsAttack=900;
      const int cUnitTypeLogicalTypePredatorsAutoAttack=901;
      const int cUnitTypeLogicalTypeMeanPredatorsAutoAttack=902;
      const int cUnitTypeLogicalTypeHandUnitsAutoAttack=903;
      const int cUnitTypeLogicalTypePredatorsAttack=904;
      const int cUnitTypeLogicalTypeScoutsRespondToAttack=905;
      const int cUnitTypeLogicalTypeBuildingsNotHouses=906;
      const int cUnitTypeLogicalTypeRangedUnitsAttack=907;
      const int cUnitTypeLogicalTypeRangedUnitsAutoAttack=908;
      const int cUnitTypeLogicalTypeUnitsNotBuildings=909;
      const int cUnitTypeLogicalTypeDangerousAnimals=910;
      const int cUnitTypeLogicalTypeIdleCivilian=911;
      const int cUnitTypeLogicalTypeIdleMilitary=912;
      const int cUnitTypeLogicalTypeTornadoAttack=913;
      const int cUnitTypeLogicalTypeNeededForVictory=914;
      const int cUnitTypeLogicalTypeIdleHero=915;
      const int cUnitTypeLogicalTypeValidBoltTarget=916;
      const int cUnitTypeLogicalTypeAffectedByHealingSpring=917;
      const int cUnitTypeLogicalTypeAffectedByRestoration=918;
      const int cUnitTypeLogicalTypeGarrisonOnBoats=919;
      const int cUnitTypeLogicalTypeCavalryAndScout=920;
      const int cUnitTypeLogicalTypeNonGreekUnit=921;
      const int cUnitTypeLogicalTypeVillagersAttack=922;
      const int cUnitTypeLogicalTypeEarthquakeAttack=923;
      const int cUnitTypeAbstractArmory=924;
      const int cUnitTypeLogicalTypeSiegeAutoAttack=925;
      const int cUnitTypeLogicalTypeCanBeHealed=926;
      const int cUnitTypeLogicalTypeMinimapFilterEconomic=927;
      const int cUnitTypeLogicalTypeMinimapFilterMilitary=928;
      const int cUnitTypeArcherShip=929;
      const int cUnitTypeHammerShip=930;
      const int cUnitTypeSiegeShip=931;
      const int cUnitTypeAbstractCart=932;
      const int cUnitTypeAbstractScout=933;
      const int cUnitTypeLogicalTypeValidSpyTarget=934;
      const int cUnitTypeAutoupgradedUnit=935;
      const int cUnitTypeLogicalTypeNavalMilitary=936;
      const int cUnitTypeLogicalTypeValidFrostTarget=937;
      const int cUnitTypeLogicalTypeValidMeteorTarget=938;
      const int cUnitTypeLogicalTypeSeaSerpentAttack=939;
      const int cUnitTypeLogicalTypeFavoriteUnit=940;
      const int cUnitTypeLogicalTypeFavoriteMythUnit=941;
      const int cUnitTypeLogicalTypeConvertsHerds=942;
      const int cUnitTypeLogicalTypeValidLocustSwarmTarget=943;
      const int cUnitTypeLogicalTypeValidShiftingSandsTarget=944;
      const int cUnitTypeLogicalTypeParticipatesInBattlecries=945;
      const int cUnitTypeLogicalTypeBuildingsThatTrainMilitary=946;
      const int cUnitTypeLogicalTypeRamAttack=947;
      const int cUnitTypeTransportShip=948;
      const int cUnitTypeLogicalTypeVillagersRespondToAttack=949;
      const int cUnitTypeLogicalTypeFimbulWinterTCEvalType=950;
      const int cUnitTypeLogicalTypeValidForestFireTarget=951;
      const int cUnitTypeLogicalTypeAutoattackTargetsBuildings=952;
      const int cUnitTypeWalkingWood=953;
      const int cUnitTypeLogicalTypeLandMilitary=954;
      const int cUnitTypeLogicalTypeValidSPCUnitsDeadCondition=955;
      const int cUnitTypeLogicalTypeAffectedByTownBell=956;
      const int cUnitTypeLogicalTypeValidFlamingWeaponsTarget=957;
      const int cUnitTypeLogicalTypeGreekHeroes=958;
      const int cUnitTypeLogicalTypeMilitaryUnitsAndBuildings=959;
      const int cUnitTypeLogicalTypeOdinRegenerates=960;
      const int cUnitTypeLogicalTypeValidTraitorsTarget=961;
      const int cUnitTypeLogicalTypeSuperPredatorsAttack=962;
      const int cUnitTypeLogicalTypeSuperPredatorsAutoAttack=963;
      const int cUnitTypeLogicalTypeVolcanoAttack=964;
      const int cUnitTypeLogicalTypeValidDeconstructionTarget=965;
      const int cUnitTypeLogicalTypeValidTremorAttack=966;
      const int cUnitTypeLogicalTypeAffectedByChaos=967;
      const int cUnitTypeLogicalTypeValidReverseWonderTarget=968;
      const int cUnitTypeLogicalTypeCanBeThrown=969;
      const int cUnitTypeLogicalTypeTartarianGateValidOverlapPlacement=970;
      const int cUnitTypeLogicalTypeAffectedByVortex=971;
      const int cUnitTypeLogicalTypeDoesNotCreateLush=972;
      const int cUnitTypeLogicalTypeAffectedByHeroize=973;
      const int cUnitTypeLogicalTypeValidSpiderTarget=974;
      const int cUnitTypeLogicalTypeImplodeAttack=975;
      const int cUnitTypeLogicalTypeCanBeStoned=976;
      const int cUnitTypeLogicalTypeAffectedByFrostGiant=977;
      const int cUnitTypeLogicalTypePerseusCanStone=978;
      const int cUnitTypeLogicalTypeMummyMinionTarget=979;
      const int cUnitTypeTeleporter=980;
      const int cUnitTypeLogicalTypeScreamsOnSpiderPull=981;
      const int cUnitTypeLogicalTypeTimeshift=982;
      const int cUnitTypeLogicalTypeInvulnerableToGaia=983;
      const int cUnitTypeLogicalTypeEasySelectAvoid=984;
      const int cUnitTypeLogicalTypeBuildingNotTitanGate=985;
      const int cUnitTypeLogicalTypeBuildingsNotWalls=986;
      const int cUnitTypeLogicalTypeNoFlailOnThrow=987;
      const int cUnitTypeLogicalTypeEscapesFrostOnTransform=988;
      const int cUnitTypeSetAnimal=989;
      const int cUnitTypeLogicalTypeMythUnitNotTitan=990;
      const int cUnitTypeLogicalTypeShipNotFishinghip=991;
      const int cUnitTypeLogicalTypeAbstractVillNotHero=992;
      const int cUnitTypeLogicalTypeHouses=993;
      const int cUnitTypeLogicalTypeGates=994;
      rule LoadConstants
      runImmediately active
      {
      FP = trCurrentPlayer(); 
      cMyID = FP;
      cNumberNonGaiaPlayers = cNumberPlayers - 1;
      cMyCulture = kbGetCulture();
      cMyCiv = kbGetCiv();
      cGameMode = vcGetGameplayMode();
      xsDisableSelf();
      }
      string String_substr(string sText = "", int startPos = 0, int endPos = 2048) {
      int pos = 0;
      string dText = "";
      string subText = "";
      string currentChar = "";
      while(true) // To infinity, and beyond!
      {
      if(dText == sText)
      break;
      currentChar = "";
      pos++;
      if(dText+" " > sText)      {  currentChar = "";   }
      else if(dText+"!" > sText) {  currentChar = " ";   }
      else if(dText+"\"" > sText){  currentChar = "!";   }
      else if(dText+"#" > sText) {  currentChar = "\"";  }
      else if(dText+"$" > sText) {  currentChar = "#";   }
      else if(dText+"%" > sText) {  currentChar = "$";   }
      else if(dText+"&">sText){currentChar="%";}
      else if(dText+"'">sText){currentChar="&";}
      else if(dText+"(" > sText) {  currentChar = "'";   }
      else if(dText+")" > sText) {  currentChar = "(";   }
      else if(dText+"*" > sText) {  currentChar = ")";   }
      else if(dText+"+" > sText) {  currentChar = "*";   }
      else if(dText+"," > sText) {  currentChar = "+";   }
      else if(dText+"-" > sText) {  currentChar = ",";   }
      else if(dText+"." > sText) {  currentChar = "-";   }
      else if(dText+"/" > sText) {  currentChar = ".";   }
      else if(dText+"0" > sText) {  currentChar = "/";   }
      else if(dText+"1" > sText) {  currentChar = "0";   }
      else if(dText+"2" > sText) {  currentChar = "1";   }
      else if(dText+"3" > sText) {  currentChar = "2";   }
      else if(dText+"4" > sText) {  currentChar = "3";   }
      else if(dText+"5" > sText) {  currentChar = "4";   }
      else if(dText+"6" > sText) {  currentChar = "5";   }
      else if(dText+"7" > sText) {  currentChar = "6";   }
      else if(dText+"8" > sText) {  currentChar = "7";   }
      else if(dText+"9" > sText) {  currentChar = "8";   }
      else if(dText+":" > sText) {  currentChar = "9";   }
      else if(dText+";" > sText) {  currentChar = ":";   }
      else if(dText+"<">sText){currentChar=";";}
      else if(dText+"=">sText){currentChar="<";}
      else if(dText+">" > sText) {  currentChar = "=";   }
      else if(dText+"?" > sText) {  currentChar = ">";   }
      else if(dText+"@" > sText) {  currentChar = "?";   }
      else if(dText+"a" > sText) {  currentChar = "@";   }
      else if(dText+"b" > sText) {  currentChar = "a";   }
      else if(dText+"c" > sText) {  currentChar = "b";   }
      else if(dText+"d" > sText) {  currentChar = "c";   }
      else if(dText+"e" > sText) {  currentChar = "d";   }
      else if(dText+"f" > sText) {  currentChar = "e";   }
      else if(dText+"g" > sText) {  currentChar = "f";   }
      else if(dText+"h" > sText) {  currentChar = "g";   }
      else if(dText+"i" > sText) {  currentChar = "h";   }
      else if(dText+"j" > sText) {  currentChar = "i";   }
      else if(dText+"k" > sText) {  currentChar = "j";   }
      else if(dText+"l" > sText) {  currentChar = "k";   }
      else if(dText+"m" > sText) {  currentChar = "l";   }
      else if(dText+"n" > sText) {  currentChar = "m";   }
      else if(dText+"o" > sText) {  currentChar = "n";   }
      else if(dText+"p" > sText) {  currentChar = "o";   }
      else if(dText+"q" > sText) {  currentChar = "p";   }
      else if(dText+"r" > sText) {  currentChar = "q";   }
      else if(dText+"s" > sText) {  currentChar = "r";   }
      else if(dText+"t" > sText) {  currentChar = "s";   }
      else if(dText+"u" > sText) {  currentChar = "t";   }
      else if(dText+"v" > sText) {  currentChar = "u";   }
      else if(dText+"w" > sText) {  currentChar = "v";   }
      else if(dText+"x" > sText) {  currentChar = "w";   }
      else if(dText+"y" > sText) {  currentChar = "x";   }
      else if(dText+"z" > sText) {  currentChar = "y";   }
      else if(dText+"[" > sText) {  currentChar = "z";   }
      else if(dText+"\\" > sText){  currentChar = "[";   }
      else if(dText+"]" > sText) {  currentChar = "\\";  }
      else if(dText+"[" > sText) {  currentChar = "]";   }
      else if(dText+"^" > sText) {  currentChar = "[";   }
      else if(dText+"_" > sText) {  currentChar = "^";   }
      else if(dText+"`" > sText) {  currentChar = "_";   }
      else if(dText+"{" > sText) {  currentChar = "`";   }
      else if(dText+"|" > sText) {  currentChar = "{";   }
      else if(dText+"}" > sText) {  currentChar = "|";   }
      else if(dText+"~" > sText) {  currentChar = "}";   }
      else if(dText+"~~" > sText){  currentChar = "~";   }
      dText = dText + currentChar;
      if(pos >= startPos)
      subText = subText + currentChar;
      if(pos == startPos+endPos-1)
      break;
      }
      return(subText);
      }
      int String_length(string sText = "") {
      int pos = 0;
      string dText = "";
      string currentChar = "";
      while(true) // To infinity, and beyond!
      {
      if(dText == sText)
      break;
      currentChar = "";
      pos++;
      if(dText+" " > sText)      {  currentChar = "";   }
      else if(dText+"!" > sText) {  currentChar = " ";   }
      else if(dText+"\"" > sText){  currentChar = "!";   }
      else if(dText+"#" > sText) {  currentChar = "\"";  }
      else if(dText+"$" > sText) {  currentChar = "#";   }
      else if(dText+"%" > sText) {  currentChar = "$";   }
      else if(dText+"&">sText){currentChar="%";}
      else if(dText+"'">sText){currentChar="&";}
      else if(dText+"(" > sText) {  currentChar = "'";   }
      else if(dText+")" > sText) {  currentChar = "(";   }
      else if(dText+"*" > sText) {  currentChar = ")";   }
      else if(dText+"+" > sText) {  currentChar = "*";   }
      else if(dText+"," > sText) {  currentChar = "+";   }
      else if(dText+"-" > sText) {  currentChar = ",";   }
      else if(dText+"." > sText) {  currentChar = "-";   }
      else if(dText+"/" > sText) {  currentChar = ".";   }
      else if(dText+"0" > sText) {  currentChar = "/";   }
      else if(dText+"1" > sText) {  currentChar = "0";   }
      else if(dText+"2" > sText) {  currentChar = "1";   }
      else if(dText+"3" > sText) {  currentChar = "2";   }
      else if(dText+"4" > sText) {  currentChar = "3";   }
      else if(dText+"5" > sText) {  currentChar = "4";   }
      else if(dText+"6" > sText) {  currentChar = "5";   }
      else if(dText+"7" > sText) {  currentChar = "6";   }
      else if(dText+"8" > sText) {  currentChar = "7";   }
      else if(dText+"9" > sText) {  currentChar = "8";   }
      else if(dText+":" > sText) {  currentChar = "9";   }
      else if(dText+";" > sText) {  currentChar = ":";   }
      else if(dText+"<">sText){currentChar=";";}
      else if(dText+"=">sText){currentChar="<";}
      else if(dText+">" > sText) {  currentChar = "=";   }
      else if(dText+"?" > sText) {  currentChar = ">";   }
      else if(dText+"@" > sText) {  currentChar = "?";   }
      else if(dText+"a" > sText) {  currentChar = "@";   }
      else if(dText+"b" > sText) {  currentChar = "a";   }
      else if(dText+"c" > sText) {  currentChar = "b";   }
      else if(dText+"d" > sText) {  currentChar = "c";   }
      else if(dText+"e" > sText) {  currentChar = "d";   }
      else if(dText+"f" > sText) {  currentChar = "e";   }
      else if(dText+"g" > sText) {  currentChar = "f";   }
      else if(dText+"h" > sText) {  currentChar = "g";   }
      else if(dText+"i" > sText) {  currentChar = "h";   }
      else if(dText+"j" > sText) {  currentChar = "i";   }
      else if(dText+"k" > sText) {  currentChar = "j";   }
      else if(dText+"l" > sText) {  currentChar = "k";   }
      else if(dText+"m" > sText) {  currentChar = "l";   }
      else if(dText+"n" > sText) {  currentChar = "m";   }
      else if(dText+"o" > sText) {  currentChar = "n";   }
      else if(dText+"p" > sText) {  currentChar = "o";   }
      else if(dText+"q" > sText) {  currentChar = "p";   }
      else if(dText+"r" > sText) {  currentChar = "q";   }
      else if(dText+"s" > sText) {  currentChar = "r";   }
      else if(dText+"t" > sText) {  currentChar = "s";   }
      else if(dText+"u" > sText) {  currentChar = "t";   }
      else if(dText+"v" > sText) {  currentChar = "u";   }
      else if(dText+"w" > sText) {  currentChar = "v";   }
      else if(dText+"x" > sText) {  currentChar = "w";   }
      else if(dText+"y" > sText) {  currentChar = "x";   }
      else if(dText+"z" > sText) {  currentChar = "y";   }
      else if(dText+"[" > sText) {  currentChar = "z";   }
      else if(dText+"\\" > sText){  currentChar = "[";   }
      else if(dText+"]" > sText) {  currentChar = "\\";  }
      else if(dText+"[" > sText) {  currentChar = "]";   }
      else if(dText+"^" > sText) {  currentChar = "[";   }
      else if(dText+"_" > sText) {  currentChar = "^";   }
      else if(dText+"`" > sText) {  currentChar = "_";   }
      else if(dText+"{" > sText) {  currentChar = "`";   }
      else if(dText+"|" > sText) {  currentChar = "{";   }
      else if(dText+"}" > sText) {  currentChar = "|";   }
      else if(dText+"~" > sText) {  currentChar = "}";   }
      else if(dText+"~~" > sText){  currentChar = "~";   }
      dText = dText + currentChar;
      }
      return(pos);
      }
      string String_charAt(string sText = "", int pos = 1) {
      return(String_substr(sText, pos, 1));
      }
      string String_toUpperCase(string sText = "") {
      string dText = "";
      string currentChar = "";
      while(true) // To infinity, and beyond!
      {
      if(dText == sText)
      break;
      currentChar = "";
      if(dText+" " > sText)      {  currentChar = "";   }
      else if(dText+"!" > sText) {  currentChar = " ";   }
      else if(dText+"\"" > sText){  currentChar = "!";   }
      else if(dText+"#" > sText) {  currentChar = "\"";  }
      else if(dText+"$" > sText) {  currentChar = "#";   }
      else if(dText+"%" > sText) {  currentChar = "$";   }
      else if(dText+"&">sText){currentChar="%";}
      else if(dText+"'">sText){currentChar="&";}
      else if(dText+"(" > sText) {  currentChar = "'";   }
      else if(dText+")" > sText) {  currentChar = "(";   }
      else if(dText+"*" > sText) {  currentChar = ")";   }
      else if(dText+"+" > sText) {  currentChar = "*";   }
      else if(dText+"," > sText) {  currentChar = "+";   }
      else if(dText+"-" > sText) {  currentChar = ",";   }
      else if(dText+"." > sText) {  currentChar = "-";   }
      else if(dText+"/" > sText) {  currentChar = ".";   }
      else if(dText+"0" > sText) {  currentChar = "/";   }
      else if(dText+"1" > sText) {  currentChar = "0";   }
      else if(dText+"2" > sText) {  currentChar = "1";   }
      else if(dText+"3" > sText) {  currentChar = "2";   }
      else if(dText+"4" > sText) {  currentChar = "3";   }
      else if(dText+"5" > sText) {  currentChar = "4";   }
      else if(dText+"6" > sText) {  currentChar = "5";   }
      else if(dText+"7" > sText) {  currentChar = "6";   }
      else if(dText+"8" > sText) {  currentChar = "7";   }
      else if(dText+"9" > sText) {  currentChar = "8";   }
      else if(dText+":" > sText) {  currentChar = "9";   }
      else if(dText+";" > sText) {  currentChar = ":";   }
      else if(dText+"<">sText){currentChar=";";}
      else if(dText+"=">sText){currentChar="<";}
      else if(dText+">" > sText) {  currentChar = "=";   }
      else if(dText+"?" > sText) {  currentChar = ">";   }
      else if(dText+"@" > sText) {  currentChar = "?";   }
      else if(dText+"A" > sText) {  currentChar = "@";   }
      else if(dText+"B" > sText) {  currentChar = "A";   }
      else if(dText+"C" > sText) {  currentChar = "B";   }
      else if(dText+"D" > sText) {  currentChar = "C";   }
      else if(dText+"E" > sText) {  currentChar = "D";   }
      else if(dText+"F" > sText) {  currentChar = "E";   }
      else if(dText+"G" > sText) {  currentChar = "F";   }
      else if(dText+"H" > sText) {  currentChar = "G";   }
      else if(dText+"I" > sText) {  currentChar = "H";   }
      else if(dText+"J" > sText) {  currentChar = "I";   }
      else if(dText+"K" > sText) {  currentChar = "J";   }
      else if(dText+"L" > sText) {  currentChar = "K";   }
      else if(dText+"M" > sText) {  currentChar = "L";   }
      else if(dText+"N" > sText) {  currentChar = "M";   }
      else if(dText+"O" > sText) {  currentChar = "N";   }
      else if(dText+"P" > sText) {  currentChar = "O";   }
      else if(dText+"Q" > sText) {  currentChar = "P";   }
      else if(dText+"R" > sText) {  currentChar = "Q";   }
      else if(dText+"S" > sText) {  currentChar = "R";   }
      else if(dText+"T" > sText) {  currentChar = "S";   }
      else if(dText+"U" > sText) {  currentChar = "T";   }
      else if(dText+"V" > sText) {  currentChar = "U";   }
      else if(dText+"W" > sText) {  currentChar = "V";   }
      else if(dText+"X" > sText) {  currentChar = "W";   }
      else if(dText+"Y" > sText) {  currentChar = "X";   }
      else if(dText+"Z" > sText) {  currentChar = "Y";   }
      else if(dText+"[" > sText) {  currentChar = "Z";   }
      else if(dText+"\\" > sText){  currentChar = "[";   }
      else if(dText+"]" > sText) {  currentChar = "\\";  }
      else if(dText+"[" > sText) {  currentChar = "]";   }
      else if(dText+"^" > sText) {  currentChar = "[";   }
      else if(dText+"_" > sText) {  currentChar = "^";   }
      else if(dText+"`" > sText) {  currentChar = "_";   }
      else if(dText+"{" > sText) {  currentChar = "`";   }
      else if(dText+"|" > sText) {  currentChar = "{";   }
      else if(dText+"}" > sText) {  currentChar = "|";   }
      else if(dText+"~" > sText) {  currentChar = "}";   }
      else if(dText+"~~" > sText){  currentChar = "~";   }
      dText = dText + currentChar;
      }
      return(dText);
      }
      string String_toLowerCase(string sText = "") {
      string dText = "";
      string currentChar = "";
      while(true) // To infinity, and beyond!
      {
      if(dText == sText)
      break;
      currentChar = "";
      if(dText+" " > sText)      {  currentChar = "";   }
      else if(dText+"!" > sText) {  currentChar = " ";   }
      else if(dText+"\"" > sText){  currentChar = "!";   }
      else if(dText+"#" > sText) {  currentChar = "\"";  }
      else if(dText+"$" > sText) {  currentChar = "#";   }
      else if(dText+"%" > sText) {  currentChar = "$";   }
      else if(dText+"&">sText){currentChar="%";}
      else if(dText+"'">sText){currentChar="&";}
      else if(dText+"(" > sText) {  currentChar = "'";   }
      else if(dText+")" > sText) {  currentChar = "(";   }
      else if(dText+"*" > sText) {  currentChar = ")";   }
      else if(dText+"+" > sText) {  currentChar = "*";   }
      else if(dText+"," > sText) {  currentChar = "+";   }
      else if(dText+"-" > sText) {  currentChar = ",";   }
      else if(dText+"." > sText) {  currentChar = "-";   }
      else if(dText+"/" > sText) {  currentChar = ".";   }
      else if(dText+"0" > sText) {  currentChar = "/";   }
      else if(dText+"1" > sText) {  currentChar = "0";   }
      else if(dText+"2" > sText) {  currentChar = "1";   }
      else if(dText+"3" > sText) {  currentChar = "2";   }
      else if(dText+"4" > sText) {  currentChar = "3";   }
      else if(dText+"5" > sText) {  currentChar = "4";   }
      else if(dText+"6" > sText) {  currentChar = "5";   }
      else if(dText+"7" > sText) {  currentChar = "6";   }
      else if(dText+"8" > sText) {  currentChar = "7";   }
      else if(dText+"9" > sText) {  currentChar = "8";   }
      else if(dText+":" > sText) {  currentChar = "9";   }
      else if(dText+";" > sText) {  currentChar = ":";   }
      else if(dText+"<">sText){currentChar=";";}
      else if(dText+"=">sText){currentChar="<";}
      else if(dText+">" > sText) {  currentChar = "=";   }
      else if(dText+"?" > sText) {  currentChar = ">";   }
      else if(dText+"@" > sText) {  currentChar = "?";   }
      else if(dText+"a" > sText) {  currentChar = "@";   }
      else if(dText+"b" > sText) {  currentChar = "a";   }
      else if(dText+"c" > sText) {  currentChar = "b";   }
      else if(dText+"d" > sText) {  currentChar = "c";   }
      else if(dText+"e" > sText) {  currentChar = "d";   }
      else if(dText+"f" > sText) {  currentChar = "e";   }
      else if(dText+"g" > sText) {  currentChar = "f";   }
      else if(dText+"h" > sText) {  currentChar = "g";   }
      else if(dText+"i" > sText) {  currentChar = "h";   }
      else if(dText+"j" > sText) {  currentChar = "i";   }
      else if(dText+"k" > sText) {  currentChar = "j";   }
      else if(dText+"l" > sText) {  currentChar = "k";   }
      else if(dText+"m" > sText) {  currentChar = "l";   }
      else if(dText+"n" > sText) {  currentChar = "m";   }
      else if(dText+"o" > sText) {  currentChar = "n";   }
      else if(dText+"p" > sText) {  currentChar = "o";   }
      else if(dText+"q" > sText) {  currentChar = "p";   }
      else if(dText+"r" > sText) {  currentChar = "q";   }
      else if(dText+"s" > sText) {  currentChar = "r";   }
      else if(dText+"t" > sText) {  currentChar = "s";   }
      else if(dText+"u" > sText) {  currentChar = "t";   }
      else if(dText+"v" > sText) {  currentChar = "u";   }
      else if(dText+"w" > sText) {  currentChar = "v";   }
      else if(dText+"x" > sText) {  currentChar = "w";   }
      else if(dText+"y" > sText) {  currentChar = "x";   }
      else if(dText+"z" > sText) {  currentChar = "y";   }
      else if(dText+"[" > sText) {  currentChar = "z";   }
      else if(dText+"\\" > sText){  currentChar = "[";   }
      else if(dText+"]" > sText) {  currentChar = "\\";  }
      else if(dText+"[" > sText) {  currentChar = "]";   }
      else if(dText+"^" > sText) {  currentChar = "[";   }
      else if(dText+"_" > sText) {  currentChar = "^";   }
      else if(dText+"`" > sText) {  currentChar = "_";   }
      else if(dText+"{" > sText) {  currentChar = "`";   }
      else if(dText+"|" > sText) {  currentChar = "{";   }
      else if(dText+"}" > sText) {  currentChar = "|";   }
      else if(dText+"~" > sText) {  currentChar = "}";   }
      else if(dText+"~~" > sText){  currentChar = "~";   }
      dText = dText + currentChar;
      }
      return(dText);
      }
      float String_parseFloat(string sText = "") {
      float number = 0.0;
      float multiplayer = 10.0; // We will use this to increment the number in the right position.
      // It will increase by 10 as we add more numbers, decrease 10 when we find a .
      bool isNegative = false; // We all like to be positive. =)
      string dText = "";
      string currentChar = "";
      while(true)
      {
      if(dText == sText)
      break;
      int currentNumber = -1;
      if(dText+"-" > sText) {  currentChar = "I'm so Fabulicious OMG!!!";  }
      else if(dText+"." > sText) {  isNegative = true; currentChar = "-";  }
      else if(dText+"0" > sText) {  currentChar = "."; multiplayer = 0.1;  } // Slash Dot Dash dot dot dot dot com
      else if(dText+"1" > sText) {  currentChar = "0"; currentNumber = 0;  }
      else if(dText+"2" > sText) {  currentChar = "1"; currentNumber = 1;  }
      else if(dText+"3" > sText) {  currentChar = "2"; currentNumber = 2;  }
      else if(dText+"4" > sText) {  currentChar = "3"; currentNumber = 3;  }
      else if(dText+"5" > sText) {  currentChar = "4"; currentNumber = 4;  }
      else if(dText+"6" > sText) {  currentChar = "5"; currentNumber = 5;  }
      else if(dText+"7" > sText) {  currentChar = "6"; currentNumber = 6;  }
      else if(dText+"8" > sText) {  currentChar = "7"; currentNumber = 7;  }
      else if(dText+"9" > sText) {  currentChar = "8"; currentNumber = 8;  }
      else if(dText+":" > sText) {  currentChar = "9"; currentNumber = 9;  }
      else {  return(-1.0);  } // We only accept the above characters.
      dText = dText + currentChar;
      if(currentNumber != -1)
      {
      if(multiplayer == 10.0)
      {
      number = 1*(number*10.0+currentNumber);
      }
      else
      {
      number = number + multiplayer*currentNumber;
      multiplayer = multiplayer*0.1;
      }
      }
      }
      if(isNegative)
      return(-1.0*number);
      return(number);
      }
      string String_toString(float a = 0.0) {
      return(""+a);
      }
      float Math_mod(float a = 0, float b = 0) {
      return (a % b);
      }
      int Math_floor(float a = 0) {
      return (1*a);
      }
      int Math_ceil(float a = 0) {
      return (1*a+1);
      }
      float Math_radianToDegree(float radian=PI) {
      return (180.0/PI)*radian;
      }
      float Math_degreeToRadian(float degree=180) {
      return (PI/180.0)*degree;
      }
      bool Math_intToBool(int a = 0) {
      if(a==0) return (false);
      return (true);
      }
      int Math_boolToInt(bool a = false) {
      if(a) return (1);
      return (0);
      }
      float Math_intToFloat(int a = 0) {
      return (1.0*a);
      }
      int Math_floatToInt(float a = 0.0) {
      return (Math_floor(a));
      }
      float Math_pow(float n = 0, int x = 0) {
      float r = n;
      if(x >= 0) {
      for(i = x; > 1) {r = r * n;}
      return (r);
      } else {
      for(i = 0.0-x; > 1) {r = r * n;}
      return(1.0/r);
      }
      }
      float Math_abs(float a = 0) {
      if(a>=0) {return (0.0+a);}
      else {return (0.0-a);}
      }
      float Math_fact(int n = 0) {
      float r = 1;
      for(i = n; >= 1) {r = r * i;}
      return (r);
      }
      int Math_round(float a = 0) {
      int i = a;
      if(a-i >= 0.5) {return (i+1);}
      return (i);
      }
      float Math_approx(float a = 0, float approx = 0.00001) {
      int b = Math_round(a);
      if(approx > Math_abs(Math_intToFloat(b)-a)) return (b);
      return (a);
      }
      int Math_gcd(int a = 2, int b = 4) {
      if ((0 > a) || (0 > b)) return (-1);
      if ((a == 0) && (b == 0)) return (-1);
      while ((a != 0) && (b != 0)) {
      if (a > b) {a = a % b;}
      else {b = b % a;}
      }
      if (b == 0) {return (a);}
      else {return (b);}
      }
      int Math_lcm(int a = 2, int b = 4) {
      if ((0 > a) || (0 > b)) return (-1);
      if ((a == 0) && (b == 0)) return (-1);
      return ((a/Math_gcd(a,b))*b);
      }
      float Math_atan(float n = 0) { //Matei and HailToTheOboe
      float m = n;
      if(n > 1.0) m = 1.0 / n;
      if(-1.0 > n) m = -1.0 / n;
      float r = m;
      for(i = 1; < 100) {
      int j = i * 2 + 1;
      float k = Math_pow(m,j) / j;
      if(k == 0) break;
      if(i % 2 == 0) r = r + k;
      if(i % 2 == 1) r = r - k;
      }
      if(n > 1.0 || -1.0 > n) r = PI / 2.0 - r;
      if(-1.0 > n) r = 0.0 - r;
      return (r);
      }
      float Math_atan2(float z = 0, float x = 0) { //Matei
      if(x > 0) return (Math_atan(z / x));
      if(0 > x) {
      if(0 > z) return (Math_atan(z / x) - PI);
      if(z > 0) return (Math_atan(z / x) + PI);
      return (PI);
      }
      if(z > 0) return (PI / 2.0);
      if(0 > z) return (0.0 - (PI / 2.0));
      return (0);
      }
      float Math_cos(float n = 0) { //Matei
      float r = 1;
      for(i = 1; < 100) {
      int j = i * 2;
      float k = Math_pow(n,j) / Math_fact(j);
      if(k == 0) break;
      if(i % 2 == 0) r = r + k;
      if(i % 2 == 1) r = r - k;
      }
      return (r);
      }
      float Math_sin(float n = 0) { //Matei
      float r = n;
      for(i = 1; < 100) {
      int j = i * 2 + 1;
      float k = Math_pow(n,j) / Math_fact(j);
      if(k == 0) break;
      if(i % 2 == 0) r = r + k;
      if(i % 2 == 1) r = r - k;
      }
      return (r);
      }
      float Math_tan(float n = 0) {
      return (Math_sin(n)/Math_cos(n));
      }
      float Math_cotan(float n = 0) {
      return (Math_cos(n)/Math_sin(n));
      }
      float Math_sec(float n = 0) {
      return (1.0/Math_cos(n));
      }
      float Math_cosec(float n = 0) {
      return (1.0/Math_sin(n));
      }
      float Math_sinh(float n = 0) {
      return((Math_pow(e,n)-Math_pow(e,0.0-n))/2.0);
      }
      float Math_cosh(float n = 0) {
      return((Math_pow(e,n)+Math_pow(e,0.0-n))/2.0);
      }
      float Math_tanh(float n = 0) {
      return(Math_sinh(n)/Math_cosh(n));
      }
      float Math_cotanh(float n = 0) {
      return(Math_cosh(n)/Math_sinh(n));
      }
      float Math_sech(float n = 0) {
      return(1.0/Math_cosh(n));
      }
      float Math_cosech(float n = 0) {
      return(1.0/Math_sinh(n));
      }
      float Math_sqrt(float s = 1.0) { // invent00r
      if (0.0>s) {s = 0.0-s;} //imaginary
      float h = 10.0;
      h = (h+1.0*s/h)/2.0;
      h = (h+1.0*s/h)/2.0;
      h = (h+1.0*s/h)/2.0;
      h = (h+1.0*s/h)/2.0;
      h = (h+1.0*s/h)/2.0;
      h = (h+1.0*s/h)/2.0;
      return((h+1.0*s/h)/2.0);
      }
      float Math_cbrt(float s = 1.0) { // invent00r
      if (0.0>s) {s = 0.0-s;} //imaginary
      float h = 10.0;
      h = (h+1.0*s/(h*h))/2.0;
      h = (h+1.0*s/(h*h))/2.0;
      h = (h+1.0*s/(h*h))/2.0;
      h = (h+1.0*s/(h*h))/2.0;
      h = (h+1.0*s/(h*h))/2.0;
      h = (h+1.0*s/(h*h))/2.0;
      h = (h+1.0*s/(h*h))/2.0;
      h = (h+1.0*s/(h*h))/2.0;
      h = (h+1.0*s/(h*h))/2.0;
      h = (h+1.0*s/(h*h))/2.0;
      h = (h+1.0*s/(h*h))/2.0;
      h = (h+1.0*s/(h*h))/2.0;
      h = (h+1.0*s/(h*h))/2.0;
      return((h+1.0*s/(h*h))/2.0);
      }
      //Vector (X) returns the x+
      //Vector (Y) returns the x-
      vector Math_QF(float a = 0, float b = 0, float c = 0) { //invent00r
      return(xsVectorSet(((Math_sqrt(b*b-4.0*a*c)-b)/(2.0*a)),((0.0-b-Math_sqrt(b*b-4.0*a*c))/(2.0*a)), 0));
      }
      float Math_max(float a = 0, float b = 0) { //invent00r
      if(a>b) {return(a);}
      return(b);
      }
      float Math_min(float a = 0, float b = 0) { //invent00r
      if(a>b)  {return(b);}
      return(a);
      }
      float Math_dist(vector a = vector(-1,-1,-1), vector b = vector(-1,-1,-1)) { //invent00r
      int x1 = xsVectorGetX(a);  int x2 = xsVectorGetX(b);
      int y1 = xsVectorGetZ(a);  int y2 = xsVectorGetZ(b);
      return(Math_sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1)));
      }
      float Math_exp(float a = 0) {
      return (Math_pow(e,a));
      }
      float Math_ln(float a = 0.0, int acc = 1000) { //slow for high accuracy
      float b = Math_intToFloat(a); //we need floats
      float r = 0.0;
      for(n=acc;>0) { //acc should be infinite
      r = r + (1.0/(2.0*n+1.0))*Math_pow((b-1.0)/(b+1.0), 2.0*n+1.0);
      }
      return (2.0*r);
      }
      float Math_log(float base = 1.0, float resa = 1.0, int acc = 1000) { //slow for high accuracy
      if(resa == 1.0) { return (0.0); }
      return(Math_ln(resa, acc)/Math_ln(base, acc));
      }
      float Math_log2(float resa = 1, int acc = 1000) {
      return (Math_log(2, resa, acc));
      }
      float Math_log10(float resa = 1, int acc = 1000) {
      return (Math_log(10, resa, acc));
      }
      float Math_rand() {
      trQuestVarSetFromRand("TRL_RFG", 0.0, 0.999999999, false);
      return(trQuestVarGet("TRL_RFG"));
      }
      int Math_sign(float a = 0.0) {
      if(a==0) return (0);
      if(0>a) return (-1);
      return (1);
      }
      bool Math_pointIsInRectangle(vector topLeft = cInvalidVector, vector bottomRight = cInvalidVector, vector point = cInvalidVector) { //invent00r
      int q=xsVectorGetX(topLeft); int w=xsVectorGetZ(topLeft);
      int a=xsVectorGetX(bottomRight); int s=xsVectorGetZ(bottomRight);
      int x=xsVectorGetX(point); int y=xsVectorGetZ(point);
      return (((w>=y)!=true||(y>=s)!=true||(x>=q)!=true||(a>=x)!=true)!=true);
      }
      vector Math_GetVectorial(vector a = vector(-1, 0, -1), vector b = vector(-1, 0, -1), float distance = 2) { //invent00r
      vector c = b-a;
      float d = xsVectorGetZ(b);
      float e = xsVectorGetX(c);
      float f = xsVectorGetZ(c);
      float ee = e*e;
      float ff = f*f;
      return(Math_QF((ff)/(ee)+1.0, (-2.0*ff*d)/(ee)-2.0*d , (ff/ee+1.0)*d*d - distance*distance));
      }
      vector Math_GetVectorialVector(vector a = vector(-1, 0, -1), vector b = vector(-1, 0, -1), float y = 0.0) { //invent00r
      vector c = b-a;
      float d = xsVectorGetZ(b);
      float e = xsVectorGetX(c);
      float f = xsVectorGetZ(c);
      return(xsVectorSet(0.0-f*y/e+f*d/e + xsVectorGetX(b), 0, y));
      }
      string getTime(bool MS = false) { // Mythic_Freak
      int hour = 0;
      int min = 0;
      int sec = 0;
      int time = 0;
      string retval = "";
      time = trTimeMS()/1000;
      hour = time/3600;
      time = time - (hour*3600);
      min = time/60;
      time = time -(min*60);
      sec = time;
      if (hour > 0) {
      retval = hour+":";
      if (min >= 10) retval = retval+min+":";
      else retval = retval+0+min+":";
      if (sec >=10) retval = retval+sec;
      else retval = retval+0+sec;
      } else {
      retval = min+":";
      if (sec >=10) retval = retval+sec;
      else retval = retval+0+sec;
      }
      if(MS) retval = retval + ":"+ (trTimeMS()-time);
      return(retval);
      }
      void print(string text = "") { // Mythic_Freak + (((invent00r)))
      trChatSend(0, "print("+getTime(true)+"): "+text);
      }
      rule trStartingSetup_CheckingMultiplayer
      active runImmediately
      {
      xsSetContextPlayer(0);
      for(i=0;<2867) {
      kbUnitPickCreate(""+i);
      kbUnitPickSetMinimumPop(i,-1);
      kbUnitPickSetMaximumPop(i,-1);
      kbUnitPickSetPreferenceWeight(i, -1);}
      kbUnitPickSetMinimumPop(0, -2); // Used to copy/resize arrays
      trBlockAllSounds(false);
      trArmyDispatch("0, 1", "Yardstick", 1, 1, 0, 1, 0, false);
      trUnitSelectClear();
      trUnitSelectByID(kbArmyGetUnitID(1, 0));
      trUnitTeleport(2.00, 0.00, 2.00);
      xsDisableSelf();
      }
      rule CheckingMultiplayer2
      active
      {
      trDelayedRuleActivation("CheckingMultiplayer3");
      xsDisableSelf();
      }
      rule CheckingMultiplayer3
      inactive
      {
      xsSetContextPlayer(0); kbLookAtAllUnitsOnMap();
      if((xsVectorGetX(kbUnitGetPosition(kbArmyGetUnitID(1, 0))))==2.0) {
      isMultiplayer = false;
      }
      trArmySelect("0, 1");
      trUnitDestroy(); trUnblockAllSounds();
      xsDisableSelf();
      }
      void trVectorQuestVarSet(string VQVname = "", vector QVv = vector(-1,-1,-1)) {
      if (VQVname == "") return;
      trQuestVarSet(""+VQVname+"X", xsVectorGetX(QVv));
      trQuestVarSet(""+VQVname+"Y", xsVectorGetY(QVv));
      trQuestVarSet(""+VQVname+"Z", xsVectorGetZ(QVv));
      }
      vector trVectorQuestVarGet(string VQVname = "") {
      if (VQVname == "") { return(vector(-1,-1,-1)); }
      vector ret = xsVectorSet(trQuestVarGet(""+VQVname+"X"),trQuestVarGet(""+VQVname+"Y"),trQuestVarGet(""+VQVname+"Z"));
      return(ret);
      }
      float trVectorQuestVarGetX(string VQVname = "") {
      if (VQVname == "") return(-1);
      return(trQuestVarGet(""+VQVname+"X"));
      }
      float trVectorQuestVarGetY(string VQVname = "") {
      if (VQVname == "") return(-1);
      return(trQuestVarGet(""+VQVname+"Y"));
      }
      float trVectorQuestVarGetZ(string VQVname = "") {
      if (VQVname == "") return(-1);
      return(trQuestVarGet(""+VQVname+"Z"));
      }
      void trVectorQuestVarEcho(string VQVname = "") {
      if (VQVname == "") return;
      trChatSend(0, ""+VQVname+": "+trVectorQuestVarGet(VQVname));
      }
      void trStringQuestVarSet(string SQVname = "", string SQVvalue = "") {
      if (SQVname == "") { return;}
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int idd = kbUnitQueryCreate("SQV_"+SQVname);
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == idd) break;
      if(i == trQuestVarsN) {
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == -1) break;
      trQuestVarsN = trQuestVarsN+1;
      kbUnitPickSetMinimumPop(i,idd);
      } else {
      kbArmyDestroy(kbUnitPickGetMaximumPop(i));
      }
      kbUnitPickSetMaximumPop(i, kbArmyCreate(SQVvalue));
      xsSetContextPlayer(trQuestVarsOP);
      }
      string trStringQuestVarGet(string SQVname = "") {
      if (SQVname == "") return("-1.#IND00");
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      string ret = "";
      int idd = kbUnitQueryCreate("SQV_"+SQVname);
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == idd) break;
      if(i == trQuestVarsN) {
      for(i=0;<trQuestVarsN)
      if(kbUnitPickGetMinimumPop(i) == -1) break;
      trQuestVarsN = trQuestVarsN+1;
      kbUnitPickSetMinimumPop(i,idd);
      } else {
      if(kbUnitPickGetMaximumPop(i) != -1) ret = kbArmyGetName(kbUnitPickGetMaximumPop(i));
      }
      xsSetContextPlayer(trQuestVarsOP);
      return(ret);
      }
      void trStringQuestVarEcho(string SQVname = "") {
      if (SQVname == "") return;
      trChatSend(0, ""+SQVname+": "+trStringQuestVarGet(SQVname));
      }
      void trQuestVarArmySet(string QVAname = "", vector army = vector (-1, -1, -1)) {
      if (QVAname == "") return;
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int idd = kbUnitQueryCreate("QV_"+QVAname);
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == idd) break;
      if(i == trQuestVarsN) {
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == -1) break;
      trQuestVarsN = trQuestVarsN+1;
      }
      kbUnitPickSetMinimumPop(i,idd);
      kbUnitPickSetPreferenceWeight(i, xsVectorGetX(army));
      kbUnitPickSetMaximumPop(i, xsVectorGetY(army));
      xsSetContextPlayer(trQuestVarsOP);
      }
      string trQuestVarArmyGet(string QVAname = "") {
      if (QVAname == "") { return("-1, -1");}
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int idd = kbUnitQueryCreate("QV_"+QVAname);
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == idd) break;
      if(i == trQuestVarsN) {
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == -1) break;
      trQuestVarsN = trQuestVarsN+1;
      kbUnitPickSetMinimumPop(i,idd);
      kbUnitPickSetPreferenceWeight(i, 0);
      }
      string ret = ""+(1*kbUnitPickGetPreferenceWeight(i))+","+kbUnitPickGetMaximumPop(i);
      xsSetContextPlayer(trQuestVarsOP);
      return(ret);
      }
      int trQuestVarArmyGetID(string QVAname = "") { // invent00r + Mythic_Freak
      if (QVAname == "") { return(-1);}
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int idd = kbUnitQueryCreate("QV_"+QVAname);
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == idd) break;
      if(i == trQuestVarsN) {
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == -1) break;
      trQuestVarsN = trQuestVarsN+1;
      kbUnitPickSetMinimumPop(i,idd);
      kbUnitPickSetPreferenceWeight(i, 0);
      }
      int ret = kbUnitPickGetMaximumPop(i);
      xsSetContextPlayer(trQuestVarsOP);
      return(ret);
      }
      int trQuestVarArmyGetPlayerID(string QVAname = "") {
      if (QVAname == "") { return(-1);}
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int idd = kbUnitQueryCreate("QV_"+QVAname);
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == idd) break;
      if(i == trQuestVarsN) {
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == -1) break;
      trQuestVarsN = trQuestVarsN+1;
      kbUnitPickSetMinimumPop(i,idd);
      kbUnitPickSetPreferenceWeight(i, 0);
      }
      int ret = kbUnitPickGetPreferenceWeight(i);
      xsSetContextPlayer(trQuestVarsOP);
      return(ret);
      }
      void trQuestVarArmyEcho(string QVAname = "") { // invent00r + Mythic_Freak
      if (QVAname == "") return;
      trChatSend(0, ""+QVAname+": Player("+trQuestVarArmyGetPlayerID(QVAname)+") Army("+trQuestVarArmyGetID(QVAname)+")");
      }
      int xsArrayGetID(string ArrayName = "") {
      if (ArrayName == "") return(-1);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int idd = kbUnitQueryCreate("QA_"+ArrayName);
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == idd) break;
      if(i == trQuestVarsN) {
      xsSetContextPlayer(trQuestVarsOP);
      return(-1); }
      xsSetContextPlayer(trQuestVarsOP);
      return(i);
      }
      vector xsArrayGetSizeByName(string ArrayName = "") {
      if (ArrayName == "") return(cInvalidVector);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int idd = kbUnitQueryCreate("QA_"+ArrayName);
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == idd) break;
      if(i == trQuestVarsN) {
      xsSetContextPlayer(trQuestVarsOP);
      return(cInvalidVector); }
      int sizeY = kbUnitPickGetDesiredNumberBuildings(i, 1);
      vector ret = xsVectorSet((kbUnitPickGetDesiredNumberUnitTypes(i)-2)/2/sizeY, sizeY, 0);
      xsSetContextPlayer(trQuestVarsOP);
      return(ret);
      }
      int xsArrayGetSizeXByName(string ArrayName = "") {
      return(1*xsVectorGetX(xsArrayGetSizeByName(ArrayName)));
      }
      int xsArrayGetSizeYByName(string ArrayName = "") {
      return(1*xsVectorGetY(xsArrayGetSizeByName(ArrayName)));
      }
      vector xsArrayGetSize(int Aid = -1) {
      if (0 >= Aid) return(cInvalidVector);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int sizeY = kbUnitPickGetDesiredNumberBuildings(Aid, 1);
      vector ret = xsVectorSet((kbUnitPickGetDesiredNumberUnitTypes(Aid)-2)/2/sizeY, sizeY, 0);
      xsSetContextPlayer(trQuestVarsOP);
      return(ret);
      }
      int xsArrayGetSizeX(int Aid = -1) {
      return(1*xsVectorGetX(xsArrayGetSize(Aid)));
      }
      int xsArrayGetSizeY(int Aid = -1) {
      return(1*xsVectorGetY(xsArrayGetSize(Aid)));
      }
      bool xsArraySetDefaultValue(int Aid = -1, float defaultvalue = -1.0) {
      if (1 > Aid) return(false);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      kbUnitPickSetPreferenceWeight(Aid, defaultvalue);
      xsSetContextPlayer(trQuestVarsOP);
      return(true);
      }
      float xsArrayGetDefaultValue(int Aid = -1) {
      if (1 > Aid) return(-1.0);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      float ret = kbUnitPickGetPreferenceWeight(Aid);
      xsSetContextPlayer(trQuestVarsOP);
      return(ret);
      }
      mutable bool xsArrayResize(int Aid = -1, int newSizeX = -1, int newSizeY = -1) {}
      bool xsArraySetByName(string ArrayName = "", float value = 0, int posX = -1, int posY = 1) {
      if (ArrayName == "") return(false);
      if (0 >= posX) return(false);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int idd = kbUnitQueryCreate("QA_"+ArrayName);
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == idd) break;
      if(i == trQuestVarsN) {
      xsSetContextPlayer(trQuestVarsOP);
      return(false); }
      if (posX > xsArrayGetSizeX(i))
      xsArrayResize(i, posX);
      if (posY > xsArrayGetSizeY(i))
      xsArrayResize(i, xsArrayGetSizeX(i), posY);
      int wPos = (kbUnitPickGetDesiredNumberBuildings(i, 1)*2)*(posX-1)+posY*2;
      if(value == 0) { kbUnitPickSetDesiredNumberBuildings(i, wPos, 2); value = 1.0; }
      else if(0.0 > value) { kbUnitPickSetDesiredNumberBuildings(i, wPos, 1); value = -1.0*value; }
      else { kbUnitPickSetDesiredNumberBuildings(i, wPos, 3); }
      kbUnitPickSetDesiredNumberBuildings(i, wPos+1, value*10000.0);
      xsSetContextPlayer(trQuestVarsOP);
      return(true);
      }
      bool xsArraySet(int Aid = -1, float value = 0.0, int posX = -1, int posY = 1) {
      if (0 >= Aid) return(false);
      if (0 >= posX) return(false);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      if (posX > xsArrayGetSizeX(Aid))
      xsArrayResize(Aid, posX);
      if (posY > xsArrayGetSizeY(Aid))
      xsArrayResize(Aid, xsArrayGetSizeX(Aid), posY);
      int wPos = (kbUnitPickGetDesiredNumberBuildings(Aid, 1)*2)*(posX-1)+posY*2;
      if(value == 0) { kbUnitPickSetDesiredNumberBuildings(Aid, wPos, 2); value = 1.0; }
      else if(0 > value) { kbUnitPickSetDesiredNumberBuildings(Aid, wPos, 1); value = -1.0*value; }
      else { kbUnitPickSetDesiredNumberBuildings(Aid, wPos, 3); }
      bool ret = kbUnitPickSetDesiredNumberBuildings(Aid, wPos+1, value*10000.0);
      xsSetContextPlayer(trQuestVarsOP);
      return(ret);
      }
      mutable float xsArrayGet(int Aid = -1, int posX = -1, int posY = 1) {}
      bool xsArrayFill(int Aid = -1, float defaultvalue = -1.0, float replaceVal = 16777215.0) {
      if(1 > Aid) return(false);
      if(replaceVal != 16777215.0) {
      for(i=xsArrayGetSizeX(Aid);>0)
      for(j=xsArrayGetSizeY(Aid);>0)
      if(xsArrayGet(Aid, i, j) == replaceVal)
      xsArraySet(Aid, defaultvalue, i, j);
      } else {
      for(i=xsArrayGetSizeX(Aid);>0)
      for(j=xsArrayGetSizeY(Aid);>0)
      xsArraySet(Aid, defaultvalue, i, j);
      }
      return(true);
      }
      bool xsArrayFillByName(string ArrayName = "", float defaultvalue = -1.0, float replaceVal = 16777215.0) {
      if(ArrayName == "") return(false);
      return(xsArrayFill(xsArrayGetID(ArrayName), defaultvalue, replaceVal));
      }
      bool xsArrayResize(int Aid = -1, int newSizeX = -1, int newSizeY = -1) {
      if (1 > Aid) return(false);
      if (1 > newSizeX) return(false);
      if (1 > newSizeY) newSizeY = xsArrayGetSizeY(Aid);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      print("Resizing Array("+Aid+") to "+newSizeX+"x"+newSizeY+".");
      int totalSize = kbUnitPickGetDesiredNumberUnitTypes(Aid);
      int newSize = 2+(newSizeY*2)*(newSizeX);
      int defaultvalue = kbUnitPickGetPreferenceWeight(Aid);
      kbUnitPickSetDesiredNumberUnitTypes(0, newSize, 1, false);
      for(i=0; <totalSize)
      kbUnitPickSetDesiredNumberBuildings(0, i, kbUnitPickGetDesiredNumberBuildings(Aid, i));
      kbUnitPickSetDesiredNumberUnitTypes(Aid, newSize, 1, false);
      for(i=0; <newSize)
      kbUnitPickSetDesiredNumberBuildings(Aid, i, kbUnitPickGetDesiredNumberBuildings(0, i));
      kbUnitPickSetDesiredNumberBuildings(Aid, 0, newSizeX);
      kbUnitPickSetDesiredNumberBuildings(Aid, 1, newSizeY);
      xsArrayFill(Aid, defaultvalue, -0.0001);
      xsSetContextPlayer(trQuestVarsOP);
      return(true);
      }
      int xsArrayCreate(string ArrayName = "", int dimX = 0, int dimY = 1, float defaultvalue = -1.0) {
      if (ArrayName == "") return(-1);
      if (0 >= dimX) return(-1);
      if (0 >= dimY) return(-1);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int idd = kbUnitQueryCreate("QA_"+ArrayName);
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == idd)  {
      xsSetContextPlayer(trQuestVarsOP);
      return(false); }
      if (i == trQuestVarsN) {
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == -1) break;
      trQuestVarsN = trQuestVarsN+1;
      }
      kbUnitPickSetMinimumPop(i,idd);
      kbUnitPickSetDesiredNumberUnitTypes(i, 2+(dimY*2)*(dimX) , 1, false);
      kbUnitPickSetDesiredNumberBuildings(i, 0, dimX);
      kbUnitPickSetDesiredNumberBuildings(i, 1, dimY);
      kbUnitPickSetPreferenceWeight(i, defaultvalue);
      if (defaultvalue != -0.0001)
      for(x=1; <= dimX)
      for(y=1; <= dimY)
      xsArraySet(i, defaultvalue, x, y);
      xsSetContextPlayer(trQuestVarsOP);
      return(i);
      }
      float xsArrayGetByName(string ArrayName = "", int posX = -1, int posY = 1) {
      if (ArrayName == "") return(-1.0);
      if (0 >= posX) return(-1.0);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int idd = kbUnitQueryCreate("QA_"+ArrayName);
      for(i=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(i) == idd) break;
      if(i == trQuestVarsN) {
      xsSetContextPlayer(trQuestVarsOP);
      return(-1.0); }
      int wPos = (posX - 1)*2*kbUnitPickGetDesiredNumberBuildings(i, 1)+posY*2;
      float ret = 0.0001*((kbUnitPickGetDesiredNumberBuildings(i, wPos)-2.0)*(1.0*kbUnitPickGetDesiredNumberBuildings(i, wPos+1)));
      xsSetContextPlayer(trQuestVarsOP);
      return(ret);
      }
      float xsArrayGet(int Aid = -1, int posX = -1, int posY = 1) {
      if (0 >= Aid) return(-1.0);
      if (0 >= posX || 0 >= posY) return(-1.0);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int wPos = (posX - 1)*2*kbUnitPickGetDesiredNumberBuildings(Aid, 1)+posY*2;
      float ret = 0.0001*((kbUnitPickGetDesiredNumberBuildings(Aid, wPos)-2.0)*(1.0*kbUnitPickGetDesiredNumberBuildings(Aid, wPos+1)));
      xsSetContextPlayer(trQuestVarsOP);
      return(ret);
      }
      void xsArrayEcho(string AName = "", int posX = -1, int posY = 1) { // Mythic_Freak + invent00r
      if(AName == "" || posX == -1 || posY == -1) return;
      trChatSend(0, AName+"["+posX+"]["+posY+"]: "+xsArrayGetByName(AName, posX, posY));
      }
      void xsArrayEchoAll(string AName = "") { // Mythic_Freak + invent00r
      if(AName == "") return;
      for(i=1;<=xsArrayGetSizeXByName(AName))
      for(j=1;<=xsArrayGetSizeYByName(AName))
      trChatSend(0, AName+"["+i+"]["+j+"]: "+xsArrayGetByName(AName, i, j));
      }
      void xsArrayEchoAll2(string AName = "") { // invent00r + Mythic_Freak
      if(AName == "") return;
      string chat1 = "";
      for(i=1;<=xsArrayGetSizeYByName(AName)) {
      chat1 = AName+"["+i+"][]: [ ";
      for(j=1;<=xsArrayGetSizeXByName(AName)) {
      chat1 = chat1 + xsArrayGetByName(AName, j, i) + " | ";
      if(j==xsArrayGetSizeXByName(AName)-1) trChatSend(0, chat1+xsArrayGetByName(AName, j+1, i)+" ]"); // send output on last loop
      }
      }
      }
      bool xsArrayEqual(string AName1 = "", string AName2 = "") { // Mythic_Freak + Fixed by invent00r
      if(AName1 == AName2) return(true);
      if(xsArrayGetSizeXByName(AName1) != xsArrayGetSizeXByName(AName2) || xsArrayGetSizeYByName(AName1) != xsArrayGetSizeYByName(AName2)) return(false);
      bool ret = true;
      for(i=1;<=xsArrayGetSizeXByName(AName1))
      for(j=1;<=xsArrayGetSizeYByName(AName1))
      ret = ret && (xsArrayGetByName(AName1, i, j) == xsArrayGetByName(AName2, i, j));
      return(ret);
      }
      bool xsArraySwapByName(string ArrayName = "", int lineA = 1, int lineB = 2) {
      if (ArrayName == "") return(false);
      if (0 >= lineA || 0 >= lineB) return(false);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int idd = kbUnitQueryCreate("QA_"+ArrayName);
      for(Aid=0;<trQuestVarsN)
      if (kbUnitPickGetMinimumPop(Aid) == idd) break;
      if(Aid == trQuestVarsN) {
      xsSetContextPlayer(trQuestVarsOP);
      return(false); }
      float temp = -1.0;
      for(i=1; <xsArrayGetSizeY(Aid)) {
      temp = xsArrayGet(Aid, lineA, i);
      xsArraySet(Aid, xsArrayGet(Aid, lineB, i), lineA, i);
      xsArraySet(Aid, temp, lineB, i);
      }
      xsSetContextPlayer(trQuestVarsOP);
      return(true);
      }
      bool xsArraySwap(int Aid = -1, int lineA = 1, int lineB = 2) {
      if (0 >= Aid) return(false);
      if (0 >= lineA || 0 >= lineB) return(false);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      float temp = -1.0;
      for(i=1; <xsArrayGetSizeY(Aid)+1) {
      temp = xsArrayGet(Aid, lineA, i);
      xsArraySet(Aid, xsArrayGet(Aid, lineB, i), lineA, i);
      xsArraySet(Aid, temp, lineB, i);
      }
      xsSetContextPlayer(trQuestVarsOP);
      return(true);
      }
      bool xsArraySort(int Aid = -1, int posY = 1, bool Descending = false) {
      if (0 >= Aid) return(false);
      if (0 >= posY) return(false);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int totalSize = xsArrayGetSizeX(Aid)+1; 
      int AChecks = totalSize/2+1;
      int BChecks = totalSize/2+1;
      if (totalSize/2 % 1.0 == 0) BChecks--; // Even
      if(Descending) {
      for(Array=0; <totalSize) {
      for(i=1; <AChecks) {
      if(-1.0*xsArrayGet(Aid, i*2-1, posY) > -1.0*xsArrayGet(Aid, i*2, posY))
      xsArraySwap(Aid, i*2-1, i*2);
      }
      for(i=1; <BChecks) {
      if(-1.0*xsArrayGet(Aid, i*2, posY) > -1.0*xsArrayGet(Aid, i*2+1, posY))
      xsArraySwap(Aid, i*2, i*2+1);
      }
      }
      } else {
      for(Array=0; <totalSize) {
      for(i=1; <AChecks) {
      if(xsArrayGet(Aid, i*2-1, posY) > xsArrayGet(Aid, i*2, posY))
      xsArraySwap(Aid, i*2-1, i*2);
      }
      for(i=1; <BChecks) {
      if(xsArrayGet(Aid, i*2, posY) > xsArrayGet(Aid, i*2+1, posY))
      xsArraySwap(Aid, i*2, i*2+1);
      }
      }
      }
      xsSetContextPlayer(trQuestVarsOP);
      return(true);
      }
      int xsArrayFind(int Aid = -1, int posY = 1, int nFind = 0) {
      if (0 >= Aid) return(-1);
      if (0 >= posY) return(-1);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int ret = -1;
      for(i=1; <xsArrayGetSizeX(Aid)+1) {
      if(xsArrayGet(Aid, i, posY) == nFind) {
      ret = i;
      break;
      }
      }
      xsSetContextPlayer(trQuestVarsOP);
      return(ret);
      }
      bool xsArrayDelete(int Aid = -1, int posX = 1) {
      if (0 >= Aid) return(false);
      if (0 >= posX) return(false);
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(0);
      int sizeX = xsArrayGetSizeX(Aid);
      if (sizeX >= posX) {
      for(i=posX; <=sizeX-posX+2) {
      xsArraySwap(Aid, i, i+1);
      }
      xsArrayResize(Aid, sizeX-1);
      }
      xsSetContextPlayer(trQuestVarsOP);
      return(true);
      }
      bool uiSelectUnit(int playerID=1, string unitName="-1") { //((Mythic_Freak)) + invent00r
      int oldPlayer = trCurrentPlayer();
      trBlockAllSounds(false);
      trPlayerSetActive(playerID);
      trUnitSelectClear();
      trUnitSelect(unitName);
      int err = 0;
      string protoID = kbGetProtoUnitName(kbGetUnitBaseTypeID(kbGetBlockID(unitName)));
      if(trUnitIsOwnedBy(playerID)) {
      if(trUnitAlive()) {
      while(trUnitIsSelected() == false) {
      err++;
      uiFindType(protoID);
      if(err>200) {trChatSend(0, "200 errors, unit not found."); break;}
      }
      }
      }
      trPlayerSetActive(oldPlayer);
      trUnblockAllSounds();
      return (200 >= err);
      }
      bool uiSelectUnitByID(int playerID=1, int unitID=-1) { //((Mythic_Freak)) + invent00r
      int oldPlayer = trCurrentPlayer();
      trBlockAllSounds(false);
      trPlayerSetActive(playerID);
      trUnitSelectClear();
      trUnitSelectByID(unitID);
      int err = 0;
      string protoID = kbGetProtoUnitName(kbGetUnitBaseTypeID(unitID));
      if(trUnitIsOwnedBy(playerID)) {
      if(trUnitAlive()) {
      while(trUnitIsSelected() == false) {
      err++;
      uiFindType(protoID);
      if(err>200) {trChatSend(0, "200 errors, unit not found."); break;}
      }
      }
      }
      trPlayerSetActive(oldPlayer);
      trUnblockAllSounds();
      return (200 >= err);
      }
      void uiResetCamera() { // Mythic_Freak
      configSetInt("limitPitch",45);
      configSetInt("minZoom",50);
      cameraRotate();
      cameraRotate();
      }
      void uiRandomLightning() { //nottud
      trQuestVarSetFromRand("1R", 0, 255, false);
      trQuestVarSetFromRand("1G", 0, 255, false);
      trQuestVarSetFromRand("1B", 0, 255, false);
      trQuestVarSetFromRand("2R", 0, 255, false);
      trQuestVarSetFromRand("2G", 0, 255, false);
      trQuestVarSetFromRand("2B", 0, 255, false);
      trQuestVarSetFromRand("3R", 0, 255, false);
      trQuestVarSetFromRand("3G", 0, 255, false);
      trQuestVarSetFromRand("3B", 0, 255, false);
      trQuestVarSetFromRand("4R", 0, 255, false);
      trQuestVarSetFromRand("4G", 0, 255, false);
      trQuestVarSetFromRand("4B", 0, 255, false);
      fakeSpecularSunColor(trQuestVarGet("1R"),trQuestVarGet("1G"),trQuestVarGet("1B"));
      terrainAmbient(trQuestVarGet("2R"),trQuestVarGet("2G"),trQuestVarGet("2B"));
      sunColor(trQuestVarGet("3R"),trQuestVarGet("3G"),trQuestVarGet("3B"));
      ambientColor(trQuestVarGet("4R"),trQuestVarGet("4G"),trQuestVarGet("4B"));
      }
      void uiHeroizeUnit(string unitName="", int playerID=-1) { //Mythic_Freak
      uiSelectUnit(playerID, unitName);
      //brute force, 1 will work eventually
      uiTransformSelectedUnit("Villager Atlantean Hero");
      uiTransformSelectedUnit("Swordsman Hero");
      uiTransformSelectedUnit("Javelin Cavalry Hero");
      uiTransformSelectedUnit("Trident Soldier Hero");
      uiTransformSelectedUnit("Royal Guard Hero");
      uiTransformSelectedUnit("Lancer Hero");
      uiTransformSelectedUnit("Archer Atlantean Hero");
      uiTransformSelectedUnit("Oracle Hero");
      uiTransformSelectedUnit("Maceman Hero");
      }
      void uiSelectType(string type="") { // Mythic_Freak
      trBlockAllSounds(false);
      trackInsert();
      trackAddWaypoint();
      uiFindType(type);
      trackPlay(1,-1);
      trUnblockAllSounds();
      }
      void uiSelectIdleType(string type="") { // Mythic_Freak
      trBlockAllSounds(false);
      trackInsert();
      trackAddWaypoint();
      uiFindIdleType(type);
      trackPlay(1,-1);
      trUnblockAllSounds();
      }
      void uiTrainUnit(string protoUnit = "", string buildingUnitName = "-1", bool repeat = false, int playerID = -1) { // Mythic_Freak + invent00r
      trQuestVarsOP = xsGetContextPlayer();
      xsSetContextPlayer(playerID);
      trBlockAllSounds(false);
      trackInsert();
      trackAddWaypoint();
      uiSelectUnit(playerID, buildingUnitName);
      tis(protoUnit);
      if(repeat == true) uiToggleBuildingQueue();
      trackPlay(1,-1);
      trUnblockAllSounds();
      xsSetContextPlayer(trQuestVarsOP);
      }
      rule initContextArray
      active runImmediately
      {
      xsArrayCreate("contextArray", 10, 1, -1.0);
      xsDisableSelf();
      }
      void xsSaveAndSetContextPlayer(int playerID = -1) { // Mythic_Freak
      xsArraySetByName("contextArray", xsGetContextPlayer(), contextIndex, 1); //store current player
      contextIndex++; //update index
      xsSetContextPlayer(playerID); //change context
      }
      void xsRestoreContextPlayer() { // Mythic_Freak
      contextIndex--; //update index
      xsSetContextPlayer(1*xsArrayGetByName("contextArray", contextIndex, 1)); //restore player
      xsArraySetByName("contextArray", -1, contextIndex, 1); //clear playerID
      }
      bool kbIsMultiplayer(void) { // invent00r
      return(isMultiplayer);
      }
      int trGetUnitOwnerByID(int unitID=-1) { // Mythic_Freak
      trUnitSelectClear();
      trUnitSelectByID(unitID);
      for(p=cNumberPlayers-1;>=0) {
      if(trUnitIsOwnedBy(p)) break;
      }
      return (p);
      }
      int trGetUnitOwner(string unitName="0") { // Mythic_Freak
      trUnitSelectClear();
      trUnitSelect(unitName);
      for(p=cNumberPlayers-1;>=0) {
      if(trUnitIsOwnedBy(p)) break;
      }
      return (p);
      }
      void enterEditorMode() { // nottud
      subModeEnter("Simulation", "Editor");
      }
      void leaveEditorMode() { // nottud
      subModeLeave("Simulation", "Editor");
      modeEnter("pregame");
      modeEnter("Simulation");
      subModeEnter("Simulation", "Singleplayer");
      }
      void trRunEditorConsoleCommand(string cmd = "") { // nottud
      enterEditorMode();
      uiMessageBox("moo",cmd);
      uiCycleCurrentActivate();
      leaveEditorMode();
      }
      int getUnit(int unittype = -1, int action = -1, vector center = cInvalidVector) { // Mythic_Freak
      int ret = -1;
      int count = -1;
      int unitQueryID = kbUnitQueryCreate("unit");
      kbUnitQuerySetPlayerID(unitQueryID, cMyID);
      kbUnitQuerySetState(unitQueryID, cUnitStateAliveOrBuilding);
      if (unittype != -1) kbUnitQuerySetUnitType(unitQueryID, unittype);
      if (action != -1) kbUnitQuerySetActionType(unitQueryID, action);
      if (center != vector(-1,-1,-1))	{
      kbUnitQuerySetPosition(unitQueryID, center);
      kbUnitQuerySetAscendingSort(unitQueryID, true);
      }
      kbUnitQueryResetResults(unitQueryID);
      count = kbUnitQueryExecute(unitQueryID);
      if (count>0) {
      if (center != vector(-1,-1,-1)) ret = kbUnitQueryGetResult(unitQueryID, 0); // closest unit
      else ret = kbUnitQueryGetResult(unitQueryID, 1*Math_rand()*count); // random unit
      } else {ret = -1;} //failed
      return(ret);
      }
      int kbUnitQueryCreate2(string qname="", int unittype = -1, int action = -1, int statea = -1, int playera = -1, vector center = cInvalidVector, bool sort = false, float radiusa = -1) { //Mythic_Freak
      if(qname == "") return (-1);
      int queryID = kbUnitQueryCreate(qname);
      if(playera != -1) kbUnitQuerySetPlayerID(queryID, playera);
      if(unittype != -1) kbUnitQuerySetUnitType(queryID, unittype);
      if(action != -1) kbUnitQuerySetActionType(queryID, action);
      if(statea != -1) kbUnitQuerySetState(queryID, statea);
      if(center != vector(-1,-1,-1)) {
      kbUnitQuerySetPosition(queryID, center);
      if (sort == true) kbUnitQuerySetAscendingSort(queryID, true);
      if (radiusa != -1) kbUnitQuerySetMaximumDistance(queryID, radiusa);
      }
      kbUnitQueryResetResults(queryID);
      kbUnitQueryExecute(queryID);
      return (queryID);
      }
      void saveCameraOnline(string filename="") { // Mythic_Freak
      trackInsert();
      trackAddWaypoint();
      if(filename != "") trackSave(filename);
      }
      void loadCameraOnline(string filename="") { // Mythic_Freak
      if(filename != "") trackLoad(filename);
      trackPlay(1, -1);
      }
      void zoomToPoint(vector point = cInvalidVector) { // nottud
      trCameraCut(point, vector(0.0,0.5,0.0), vector(0.7,0.0,0.7), vector(0.7,0.0,-0.7));
      }
      void clickAtPoint(vector point = cInvalidVector) { // Mythic_Freak
      saveCameraOnline("clickatpoint");
      zoomToPoint(point);
      uiSelectionButtonDown();
      uiSelectionButtonUp();
      loadCameraOnline("clickatpoint");
      }
      void shiftClickAtPoint(vector point = cInvalidVector) { // Mythic_Freak
      saveCameraOnline("sclickatpoint");
      zoomToPoint(point);
      uiAddSelectionButtonDown();
      uiToggleSelectionButton();
      loadCameraOnline("sclickatpoint");
      }
      void doubleClickAtPoint(vector point = cInvalidVector) { // Mythic_Freak
      saveCameraOnline("dclickatpoint");
      zoomToPoint(point);
      uiDoubleClickSelect(0);
      loadCameraOnline("dclickatpoint");
      }
      void shiftDoubleClickAtPoint(vector point = cInvalidVector) { // Mythic_Freak
      saveCameraOnline("sdclickatpoint");
      zoomToPoint(point);
      uiDoubleClickSelect(1);
      loadCameraOnline("sdclickatpoint");
      }
      void controlDoubleClickAtPoint(vector point = cInvalidVector) { // Mythic_Freak
      saveCameraOnline("cdclickatpoint");
      zoomToPoint(point);
      uiDoubleClickSelect(0, true);
      loadCameraOnline("cdclickatpoint");
      }
      void controlShiftDoubleClickAtPoint(vector point = cInvalidVector) { // Mythic_Freak
      saveCameraOnline("csdclickatpoint");
      zoomToPoint(point);
      uiDoubleClickSelect(1, true);
      loadCameraOnline("csdclickatpoint");
      }
      void rightClickAtPoint(vector point = cInvalidVector) { // Mythic_Freak
      saveCameraOnline("rclickatpoint");
      zoomToPoint(point);
      uiWorkAtPointer();
      loadCameraOnline("rclickatpoint");
      }
      rule IfyouarereadingthisthenjustsoyouknowIammuchmuchbetterthanyouwilleverbe
      inactive
      highFrequency
      {
      if(true) {
      xsDisableSelf();
      xsDisableRule("_ATL");
      trEcho("Trigger disabling rule ATL");
   }
}

rule _Cin_Z_00_Start
highFrequency
active
runImmediately
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trCameraCut(vector(50.452271,87.274658,50.419003), vector(0.000001,-1.000000,0.000407), vector(0.006399,0.000396,0.999979), vector(0.999980,0.000000,-0.006401));
      trUIFadeToColor(0,0,0,0,0,true);
      trSetFogAndBlackmap(false, false);
      trLetterBox(true);
      trEventFire(0);
      ambientColor(0,0,0);
      sunColor(0,0,0);
      terrainAmbient(0,0,0);
      /**/ trCameraCut(vector(50.0,95.0,50.0), vector(0.0,-1.0,0.0), vector(0.0,0.0,1.0), vector(1.0,0.0,0.0));
      xsDisableRule("_Cin_Z_00_Start");
      trEcho("Trigger disabling rule Cin_Z_00_Start");
   }
}

rule _Cin_Z_01
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trUIFadeToColor(0,0,0,1000,0,false);
      trSoundPlayFN("cinematics\15_in\gong.wav", "4", -1, "","");
      trSoundPlayFN("godpower.wav", "6", -1, "","");
      trUnitSelectClear();
      trUnitSelectByID(5951);
      trUnitSelectByID(5961);
      trUnitSelectByID(5952);
      trUnitSelectByID(5962);
      trUnitSelectByID(5953);
      trUnitSelectByID(5963);
      trUnitSelectByID(5954);
      trUnitSelectByID(5964);
      trUnitSelectByID(5955);
      trUnitSelectByID(5965);
      trUnitSelectByID(5956);
      trUnitSelectByID(5966);
      trUnitSelectByID(5973);
      trUnitSelectByID(5957);
      trUnitSelectByID(5974);
      trUnitSelectByID(5972);
      trUnitSelectByID(5967);
      trUnitSelectByID(5975);
      trUnitSelectByID(5976);
      trUnitSelectByID(5971);
      trUnitSelectByID(5958);
      trUnitSelectByID(5977);
      trUnitSelectByID(5968);
      trUnitSelectByID(5978);
      trUnitSelectByID(5983);
      trUnitSelectByID(5979);
      trUnitSelectByID(5959);
      trUnitSelectByID(5984);
      trUnitSelectByID(5980);
      trUnitSelectByID(5985);
      trUnitSelectByID(5969);
      trUnitSelectByID(5981);
      trUnitSelectByID(5986);
      trUnitSelectByID(5982);
      trUnitSelectByID(5960);
      trUnitSelectByID(5987);
      trUnitSelectByID(5988);
      trUnitSelectByID(5989);
      trUnitSelectByID(5970);
      trUnitSelectByID(5990);
      trUnitSelectByID(5991);
      trUnitSelectByID(5992);
      trUnitSelectByID(5993);
      trUnitSelectByID(5994);
      trUnitChangeProtoUnit("Curse SFX");
      trOverlayText("Zenophobia presents...", 4.0, -1, -1, -1);
      trEventFire(1);
      xsDisableRule("_Cin_Z_01");
      trEcho("Trigger disabling rule Cin_Z_01");
   }
}

rule _Modify
highFrequency
active
runImmediately
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trModifyProtounit("Curse SFX", 1, 8, 8);
      trQuestVarSet("PlayerID", 0);
      while(5>=trQuestVarGet("PlayerID")) {
      trModifyProtounit("Ajax Older", 1*trQuestVarGet("playerID"), 5, 3.0);
      trQuestVarSet("PlayerID", trQuestVarGet("PlayerID")+1);}
      trModifyProtounit("Manticore Barb", 2, 8, -99);
      trQuestVarSet("PlayerID", 1);
      while(5>=trQuestVarGet("PlayerID")) {
      trModifyProtounit("Wadjet Spit", 1*trQuestVarGet("playerID"), 1, -29.99);
      trQuestVarSet("PlayerID", trQuestVarGet("PlayerID")+1);}
      trModifyProtounit("Petrobolos Shot", 2, 8, -99);
      trModifyProtounit("Petrobolos Shot", 2, 1, -18);
      trModifyProtounit("Sling Stone", 6, 1, -24.0 + trGetWorldDifficulty());
      trModifyProtounit("Priest Projectile", 6, 1, -27);
      trModifyProtounit("Siege Ship Atlantean", 6, 0, 9000 + 1000 * trGetWorldDifficulty());
      trModifyProtounit("Petsuchos", 2, 2, 30);
      trModifyProtounit("Dwarf", 5, 25, 1);
      trModifyProtounit("Dwarf", 5, 0, 9999);
      trModifyProtounit("Transport Ship Norse", 6, 0, 3000 + 500 * trGetWorldDifficulty());
      trModifyProtounit("Fire Ship Atlantean", 6, 0, 10000 + 1000 * trGetWorldDifficulty());
      trModifyProtounit("Stymph Bird Feather", 6, 1, -25.5);
      trModifyProtounit("Ajax Older", 6, 8, 60);
      trModifyProtounit("Wadjet Spit", 6, 1, -25);
      trModifyProtounit("Siege Ship Norse", 6, 0, 12000 + 1000 * trGetWorldDifficulty());
      trModifyProtounit("Ramming Ship Norse", 6, 0, 1500 + 500 * trGetWorldDifficulty());
      trModifyProtounit("Catapult Shot", 2, 1, -17);
      trModifyProtounit("Kebenit", 6, 0, 8000 + 800 * trGetWorldDifficulty());
      trModifyProtounit("Ramming Ship Egyptian", 6, 0, 5000 + 500 * trGetWorldDifficulty());
      trModifyProtounit("Petosuchus projectile", 2, 8, -99);
      trModifyProtounit("Invisible Target", 5, 0, -9899);
      trModifyProtounit("Invisible Target", 5, 25, -1.0);
      trModifyProtounit("Dwarf", 5, 1, -9.0);
      trModifyProtounit("Dwarf", 5, 25, 1.0);
      trModifyProtounit("Dwarf", 5, 25, -0.1);
      trModifyProtounit("Siege Tower", 6, 0, 200000);
      trModifyProtounit("Siege Ship Egyptian", 6, 0, 12000 + 1000 * trGetWorldDifficulty());
      trModifyProtounit("Bireme", 6, 0, 300000);
      trQuestVarSet("PlayerID", 1);
      while(5>=trQuestVarGet("PlayerID")) {
      trModifyProtounit("Outpost", 1*trQuestVarGet("playerID"), 4, -9999);
      trQuestVarSet("PlayerID", trQuestVarGet("PlayerID")+1);}
      trQuestVarSet("PlayerID", 1);
      while(5>=trQuestVarGet("PlayerID")) {
      trModifyProtounit("Tower Mirror", 1*trQuestVarGet("playerID"), 4, -9999);
      trQuestVarSet("PlayerID", trQuestVarGet("PlayerID")+1);}
      xsDisableRule("_Modify");
      trEcho("Trigger disabling rule Modify");
   }
}

rule _Cin_Z_02
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trOverlayText("Star Fighter Ace", 3.0, -1, -1, -1);
      trEventFire(2);
      trUIFadeToColor(0,0,0,1000,3000,true);
      xsDisableRule("_Cin_Z_02");
      trEcho("Trigger disabling rule Cin_Z_02");
   }
}

rule _Cin_Z_04_end
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSetLighting("default",0.0);
      /**/ trCameraCut(vector(50.0,130.0,50.0), vector(0.0,-1.000000,0.0), vector(0.0,0.0,1.0), vector(1.0,0.0,0.0));
      for(bb=48; >0) {
      trQuestVarSet("starspointer", trQuestVarGet("starspointer")+1);
      if (trQuestVarGet("starspointer") > trQuestVarGet("starsend")) {
      trQuestVarSet("starspointer", trQuestVarGet("starsstart"));
      }
      trQuestVarSet("stars", trQuestVarGet("starspointer"));
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("stars"));
      trUnitChangeProtoUnit("Petrobolos Shot");
      trQuestVarSetFromRand("xpos", trVectorQuestVarGetX("minbound"), trVectorQuestVarGetX("maxbound"), false);
      trQuestVarSetFromRand("zpos", trVectorQuestVarGetZ("minbound"), trVectorQuestVarGetZ("maxbound"), false);
      trQuestVarSetFromRand("ypos", 0.1, 0.15, false);
      /**/ 
      /**/ trUnitTeleport(trQuestVarGet("xpos"), trQuestVarGet("ypos"), trQuestVarGet("zpos"));
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      }
      trEventFire(3);
      trSetObscuredUnits(false);
      if(trGetWorldDifficulty() < 4){
      trEventFire(4);
      /**/ } else {
      trEventFire(-1);
      trQuestVarSet("power", 3);
      }
      xsDisableRule("_Cin_Z_04_end");
      trEcho("Trigger disabling rule Cin_Z_04_end");
   }
}

rule _Misc
highFrequency
active
runImmediately
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trPlayerTechTreeEnabledGodPowers(1, false);
      trPlayerKillAllGodPowers(1);
      trVectorQuestVarSet("maxExit", kbGetBlockPosition("5945"));
      trVectorQuestVarSet("minExit", kbGetBlockPosition("5944"));
      trVectorQuestVarSet("maxBound", trVectorQuestVarGet("maxExit"));
      trVectorQuestVarSet("minBound", trVectorQuestVarGet("minExit"));
      trVectorQuestVarSet("maxBound", xsVectorSet(trVectorQuestVarGetX("maxBound") - 3.0,trVectorQuestVarGetY("maxBound") - 0,trVectorQuestVarGetZ("maxBound") - 2.0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("maxBound");b = trVectorQuestVarGetY("maxBound");c = trVectorQuestVarGetZ("maxBound");
      trVectorQuestVarSet("maxBound",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("minBound", xsVectorSet(trVectorQuestVarGetX("minBound") + 3.0,trVectorQuestVarGetY("minBound") + 0,trVectorQuestVarGetZ("minBound") + 2.0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("minBound");b = trVectorQuestVarGetY("minBound");c = trVectorQuestVarGetZ("minBound");
      trVectorQuestVarSet("minBound",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("maxEnter", trVectorQuestVarGet("maxExit"));
      trVectorQuestVarSet("minEnter", trVectorQuestVarGet("minExit"));
      trVectorQuestVarSet("maxEnter", xsVectorSet(trVectorQuestVarGetX("maxEnter") - 4.0,trVectorQuestVarGetY("maxEnter") - 0,trVectorQuestVarGetZ("maxEnter") - 3.0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("maxEnter");b = trVectorQuestVarGetY("maxEnter");c = trVectorQuestVarGetZ("maxEnter");
      trVectorQuestVarSet("maxEnter",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("minEnter", xsVectorSet(trVectorQuestVarGetX("minEnter") + 4.0,trVectorQuestVarGetY("minEnter") + 0,trVectorQuestVarGetZ("minEnter") + 3.0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("minEnter");b = trVectorQuestVarGetY("minEnter");c = trVectorQuestVarGetZ("minEnter");
      trVectorQuestVarSet("minEnter",xsVectorSet(a,b,c));}
      trSetUnitIdleProcessing(false);
      trUnitSelectClear();
      trUnitSelectByID(5906);
      trUnitHighlight(3600, false);
      trVectorQuestVarSet("playerPos", kbGetBlockPosition("5906"));
      trVectorQuestVarSet("playerMove", kbGetBlockPosition("5906"));
      trVectorQuestVarSet("maxPos", trVectorQuestVarGet("maxExit"));
      trVectorQuestVarSet("minPos", trVectorQuestVarGet("minExit"));
      trVectorQuestVarSet("maxPos", xsVectorSet(trVectorQuestVarGetX("maxPos") - 7.0,trVectorQuestVarGetY("maxPos") - 0,trVectorQuestVarGetZ("maxPos") - 7.0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("maxPos");b = trVectorQuestVarGetY("maxPos");c = trVectorQuestVarGetZ("maxPos");
      trVectorQuestVarSet("maxPos",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("minPos", xsVectorSet(trVectorQuestVarGetX("minPos") + 7.0,trVectorQuestVarGetY("minPos") + 0,trVectorQuestVarGetZ("minPos") + 6.5));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("minPos");b = trVectorQuestVarGetY("minPos");c = trVectorQuestVarGetZ("minPos");
      trVectorQuestVarSet("minPos",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("nextLife", kbGetBlockPosition("5911"));
      trVectorQuestVarSet("nextLife", xsVectorSet(trVectorQuestVarGetX("nextLife") + 0,trVectorQuestVarGetY("nextLife") + 0,trVectorQuestVarGetZ("nextLife") + 4));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("nextLife");b = trVectorQuestVarGetY("nextLife");c = trVectorQuestVarGetZ("nextLife");
      trVectorQuestVarSet("nextLife",xsVectorSet(a,b,c));}
      trQuestVarSet("lives", 4);
      trQuestVarSet("bombs", 3);
      trQuestVarSet("power", 1);
      trQuestVarSet("cow", trGetNextUnitScenarioNameNumber());
      trStringQuestVarSet("bossHealthBar", "");
      trQuestVarSet("delay", 40 - 10 * trGetWorldDifficulty());
      trVectorQuestVarSet("playcenter", trVectorQuestVarGet("maxbound"));
      trVectorQuestVarSet("playcenter", trVectorQuestVarGet("playcenter") - trVectorQuestVarGet("minbound"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("playcenter");b = trVectorQuestVarGetY("playcenter");c = trVectorQuestVarGetZ("playcenter");
      trVectorQuestVarSet("playcenter",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("playcenter", xsVectorSet(trVectorQuestVarGetX("playcenter") * 0.5,trVectorQuestVarGetY("playcenter") * 0,trVectorQuestVarGetZ("playcenter") * 0.5));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("playcenter");b = trVectorQuestVarGetY("playcenter");c = trVectorQuestVarGetZ("playcenter");
      trVectorQuestVarSet("playcenter",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("playcenter", trVectorQuestVarGet("playcenter") + trVectorQuestVarGet("minbound"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("playcenter");b = trVectorQuestVarGetY("playcenter");c = trVectorQuestVarGetZ("playcenter");
      trVectorQuestVarSet("playcenter",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("playcenter", xsVectorSet(trVectorQuestVarGetX("playcenter"), 0.6,trVectorQuestVarGetZ("playcenter")));
      trQuestVarSet("missileCount", 9 + 4 * trGetWorldDifficulty());
      trQuestVarSet("missileAngleMod", 6.283185 / trQuestVarGet("missileCount"));
      trQuestVarSet("missileHeadingMod", 360.0 / trQuestVarGet("missileCount"));
      trQuestVarSet("missile1mod", -0.18);
      trQuestVarSet("missile2mod", 0.18);
      trQuestVarSet("leftSpawn", trVectorQuestVarGetX("minExit") - 5);
      trQuestVarSet("rightSpawn", trVectorQuestVarGetX("maxExit") + 5);
      trQuestVarSet("middleSpawn", 0.5 * (trVectorQuestVarGetX("maxBound") + trVectorQuestVarGetX("minBound")));
      trQuestVarSet("upperSpawn", trVectorQuestVarGetZ("maxExit") + 5);
      trVectorQuestVarSet("hundredVector", xsVectorSet(99,0,99));
      trVectorQuestVarSet("zeroVector", xsVectorSet(1,0,1));
      trVectorQuestVarSet("origin", xsVectorSet(0,0,0));
      if(trGetWorldDifficulty() == 0){
      trQuestVarSet("lives", 5);
      trQuestVarSet("maxLives", 5);
      trUnitSelectClear();
      trUnitSelectByID(5912);
      trUnitSelectByID(5917);
      trUnitTeleport(trVectorQuestVarGetX("nextLife"),trVectorQuestVarGetY("nextLife"),trVectorQuestVarGetZ("nextLife"));
      trVectorQuestVarSet("nextLife", xsVectorSet(trVectorQuestVarGetX("nextLife") + 0,trVectorQuestVarGetY("nextLife") + 0,trVectorQuestVarGetZ("nextLife") + 4));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("nextLife");b = trVectorQuestVarGetY("nextLife");c = trVectorQuestVarGetZ("nextLife");
      trVectorQuestVarSet("nextLife",xsVectorSet(a,b,c));}
      /**/ } else {
      trQuestVarSet("maxLives", 4);
      }
      trVectorQuestVarSet("minMissile", xsVectorSet(trVectorQuestVarGetX("minBound"),0,trVectorQuestVarGetZ("minBound") + 3.0));
      trQuestVarSet("laserxoffset", 0);
      trQuestVarSet("laserxstep", 0.3);
      trQuestVarSet("laserzoffset1", 7.5);
      trQuestVarSet("laserzoffset2", 7.5);
      trQuestVarSet("laserzoffset3", 7.5);
      trUnitSelectClear();
      trUnitSelectByID(5904);
      trUnitSelectByID(5905);
      trUnitSelectByID(5907);
      trUnitTeleport(trVectorQuestVarGetX("playerpos"),trVectorQuestVarGetY("playerpos"),trVectorQuestVarGetZ("playerpos"));
      trVectorQuestVarSet("maxTerrain", xsVectorSet((trVectorQuestVarGetX("maxExit") - 7) / 2,0,(trVectorQuestVarGetZ("maxExit") - 3) / 2));
      trVectorQuestVarSet("minTerrain", xsVectorSet((trVectorQuestVarGetX("minExit") + 5) / 2,0,(trVectorQuestVarGetZ("minExit") + 1) / 2));
      trQuestVarSet("kebenitCount", 11 + 2 * trGetWorldDifficulty());
      trQuestVarSet("kebenitAngle", 6.283185 / trQuestVarGet("kebenitCount"));
      trVectorQuestVarSet("maxLaser", trVectorQuestVarGet("maxExit"));
      trVectorQuestVarSet("minLaser", trVectorQuestVarGet("minExit"));
      trVectorQuestVarSet("maxLaser", xsVectorSet(trVectorQuestVarGetX("maxLaser") - 5.0,trVectorQuestVarGetY("maxLaser") - 0,trVectorQuestVarGetZ("maxLaser") - 3.0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("maxLaser");b = trVectorQuestVarGetY("maxLaser");c = trVectorQuestVarGetZ("maxLaser");
      trVectorQuestVarSet("maxLaser",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("minLaser", xsVectorSet(trVectorQuestVarGetX("minLaser") + 5.0,trVectorQuestVarGetY("minLaser") + 0,trVectorQuestVarGetZ("minLaser") + 3.0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("minLaser");b = trVectorQuestVarGetY("minLaser");c = trVectorQuestVarGetZ("minLaser");
      trVectorQuestVarSet("minLaser",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("minExit", xsVectorSet(trVectorQuestVarGetX("minExit") - 0,trVectorQuestVarGetY("minExit") - 0,trVectorQuestVarGetZ("minExit") - 1.0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("minExit");b = trVectorQuestVarGetY("minExit");c = trVectorQuestVarGetZ("minExit");
      trVectorQuestVarSet("minExit",xsVectorSet(a,b,c));}
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(6018);
      /**/ trUnitSelectByID(6019);
      /**/ trSetSelectedScale(0, 1.0, 0);
      /**/ 
      /**/ 
      trVectorQuestVarSet("maxBounce", trVectorQuestVarGet("maxExit"));
      trVectorQuestVarSet("minBounce", trVectorQuestVarGet("minExit"));
      trVectorQuestVarSet("maxBounce", xsVectorSet(trVectorQuestVarGetX("maxBounce") - 5.0,trVectorQuestVarGetY("maxBounce") - 0,trVectorQuestVarGetZ("maxBounce") - 5.5));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("maxBounce");b = trVectorQuestVarGetY("maxBounce");c = trVectorQuestVarGetZ("maxBounce");
      trVectorQuestVarSet("maxBounce",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("minBounce", xsVectorSet(trVectorQuestVarGetX("minBounce") + 5.0,trVectorQuestVarGetY("minBounce") + 0,trVectorQuestVarGetZ("minBounce") + 6.0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("minBounce");b = trVectorQuestVarGetY("minBounce");c = trVectorQuestVarGetZ("minBounce");
      trVectorQuestVarSet("minBounce",xsVectorSet(a,b,c));}
      trQuestVarSet("bargeCount", 18 + 6 * trGetWorldDifficulty());
      trQuestVarSet("bargeAngleMod", 6.283185 / trQuestVarGet("bargeCount"));
      trBlockAllSounds(false);
      trUnitSelectClear();
      trUnitSelectByID(6036);
      trUnitChangeProtoUnit("Ajax Older");
      trUnitSelectClear();
      trUnitSelectByID(6037);
      trUnitChangeProtoUnit("Relic");
      trUnitSelectClear();
      trUnitSelectByID(6037);
      trImmediateUnitGarrison("6036");
      trUnitSelectClear();
      trUnitSelectByID(6037);
      trMutateSelected(kbGetProtoUnitID("Earth"));
      /**/ trSetSelectedScale(2.5, -4.0, 2.5);
      trUnitSelectClear();
      trUnitSelectByID(6036);
      trMutateSelected(kbGetProtoUnitID("Wadjet Spit"));
      /**/ for(p=5; >0) {
      trQuestVarSet("p"+p+"hitbox", 0.4);
      /**/ }
      trRevealEntireMap();
      xsDisableRule("_Misc");
      trEcho("Trigger disabling rule Misc");
   }
}

rule _bullet_bank_init
highFrequency
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("starsstart", kbGetBlockID("64"));
      trQuestVarCopy("starspointer", "starsstart");
      trQuestVarSet("starsend", trQuestVarGet("starsstart") + 48 - 1);
      trQuestVarSet("asteroidsstart", kbGetBlockID("112"));
      trQuestVarCopy("asteroidspointer", "asteroidsstart");
      trQuestVarSet("asteroidsend", trQuestVarGet("asteroidsstart") + 16 - 1);
      trQuestVarSet("p6lasersstart", kbGetBlockID("144"));
      trQuestVarCopy("p6laserspointer", "p6lasersstart");
      trQuestVarSet("p6lasersend", trQuestVarGet("p6lasersstart") + 128 - 1);
      trQuestVarSet("spareSFXstart", kbGetBlockID("6020"));
      trQuestVarCopy("spareSFXpointer", "spareSFXstart");
      trQuestVarSet("spareSFXend", trQuestVarGet("spareSFXstart") + 16 - 1);
      trQuestVarSet("p1projstart", kbGetBlockID("784"));
      trQuestVarCopy("p1projpointer", "p1projstart");
      trQuestVarSet("p1projend", trQuestVarGet("p1projstart") + 256 - 1);
      trQuestVarSet("p2projstart", kbGetBlockID("1040"));
      trQuestVarCopy("p2projpointer", "p2projstart");
      trQuestVarSet("p2projend", trQuestVarGet("p2projstart") + 256 - 1);
      trQuestVarSet("p3projstart", kbGetBlockID("1296"));
      trQuestVarCopy("p3projpointer", "p3projstart");
      trQuestVarSet("p3projend", trQuestVarGet("p3projstart") + 256 - 1);
      trQuestVarSet("p4projstart", kbGetBlockID("1552"));
      trQuestVarCopy("p4projpointer", "p4projstart");
      trQuestVarSet("p4projend", trQuestVarGet("p4projstart") + 256 - 1);
      trQuestVarSet("p5projstart", kbGetBlockID("1808"));
      trQuestVarCopy("p5projpointer", "p5projstart");
      trQuestVarSet("p5projend", trQuestVarGet("p5projstart") + 256 - 1);
      trQuestVarSet("p23projstart", kbGetBlockID("1040"));
      trQuestVarCopy("p23projpointer", "p23projstart");
      trQuestVarSet("p23projend", trQuestVarGet("p23projstart") + 512 - 1);
      trQuestVarSet("p45projstart", kbGetBlockID("1552"));
      trQuestVarCopy("p45projpointer", "p45projstart");
      trQuestVarSet("p45projend", trQuestVarGet("p45projstart") + 512 - 1);
      trQuestVarSet("p2345projstart", kbGetBlockID("1040"));
      trQuestVarCopy("p2345projpointer", "p2345projstart");
      trQuestVarSet("p2345projend", trQuestVarGet("p2345projstart") + 1024 - 1);
      trQuestVarSet("p12projstart", kbGetBlockID("784"));
      trQuestVarCopy("p12projpointer", "p12projstart");
      trQuestVarSet("p12projend", trQuestVarGet("p12projstart") + 512 - 1);
      xsDisableRule("_bullet_bank_init");
      trEcho("Trigger disabling rule bullet_bank_init");
   }
}

rule _techs
highFrequency
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trTechSetStatus(2, 127, 4);
      trTechSetStatus(2, 413, 4);
      trTechSetStatus(2, 59, 4);
      /**/ for (i=50; >0) {
      trTechSetStatus(2, 254, 4);
      /**/ }
      xsDisableRule("_techs");
      trEcho("Trigger disabling rule techs");
   }
}

rule __hotkeys_map
highFrequency
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      map("arrowleft","cinematic","trackInsert(); trackAddWaypoint();trackPlay(-1,5);");
      map("arrowright","cinematic","trackInsert(); trackAddWaypoint();trackPlay(-1,6);");
      map("arrowup","cinematic","trackInsert(); trackAddWaypoint();trackPlay(-1,7);");
      map("arrowdown","cinematic","trackInsert(); trackAddWaypoint();trackPlay(-1,8);");
      map("shift-arrowleft","cinematic","trackInsert(); trackAddWaypoint();trackPlay(-1,9);");
      map("shift-arrowright","cinematic","trackInsert(); trackAddWaypoint();trackPlay(-1,10);");
      map("shift-arrowup","cinematic","trackInsert(); trackAddWaypoint();trackPlay(-1,11);");
      map("shift-arrowdown","cinematic","trackInsert(); trackAddWaypoint();trackPlay(-1,12);");
      map("x","cinematic","trackInsert(); trackAddWaypoint();trackPlay(-1,13);");
      map("shift-x","cinematic","trackInsert(); trackAddWaypoint();trackPlay(-1,13);");
      map("esc","cinematic","trackInsert(); trackAddWaypoint();trackPlay(-1,14);");
      map("space","cinematic","trackInsert(); trackAddWaypoint();trackPlay(-1,13);");
      map("shift-space","cinematic","trackInsert(); trackAddWaypoint();trackPlay(-1,13);");
      xsDisableRule("__hotkeys_map");
      trEcho("Trigger disabling rule _hotkeys_map");
   }
}

rule _left
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("play") == 1){
      trVectorQuestVarSet("playerMove", xsVectorSet(xsMax(trQuestVarGet("playerposx") - trQuestVarGet("moveFast"), trQuestVarGet("minposx")),0,trQuestVarGet("playerposz")));
      /**/ trVectorQuestVarSet("direction", vector(-0.5, 0, 0));
      /**/ }
      trQuestVarSet("movement", 1);
      xsDisableRule("_left");
      trEcho("Trigger disabling rule left");
   }
}

rule _right
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("play") == 1){
      trVectorQuestVarSet("playerMove", xsVectorSet(xsMin(trQuestVarGet("playerposx") + trQuestVarGet("movefast"), trQuestVarGet("maxposx")),0,trQuestVarGet("playerposz")));
      /**/ trVectorQuestVarSet("direction", vector(0.5, 0, 0));
      /**/ }
      trQuestVarSet("movement", 1);
      xsDisableRule("_right");
      trEcho("Trigger disabling rule right");
   }
}

rule _up
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("play") == 1){
      trVectorQuestVarSet("playerMove", xsVectorSet(trQuestVarGet("playerposx"),0,xsMin(trQuestVarGet("playerposz") + trQuestVarGet("movefast"), trQuestVarGet("maxposz"))));
      /**/ trVectorQuestVarSet("direction", vector(0, 0, 0.5));
      /**/ }
      trQuestVarSet("movement", 1);
      xsDisableRule("_up");
      trEcho("Trigger disabling rule up");
   }
}

rule _down
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("play") == 1){
      trVectorQuestVarSet("playerMove", xsVectorSet(trQuestVarGet("playerposx"),0,xsMax(trQuestVarGet("playerposz") - trQuestVarGet("moveFast"), trQuestVarGet("minposz"))));
      /**/ trVectorQuestVarSet("direction", vector(0, 0, -0.5));
      /**/ }
      trQuestVarSet("movement", 1);
      xsDisableRule("_down");
      trEcho("Trigger disabling rule down");
   }
}

rule _move_to_ace
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   if(trQuestVarGet("Accurate_Timer_QVmovetotimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVmovetotimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVmovetotimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVmovetotimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVmovetotimer_CompTime")) >= 10) {
   for(Accurate_Timer_QVmovetotimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVmovetotimer_DidFirstPass", 0);}
   bool bVar1 = (Accurate_Timer_QVmovetotimer_IsTrue == 1);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      /**/ 
      /**/ if ((trVectorQuestVarGetX("playerMove") > trVectorQuestVarGetX("playerPos") + 0.2 && trVectorQuestVarGetX("direction") > 0) ||
      /**/ (trVectorQuestVarGetX("playerMove")  < trVectorQuestVarGetX("playerPos") - 0.2 && trVectorQuestVarGetX("direction") < 0) ||
      /**/ (trVectorQuestVarGetZ("playerMove")  > trVectorQuestVarGetZ("playerPos") + 0.25 && trVectorQuestVarGetZ("direction") > 0) ||
      /**/ (trVectorQuestVarGetZ("playerMove")  < trVectorQuestVarGetZ("playerPos") - 0.25 && trVectorQuestVarGetZ("direction") < 0)) {
      /**/ 
      /**/ 
      trVectorQuestVarSet("playerPos", trVectorQuestVarGet("playerPos") + trVectorQuestVarGet("direction"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("playerPos");b = trVectorQuestVarGetY("playerPos");c = trVectorQuestVarGetZ("playerPos");
      trVectorQuestVarSet("playerPos",xsVectorSet(a,b,c));}
      trUnitSelectClear();
      trUnitSelectByID(5904);
      trUnitSelectByID(5907);
      trUnitSelectByID(5905);
      trUnitSelectByID(5906);
      trUnitTeleport(trVectorQuestVarGetX("playerPos"),trVectorQuestVarGetY("playerPos"),trVectorQuestVarGetZ("playerPos"));
      /**/ }
      if(trQuestVarGet("movement") == 2){
      if(trQuestVarGet("ceasefire") == 0){
      trQuestVarSet("playerlaserposx", trVectorQuestVarGetX("playerpos") - trQuestVarGet("laserxoffset"));
      /**/ for(x=trQuestVarGet("power"); >0) {
      trVectorQuestVarSet("playerlaserpos", xsVectorSet(trVectorQuestVarGetX("playerlaserpos"),0.2,trVectorQuestVarGetZ("playerpos") + 19.5));
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(5917+x);
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(trVectorQuestVarGetX("playerlaserpos"),trVectorQuestVarGetY("playerlaserpos"),trVectorQuestVarGetZ("playerlaserpos"));
      trVectorQuestVarSet("playerlaserpos", xsVectorSet(trVectorQuestVarGetX("playerlaserpos"),0.2,trVectorQuestVarGetZ("playerpos") + 7.5));
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(5920+x);
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(trVectorQuestVarGetX("playerlaserpos"),trVectorQuestVarGetY("playerlaserpos"),trVectorQuestVarGetZ("playerlaserpos"));
      trVectorQuestVarSet("playerlaserpos", xsVectorSet(trVectorQuestVarGetX("playerlaserpos"),0.3,trVectorQuestVarGetZ("playerpos") + trQuestVarGet("laserzoffset"+x)));
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(5923+x);
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(trVectorQuestVarGetX("playerlaserpos"),trVectorQuestVarGetY("playerlaserpos"),trVectorQuestVarGetZ("playerlaserpos"));
      trQuestVarSet("laserzoffset"+x+"", trQuestVarGet("laserzoffset"+x+"") + 1.0);
      /**/ if (trQuestVarGet("laserzoffset"+x) > 30 || (trQuestVarGet("playerposz") + trQuestVarGet("laserzoffset"+x)) > 99) {
      trQuestVarSet("laserzoffset"+x+"", 7.5);
      }
      trQuestVarSet("playerlaserposx", trQuestVarGet("playerlaserposx") + trQuestVarGet("laserxstep"));
      }
      }
      }
      xsDisableRule("_move_to_ace");
      trEcho("Trigger disabling rule move_to_ace");
      trDelayedRuleActivation("_move_to_ace");
   }
}

rule _down_shift
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("play") == 1){
      trVectorQuestVarSet("playerMove", xsVectorSet(trQuestVarGet("playerposx"),0,xsMax(trQuestVarGet("playerposz") - trQuestVarGet("moveSlow"), trQuestVarGet("minposz"))));
      /**/ trVectorQuestVarSet("direction", vector(0, 0, -0.15));
      /**/ }
      trQuestVarSet("movement", 2);
      xsDisableRule("_down_shift");
      trEcho("Trigger disabling rule down_shift");
   }
}

rule _left_shift
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("play") == 1){
      trVectorQuestVarSet("playerMove", xsVectorSet(xsMax(trQuestVarGet("playerposx") - trQuestVarGet("moveslow"), trQuestVarGet("minposx")),0,trQuestVarGet("playerposz")));
      /**/ trVectorQuestVarSet("direction", vector(-0.15, 0, 0));
      /**/ }
      trQuestVarSet("movement", 2);
      xsDisableRule("_left_shift");
      trEcho("Trigger disabling rule left_shift");
   }
}

rule _right_shift
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("play") == 1){
      trVectorQuestVarSet("playerMove", xsVectorSet(xsMin(trQuestVarGet("playerposx") + trQuestVarGet("moveslow"), trQuestVarGet("maxposx")),0,trQuestVarGet("playerposz")));
      /**/ trVectorQuestVarSet("direction", vector(0.15, 0, 0));
      /**/ }
      trQuestVarSet("movement", 2);
      xsDisableRule("_right_shift");
      trEcho("Trigger disabling rule right_shift");
   }
}

rule _up_shift
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("play") == 1){
      trVectorQuestVarSet("playerMove", xsVectorSet(trQuestVarGet("playerposx"),0,xsMin(trQuestVarGet("playerposz") + trQuestVarGet("moveslow"), trQuestVarGet("maxposz"))));
      /**/ trVectorQuestVarSet("direction", vector(0, 0, 0.15));
      /**/ }
      trQuestVarSet("movement", 2);
      xsDisableRule("_up_shift");
      trEcho("Trigger disabling rule up_shift");
   }
}

rule _x
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("play") == 1){
      if(trQuestVarGet("bombs") >= 1){
      if(trQuestVarGet("bomb") == 0){
      trEventFire(15);
      /**/ }}}
      xsDisableRule("_x");
      trEcho("Trigger disabling rule x");
   }
}

rule _Bomb_00
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      unitTransform("Wall Connector","Olympus Temple SFX");
      trSoundPlayFN("meteorbighit.wav", "5", -1, "","");
      trEventFire(16);
      trQuestVarSet("bomb", 1);
      trEventFire(17);
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(1*trQuestVarGet("bombs") + 5935);
      trUnitChangeProtoUnit("Cinematic Block");
      trQuestVarSet("bombs", trQuestVarGet("bombs") - 1);
      trArmyDispatch("2,10", "Dwarf", 3, 93.389999, 6.280000, 3.840000, 0, true);
      trArmySelect("2,10");
      trUnitTeleport(trVectorQuestVarGetX("playerPos"), trVectorQuestVarGetY("playerPos"), trVectorQuestVarGetZ("playerPos"));
      trEventFire(18);
      trUnitSelectClear();
      trUnitSelectByID(5907);
      trUnitSelectByID(5904);
      trUnitSelectByID(5905);
      trUnitHighlight(2.5, true);
      trSoundPlayFN("default", "1", -1, "Lives "+1*trQuestVarGet("lives")+" Bombs "+1*trQuestVarGet("bombs")+": "+trStringQuestVarGet("bossHealthBar")+"","");
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteenemiescount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteenemiescount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteenemiespointer", trQuestVarGet("zdataliteenemiespointer")-1);
      if (0 > trQuestVarGet("zdataliteenemiespointer")) {
      trQuestVarSet("zdataliteenemiespointer", trQuestVarGet("zdataliteenemiescount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteenemiespointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdataliteenemiesindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdataliteenemiescount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiespointer");
      trQuestVarSet("zdataliteenemiesindex"+zdataremove, trQuestVarGet("zdataliteenemiesindex"+zdatacount));
      trQuestVarSet("zdataliteenemiescount", zdatacount);
      trQuestVarSet("zdataliteenemiespointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("enemies", trQuestVarGet("zdataliteenemiesindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("enemies"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemies"));
      trDamageUnit(20000 - 5000 * trGetWorldDifficulty()+ 5000 * trQuestVarGet("power"));
      }
      xsDisableRule("_Bomb_00");
      trEcho("Trigger disabling rule Bomb_00");
   }
}

rule _clear_screen_00
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      unitTransform("Wadjet Spit","Rocket");
      trEventFire(19);
      trQuestVarSet("zdatalitemissiles1dcount", 0);
      trQuestVarSet("zdatalitemissiles1dpointer", 0);
      trQuestVarSet("missiles1d", 0);
      trQuestVarSet("zdatalitemissiles2dcount", 0);
      trQuestVarSet("zdatalitemissiles2dpointer", 0);
      trQuestVarSet("missiles2d", 0);
      /**/ trUnitSelectClear();
      /**/ for(x=5; >0) {
      trQuestVarSet("zdatalitep"+x+"projshootcount", 0);
      trQuestVarSet("zdatalitep"+x+"projshootpointer", 0);
      trQuestVarSet("p"+x+"projshoot", 0);
      /**/ }
      trQuestVarSet("zdatalitesurgeProjcount", 0);
      trQuestVarSet("zdatalitesurgeProjpointer", 0);
      trQuestVarSet("surgeProj", 0);
      trQuestVarSet("zdatalitep2projbouncecount", 0);
      trQuestVarSet("zdatalitep2projbouncepointer", 0);
      trQuestVarSet("p2projbounce", 0);
      trQuestVarSet("zdataliteblueBulletscount", 0);
      trQuestVarSet("zdataliteblueBulletspointer", 0);
      trQuestVarSet("blueBullets", 0);
      trQuestVarSet("zdataliteredBulletscount", 0);
      trQuestVarSet("zdataliteredBulletspointer", 0);
      trQuestVarSet("redBullets", 0);
      trQuestVarSet("zdatalitearrayprojcount", 0);
      trQuestVarSet("zdatalitearrayprojpointer", 0);
      trQuestVarSet("arrayproj", 0);
      xsDisableRule("_clear_screen_00");
      trEcho("Trigger disabling rule clear_screen_00");
   }
}

rule _Bomb_02_change_ballista
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVbomb01timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVbomb01timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVbomb01timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVbomb01timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVbomb01timer_CompTime")) >= 1000) {
   for(Accurate_Timer_QVbomb01timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVbomb01timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVbomb01timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      unitTransform("Olympus Temple SFX","Wall Connector");
      trEventFire(20);
      xsDisableRule("_Bomb_02_change_ballista");
      trEcho("Trigger disabling rule Bomb_02_change_ballista");
   }
}

rule _Bomb_03_off
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVbomb02timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVbomb02timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVbomb02timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVbomb02timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVbomb02timer_CompTime")) >= 2000) {
   for(Accurate_Timer_QVbomb02timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVbomb02timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVbomb02timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bomb", 0);
      xsDisableRule("_Bomb_03_off");
      trEcho("Trigger disabling rule Bomb_03_off");
   }
}

rule _clear_screen_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVclearscreen01_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVclearscreen01_CompTime", trTimeMS());
   for(Accurate_Timer_QVclearscreen01_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVclearscreen01_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVclearscreen01_CompTime")) >= 1) {
   for(Accurate_Timer_QVclearscreen01_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVclearscreen01_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVclearscreen01_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      unitTransform("Rocket","Wadjet Spit");
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteprojactivecount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteprojactivecount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteprojactivepointer", trQuestVarGet("zdataliteprojactivepointer")-1);
      if (0 > trQuestVarGet("zdataliteprojactivepointer")) {
      trQuestVarSet("zdataliteprojactivepointer", trQuestVarGet("zdataliteprojactivecount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteprojactivepointer");
      trQuestVarSet("projactive", trQuestVarGet("zdataliteprojactiveindex"+zdatapointer));
      UnitID = trQuestVarGet("projactive");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitTeleport(4.88, 0.00, 4.92);
      }
      trQuestVarSet("zdataliteprojactivecount", 0);
      trQuestVarSet("zdataliteprojactivepointer", 0);
      trQuestVarSet("projactive", 0);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteprojincomingcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteprojincomingcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteprojincomingpointer", trQuestVarGet("zdataliteprojincomingpointer")-1);
      if (0 > trQuestVarGet("zdataliteprojincomingpointer")) {
      trQuestVarSet("zdataliteprojincomingpointer", trQuestVarGet("zdataliteprojincomingcount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteprojincomingpointer");
      trQuestVarSet("projincoming", trQuestVarGet("zdataliteprojincomingindex"+zdatapointer));
      UnitID = trQuestVarGet("projincoming");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitTeleport(4.88, 0.00, 4.92);
      }
      trQuestVarSet("zdataliteprojincomingcount", 0);
      trQuestVarSet("zdataliteprojincomingpointer", 0);
      trQuestVarSet("projincoming", 0);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteprojleavingcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteprojleavingcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteprojleavingpointer", trQuestVarGet("zdataliteprojleavingpointer")-1);
      if (0 > trQuestVarGet("zdataliteprojleavingpointer")) {
      trQuestVarSet("zdataliteprojleavingpointer", trQuestVarGet("zdataliteprojleavingcount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteprojleavingpointer");
      trQuestVarSet("projleaving", trQuestVarGet("zdataliteprojleavingindex"+zdatapointer));
      UnitID = trQuestVarGet("projleaving");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitTeleport(4.88, 0.00, 4.92);
      }
      trQuestVarSet("zdataliteprojleavingcount", 0);
      trQuestVarSet("zdataliteprojleavingpointer", 0);
      trQuestVarSet("projleaving", 0);
      xsDisableRule("_clear_screen_01");
      trEcho("Trigger disabling rule clear_screen_01");
   }
}

rule _Bomb_01_vision_sfx
highFrequency
inactive
{
   bool bVar0 = (trCountUnitsInArea("5904",2,"Dwarf",10) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trUnitSelectClear();
      trUnitSelectByID(5906);
      trUnitChangeInArea(2,2,"Dwarf","Vision SFX",10);
      xsDisableRule("_Bomb_01_vision_sfx");
      trEcho("Trigger disabling rule Bomb_01_vision_sfx");
   }
}

rule _Die_00
highFrequency
inactive
{
   bool bVar0 = (trCountUnitsInArea("5906",1,"Victory Marker",trQuestVarGet("p1hitbox")) >= 1);

   bool bVar1 = (trCountUnitsInArea("5906",2,"Victory Marker",trQuestVarGet("p2hitbox")) >= 1);

   bool bVar2 = (trCountUnitsInArea("5906",3,"Victory Marker",trQuestVarGet("p3hitbox")) >= 1);

   bool bVar3 = (trCountUnitsInArea("5906",4,"Victory Marker",trQuestVarGet("p4hitbox")) >= 1);

   bool bVar4 = (trCountUnitsInArea("5906",5,"Victory Marker",trQuestVarGet("p5hitbox")) >= 1);


   bool tempExp = (bVar0 || bVar1 || bVar2 || bVar3 || bVar4);
   if (tempExp)
   {
      trSoundPlayFN("cantdothat.wav", "1", -1, "","");
      trEventFire(21);
      xsDisableRule("_Die_00");
      trEcho("Trigger disabling rule Die_00");
   }
}

rule _Die_01_for_real
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdielifesavertimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdielifesavertimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdielifesavertimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdielifesavertimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdielifesavertimer_CompTime")) >= 300) {
   for(Accurate_Timer_QVdielifesavertimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdielifesavertimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdielifesavertimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bomb") == 0){
      trQuestVarSet("bomb", 1);
      trUIFadeToColor(255,0,0,150,0,false);
      trQuestVarSet("lives", trQuestVarGet("lives") - 1);
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(5908+1*trQuestVarGet("lives"));
      /**/ trUnitSelectByID(5913+1*trQuestVarGet("lives"));
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(97.550003, 6.280000, 2.110000);
      trSoundPlayFN("woodcrush2.wav", "1", -1, "","");
      trVectorQuestVarSet("nextLife", xsVectorSet(trVectorQuestVarGetX("nextLife") - 0,trVectorQuestVarGetY("nextLife") - 0,trVectorQuestVarGetZ("nextLife") - 4));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("nextLife");b = trVectorQuestVarGetY("nextLife");c = trVectorQuestVarGetZ("nextLife");
      trVectorQuestVarSet("nextLife",xsVectorSet(a,b,c));}
      if(trQuestVarGet("lives") == 0){
      trEventFire(22);
      }
      trEventFire(23);
      trUnitSelectClear();
      trUnitSelectByID(5936);
      trUnitSelectByID(5937);
      trUnitSelectByID(5938);
      trUnitChangeProtoUnit("Statue of Automaton Base");
      trUnitSelectClear();
      trUnitSelectByID(5905);
      trUnitSelectByID(5904);
      trUnitSelectByID(5907);
      trUnitHighlight(2.5, true);
      trEventFire(17);
      trQuestVarSet("bombs", 3);
      trSoundPlayFN("default", "1", -1, "Lives "+1*trQuestVarGet("lives")+" Bombs "+1*trQuestVarGet("bombs")+": "+trStringQuestVarGet("bossHealthBar")+"","");
      }
      trEventFire(24);
      xsDisableRule("_Die_01_for_real");
      trEcho("Trigger disabling rule Die_01_for_real");
   }
}

rule _Die_03_reset
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trEventFire(25);
      if(trQuestVarGet("boss") == 1){
      trEventFire(26);
      trEventFire(27);
      }
      if(trQuestVarGet("boss") == 2){
      trEventFire(28);
      }
      xsDisableRule("_Die_03_reset");
      trEcho("Trigger disabling rule Die_03_reset");
   }
}

rule _Die_02_end
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdie02endtimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdie02endtimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdie02endtimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdie02endtimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdie02endtimer_CompTime")) >= 2500) {
   for(Accurate_Timer_QVdie02endtimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdie02endtimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdie02endtimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bomb", 0);
      xsDisableRule("_Die_02_end");
      trEcho("Trigger disabling rule Die_02_end");
   }
}

rule _Shoot_spread_ace_01
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   if(trQuestVarGet("Accurate_Timer_QVshootspread01timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootspread01timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootspread01timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootspread01timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootspread01timer_CompTime")) >= 250) {
   for(Accurate_Timer_QVshootspread01timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootspread01timer_DidFirstPass", 0);}
   bool bVar1 = (Accurate_Timer_QVshootspread01timer_IsTrue == 1);

   bool bVar2 = (trQuestVarGet("movement") == 1);

   bool bVar3 = (trQuestVarGet("ceasefire") == 0);


   bool tempExp = (bVar0 && bVar1 && bVar2 && bVar3);
   if (tempExp)
   {
      trVectorQuestVarSet("V1", xsVectorSet(trQuestVarGet("playerposx"),1.5,trQuestVarGet("playerposz")));
      for(bb=2*trQuestVarGet("power")-1; >0) {
      trQuestVarSet("playerprojpointer", trQuestVarGet("playerprojpointer")+1);
      if (trQuestVarGet("playerprojpointer") > trQuestVarGet("playerprojend")) {
      trQuestVarSet("playerprojpointer", trQuestVarGet("playerprojstart"));
      }
      trQuestVarSet("playerproj", trQuestVarGet("playerprojpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("playerproj"));
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      /**/ trMutateSelected(kbGetProtoUnitID("Manticore Barb"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteplayerprojshootcount");
      trQuestVarSet("zdataliteplayerprojshootindex"+zdatacount, trQuestVarGet("playerproj"));
      trQuestVarSet("zdataliteplayerprojshootcount", zdatacount+1);
      }
      trEventFire(29);
      xsDisableRule("_Shoot_spread_ace_01");
      trEcho("Trigger disabling rule Shoot_spread_ace_01");
   }
}

rule _Shoot_spread_ace_02
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootspread02timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootspread02timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootspread02timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootspread02timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootspread02timer_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootspread02timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootspread02timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootspread02timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("players1", trVectorQuestVarGet("playerpos"));
      trVectorQuestVarSet("players1", xsVectorSet(trVectorQuestVarGetX("players1") + 0,trVectorQuestVarGetY("players1") + 0,trVectorQuestVarGetZ("players1") + 40));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("players1");b = trVectorQuestVarGetY("players1");c = trVectorQuestVarGetZ("players1");
      trVectorQuestVarSet("players1",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("players2", trVectorQuestVarGet("players1"));
      trVectorQuestVarSet("players3", trVectorQuestVarGet("players1"));
      trVectorQuestVarSet("players2", xsVectorSet(trVectorQuestVarGetX("players2") + 8,trVectorQuestVarGetY("players2") + 0,trVectorQuestVarGetZ("players2") + 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("players2");b = trVectorQuestVarGetY("players2");c = trVectorQuestVarGetZ("players2");
      trVectorQuestVarSet("players2",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("players3", xsVectorSet(trVectorQuestVarGetX("players3") - 8,trVectorQuestVarGetY("players3") - 0,trVectorQuestVarGetZ("players3") - 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("players3");b = trVectorQuestVarGetY("players3");c = trVectorQuestVarGetZ("players3");
      trVectorQuestVarSet("players3",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("players4", trVectorQuestVarGet("players1"));
      trVectorQuestVarSet("players5", trVectorQuestVarGet("players1"));
      trVectorQuestVarSet("players4", xsVectorSet(trVectorQuestVarGetX("players4") + 16,trVectorQuestVarGetY("players4") + 0,trVectorQuestVarGetZ("players4") + 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("players4");b = trVectorQuestVarGetY("players4");c = trVectorQuestVarGetZ("players4");
      trVectorQuestVarSet("players4",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("players5", xsVectorSet(trVectorQuestVarGetX("players5") - 16,trVectorQuestVarGetY("players5") - 0,trVectorQuestVarGetZ("players5") - 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("players5");b = trVectorQuestVarGetY("players5");c = trVectorQuestVarGetZ("players5");
      trVectorQuestVarSet("players5",xsVectorSet(a,b,c));}
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteplayerprojshootcount") > (2*trQuestVarGet("power")-1) && (2*trQuestVarGet("power")-1) > 0) {
      zdatasearch = 2*trQuestVarGet("power")-1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteplayerprojshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteplayerprojshootpointer", trQuestVarGet("zdataliteplayerprojshootpointer")-1);
      if (0 > trQuestVarGet("zdataliteplayerprojshootpointer")) {
      trQuestVarSet("zdataliteplayerprojshootpointer", trQuestVarGet("zdataliteplayerprojshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteplayerprojshootpointer");
      trQuestVarSet("playerprojshoot", trQuestVarGet("zdataliteplayerprojshootindex"+zdatapointer));
      UnitID = trQuestVarGet("playerprojshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("players"+zdatasearching+""),trVectorQuestVarGetY("players"+zdatasearching+""),trVectorQuestVarGetZ("players"+zdatasearching+""), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteplayerprojactivecount");
      trQuestVarSet("zdataliteplayerprojactiveindex"+zdatacount, trQuestVarGet("playerprojshoot"));
      trQuestVarSet("zdataliteplayerprojactivecount", zdatacount+1);
      }
      trQuestVarSet("zdataliteplayerprojshootcount", 0);
      trQuestVarSet("zdataliteplayerprojshootpointer", 0);
      trQuestVarSet("playerprojshoot", 0);
      trEventFire(30);
      xsDisableRule("_Shoot_spread_ace_02");
      trEcho("Trigger disabling rule Shoot_spread_ace_02");
   }
}

rule __player_proj_code
minInterval 4
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      xsEnableRule("zenowashereplayerproj");
      xsDisableSelf();}}
      /**/ bool damageEnemy(string s = "", float r = 0.0) {
      if(trCountUnitsInArea(""+1*trQuestVarGet("playerprojactive") ,6,""+s+"",r) >= 1){
      trDamageUnitsInArea(6,"Unit",r,1000);
      trQuestVarSet("playerproj"+1*trQuestVarGet("playerprojactive")+"target", 0);
      /**/ trMutateSelected(kbGetProtoUnitID("Cinematic Block"));
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(51.04, 0.00, 20.62);
      /**/ 
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteplayerprojactivecount") - 1;
      zdataremove = trQuestVarGet("zdataliteplayerprojactivepointer");
      trQuestVarSet("zdataliteplayerprojactiveindex"+zdataremove, trQuestVarGet("zdataliteplayerprojactiveindex"+zdatacount));
      trQuestVarSet("zdataliteplayerprojactivecount", zdatacount);
      if (trQuestVarGet("zdataliteplayerprojactivepointer") >= trQuestVarGet("zdataliteplayerprojactivecount")) {
      trQuestVarSet("zdataliteplayerprojactivepointer", 1);
      }
      /**/ return(true);
      /**/ } else {
      /**/ return(false);
      /**/ }}
      float reflectAngle(float a = 0, float b = 0) {
      float c = a - b;
      c = 0.0 - c;
      c = c + b;
      return(c);
      }
      void trUnitSelectByQV(String s = "") {
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet(""+s));
      }
      void trUnitPositionToVector(String s = "", String v = "") {
      trVectorQuestVarSet(""+v, kbGetBlockPosition(""+s));
      }
      void trUnitPositionToVectorByQV(String s = "", String v = "") {
      trVectorQuestVarSet(""+v, kbGetBlockPosition(""+1*trQuestVarGet(""+s)));
      }
      void trUnitTeleportToVector(String v = "") {
      trUnitTeleport(trVectorQuestVarGetX(""+v), trVectorQuestVarGetY(""+v), trVectorQuestVarGetZ(""+v));
      }
      void qvSetAsAngleBetweenVectors(String q = "", String f = "", String t = "") {
      trQuestVarSet(""+q, Math_atan( (trVectorQuestVarGetX(""+t)-trVectorQuestVarGetX(""+f)) / (trVectorQuestVarGetZ(""+t)-trVectorQuestVarGetZ(""+f)) ));
      if (trVectorQuestVarGetZ(""+f) > trVectorQuestVarGetZ(""+t)) {
      if (trVectorQuestVarGetX(""+f) > trVectorQuestVarGetX(""+t)) {
      trQuestVarSet(""+q, trQuestVarGet(""+q) - PI);
      } else {
      trQuestVarSet(""+q, trQuestVarGet(""+q) + PI);
      }
      }
      }
      void vectorSetFromAngle(String v = "", float angle = 0, float d = 0) {
      trVectorQuestVarSet(""+v, xsVectorSet(Math_sin(angle) * d, 0, Math_cos(angle) * d));
      }
      void bbGrabOne(String bank = "sfx") {
      trQuestVarSet(""+bank+"pointer", trQuestVarGet(""+bank+"pointer")+1);
      if (trQuestVarGet(""+bank+"pointer") > trQuestVarGet(""+bank+"end")) {
      trQuestVarSet(""+bank+"pointer", trQuestVarGet(""+bank+"start"));
      }
      trQuestVarSet(""+bank, trQuestVarGet(""+bank+"pointer"));
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet(""+bank));
      }
      int trGetTerrainCombinedType(int x = 0, int z = 0) {
      int val = 1000 * trGetTerrainType(x, z);
      val = val + trGetTerrainSubType(x, z);
      return(val);
      }
      rule zenowashereplayerproj
      inactive
      highFrequency
      {
      if(true) {
      xsDisableSelf();
      xsDisableRule("__player_proj_code");
      trEcho("Trigger disabling rule _player_proj_code");
   }
}

rule _Stars_move
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVmoo_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVmoo_CompTime", trTimeMS());
   for(Accurate_Timer_QVmoo_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVmoo_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVmoo_CompTime")) >= 100) {
   for(Accurate_Timer_QVmoo_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVmoo_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVmoo_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      for(bb=48; >0) {
      trQuestVarSet("starspointer", trQuestVarGet("starspointer")+1);
      if (trQuestVarGet("starspointer") > trQuestVarGet("starsend")) {
      trQuestVarSet("starspointer", trQuestVarGet("starsstart"));
      }
      trQuestVarSet("stars", trQuestVarGet("starspointer"));
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("stars"));
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("stars")));
      /**/ trUnitMoveToPoint(trVectorQuestVarGetX("V1"), 0, 0, -1, 0);
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      }
      xsDisableRule("_Stars_move");
      trEcho("Trigger disabling rule Stars_move");
   }
}

rule __star_code
minInterval 4
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      xsEnableRule("zenowasherestars");
      xsDisableSelf();}}
      /**/ void starCode() {
      for(bb=1; >0) {
      trQuestVarSet("starspointer", trQuestVarGet("starspointer")+1);
      if (trQuestVarGet("starspointer") > trQuestVarGet("starsend")) {
      trQuestVarSet("starspointer", trQuestVarGet("starsstart"));
      }
      trQuestVarSet("stars", trQuestVarGet("starspointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("stars"));
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("stars")));
      /**/ if (trVectorQuestVarGetZ("V1") < trVectorQuestVarGetZ("minBound")) {
      trUnitConvert(1);
      trUnitConvert(2);
      trQuestVarSetFromRand("ypos", 0.1, 0.15, false);
      trQuestVarSetFromRand("xpos", trVectorQuestVarGetX("minbound"), trVectorQuestVarGetX("maxbound"), false);
      /**/ trUnitTeleport(trQuestVarGet("xpos"), trQuestVarGet("ypos"), trVectorQuestVarGetZ("maxBound"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitestarsreadycount");
      trQuestVarSet("zdatalitestarsreadyindex"+zdatacount, trQuestVarGet("stars"));
      trQuestVarSet("zdatalitestarsreadycount", zdatacount+1);
      /**/ }
      }
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitestarsreadycount") > (1) && (1) > 0) {
      zdatasearch = 1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitestarsreadycount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitestarsreadypointer", trQuestVarGet("zdatalitestarsreadypointer")-1);
      if (0 > trQuestVarGet("zdatalitestarsreadypointer")) {
      trQuestVarSet("zdatalitestarsreadypointer", trQuestVarGet("zdatalitestarsreadycount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitestarsreadypointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitestarsreadyindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitestarsreadycount") - 1;
      zdataremove = trQuestVarGet("zdatalitestarsreadypointer");
      trQuestVarSet("zdatalitestarsreadyindex"+zdataremove, trQuestVarGet("zdatalitestarsreadyindex"+zdatacount));
      trQuestVarSet("zdatalitestarsreadycount", zdatacount);
      trQuestVarSet("zdatalitestarsreadypointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("starsready", trQuestVarGet("zdatalitestarsreadyindex"+zdatapointer));
      UnitID = trQuestVarGet("starsready");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("starsready")));
      /**/ if (trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("maxEnter")) {
      /**/ trUnitMoveToPoint(trVectorQuestVarGetX("V1"), 0, 0, -1, 0);
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdatalitestarsreadycount") - 1;
      zdataremove = trQuestVarGet("zdatalitestarsreadypointer");
      trQuestVarSet("zdatalitestarsreadyindex"+zdataremove, trQuestVarGet("zdatalitestarsreadyindex"+zdatacount));
      trQuestVarSet("zdatalitestarsreadycount", zdatacount);
      if (trQuestVarGet("zdatalitestarsreadypointer") >= trQuestVarGet("zdatalitestarsreadycount")) {
      trQuestVarSet("zdatalitestarsreadypointer", 1);
      }
      /**/ }
      }
      if(trQuestVarGet("asteroidfield") == 1){
      for(bb=1; >0) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidspointer")+1);
      if (trQuestVarGet("asteroidspointer") > trQuestVarGet("asteroidsend")) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidsstart"));
      }
      trQuestVarSet("asteroids", trQuestVarGet("asteroidspointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("asteroids"));
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("asteroids")));
      /**/ if (trVectorQuestVarGetZ("V1") < trVectorQuestVarGetZ("minExit")) {
      /**/ trMutateSelected(kbGetProtoUnitID("Cinematic Block"));
      /**/ trMutateSelected(kbGetProtoUnitID("Catapult Shot"));
      trQuestVarSetFromRand("xpos", trVectorQuestVarGetX("minenter") + 5.0, trVectorQuestVarGetX("maxenter") - 5.0, false);
      /**/ trUnitTeleport(trQuestVarGet("xpos"), 0.2, trQuestVarGet("maxExitZ"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitestarsreadycount");
      trQuestVarSet("zdatalitestarsreadyindex"+zdatacount, trQuestVarGet("asteroids"));
      trQuestVarSet("zdatalitestarsreadycount", zdatacount+1);
      /**/ }
      }
      }
      /**/ }
      /**/ void columnCode() {
      for(bb=1; >0) {
      trQuestVarSet("columnspointer", trQuestVarGet("columnspointer")+1);
      if (trQuestVarGet("columnspointer") > trQuestVarGet("columnsend")) {
      trQuestVarSet("columnspointer", trQuestVarGet("columnsstart"));
      }
      trQuestVarSet("columns", trQuestVarGet("columnspointer"));
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("columns"));
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("columns")));
      /**/ if (trVectorQuestVarGetZ("V1") < trVectorQuestVarGetZ("columnsEnd") + 0.5) {
      trUnitTeleport(trVectorQuestVarGetX("columnsStart"),trVectorQuestVarGetY("columnsStart"),trVectorQuestVarGetZ("columnsStart"));
      }
      /**/ if (trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("columnsStart") - 0.5) {
      trUnitMoveToPoint(trVectorQuestVarGetX("columnsEnd"),trVectorQuestVarGetY("columnsEnd"),trVectorQuestVarGetZ("columnsEnd"), -1, false);
      }
      }
      /**/ }
      rule zenowasherestars
      inactive
      highFrequency
      {
      if(true) {
      xsDisableSelf();
      xsDisableRule("__star_code");
      trEcho("Trigger disabling rule _star_code");
   }
}

rule _enemy_line_s_01
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("enemyline1") >= 1);

   bool bVar1 = (trQuestVarGet("enemyline2") >= 1);

   bool bVar2 = (trQuestVarGet("enemyline3") >= 1);


   bool tempExp = (bVar0 || bVar1 || bVar2);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemyline"+x+"") >= 1){
      trQuestVarSet("enemyline"+x+"name", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Ajax Older", 1, 4.81, 0.00, 4.82, 0, true);
      trQuestVarSet("cow", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Dwarf", 1, 3.240000, 6.280000, 21.330000, 0, true);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("cow"), true);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesbasiccount");
      trQuestVarSet("zdataliteenemiesbasicindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesbasiccount", zdatacount+1);
      trUnitChangeProtoUnit("Relic");
      /**/ trImmediateUnitGarrison(""+1*trQuestVarGet("enemyLine"+x+"name"));
      unitTransform("Relic","Fishing Ship Atlantean");
      unitTransform("Ajax Older","Sling Stone");
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemyline"+x+"name"), true);
      trQuestVarSet("enemyline"+x+"starty", 0.2);
      trUnitTeleport(trVectorQuestVarGetX("enemyline"+x+"start"),trVectorQuestVarGetY("enemyline"+x+"start"),trVectorQuestVarGetZ("enemyline"+x+"start"));
      /**/ }}
      trEventFire(31);
      xsDisableRule("_enemy_line_s_01");
      trEcho("Trigger disabling rule enemy_line_s_01");
   }
}

rule _enemy_line_s_02
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemylinespawn02timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemylinespawn02timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemylinespawn02timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemylinespawn02timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemylinespawn02timer_CompTime")) >= 500) {
   for(Accurate_Timer_QVenemylinespawn02timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemylinespawn02timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemylinespawn02timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemyline"+x+"") >= 1){
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemyline"+x+"name"), true);
      trUnitMoveToPoint(trVectorQuestVarGetX("enemyline"+x+"end"),trVectorQuestVarGetY("enemyline"+x+"end"),trVectorQuestVarGetZ("enemyline"+x+"end"), -1, false);
      trQuestVarSet("enemyline"+x+"", trQuestVarGet("enemyline"+x+"") - 1);
      /**/ }}
      trEventFire(32);
      xsDisableRule("_enemy_line_s_02");
      trEcho("Trigger disabling rule enemy_line_s_02");
   }
}

rule __enemy_spawn_code
highFrequency
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      xsEnableRule("zenowashereenemyspawn");
      xsDisableSelf();}}
      /**/ void searchActiveProj() {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteprojactivecount") > (4) && (4) > 0) {
      zdatasearch = 4;
      } else {
      zdatasearch = trQuestVarGet("zdataliteprojactivecount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteprojactivepointer", trQuestVarGet("zdataliteprojactivepointer")-1);
      if (0 > trQuestVarGet("zdataliteprojactivepointer")) {
      trQuestVarSet("zdataliteprojactivepointer", trQuestVarGet("zdataliteprojactivecount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteprojactivepointer");
      trQuestVarSet("projactive", trQuestVarGet("zdataliteprojactiveindex"+zdatapointer));
      UnitID = trQuestVarGet("projactive");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V2", kbGetBlockPosition(""+1*trQuestVarGet("projactive")));
      if ((trVectorQuestVarGetX("maxBound") > trVectorQuestVarGetX("V2") &&
      trVectorQuestVarGetZ("maxBound") > trVectorQuestVarGetZ("V2") &&
      trVectorQuestVarGetX("V2") > trVectorQuestVarGetX("minBound") &&
      trVectorQuestVarGetZ("V2") > trVectorQuestVarGetZ("minBound")) == false) {
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojleavingcount");
      trQuestVarSet("zdataliteprojleavingindex"+zdatacount, trQuestVarGet("projactive"));
      trQuestVarSet("zdataliteprojleavingcount", zdatacount+1);
      /**/ 
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojactivecount") - 1;
      zdataremove = trQuestVarGet("zdataliteprojactivepointer");
      trQuestVarSet("zdataliteprojactiveindex"+zdataremove, trQuestVarGet("zdataliteprojactiveindex"+zdatacount));
      trQuestVarSet("zdataliteprojactivecount", zdatacount);
      if (trQuestVarGet("zdataliteprojactivepointer") >= trQuestVarGet("zdataliteprojactivecount")) {
      trQuestVarSet("zdataliteprojactivepointer", trQuestVarGet("zdataliteprojactivecount")-1);
      }
      }
      }
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteprojincomingcount") > (2) && (2) > 0) {
      zdatasearch = 2;
      } else {
      zdatasearch = trQuestVarGet("zdataliteprojincomingcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteprojincomingpointer", trQuestVarGet("zdataliteprojincomingpointer")-1);
      if (0 > trQuestVarGet("zdataliteprojincomingpointer")) {
      trQuestVarSet("zdataliteprojincomingpointer", trQuestVarGet("zdataliteprojincomingcount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteprojincomingpointer");
      trQuestVarSet("projincoming", trQuestVarGet("zdataliteprojincomingindex"+zdatapointer));
      UnitID = trQuestVarGet("projincoming");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V2", kbGetBlockPosition(""+1*trQuestVarGet("projincoming")));
      if ((trVectorQuestVarGetX("maxEnter") > trVectorQuestVarGetX("V2") &&
      trVectorQuestVarGetZ("maxEnter") > trVectorQuestVarGetZ("V2") &&
      trVectorQuestVarGetX("V2") > trVectorQuestVarGetX("minEnter") &&
      trVectorQuestVarGetZ("V2") > trVectorQuestVarGetZ("minEnter")) == true) {
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojactivecount");
      trQuestVarSet("zdataliteprojactiveindex"+zdatacount, trQuestVarGet("projincoming"));
      trQuestVarSet("zdataliteprojactivecount", zdatacount+1);
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount") - 1;
      zdataremove = trQuestVarGet("zdataliteprojincomingpointer");
      trQuestVarSet("zdataliteprojincomingindex"+zdataremove, trQuestVarGet("zdataliteprojincomingindex"+zdatacount));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount);
      if (trQuestVarGet("zdataliteprojincomingpointer") >= trQuestVarGet("zdataliteprojincomingcount")) {
      trQuestVarSet("zdataliteprojincomingpointer", trQuestVarGet("zdataliteprojincomingcount")-1);
      }
      }
      }
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteprojleavingcount") > (8) && (8) > 0) {
      zdatasearch = 8;
      } else {
      zdatasearch = trQuestVarGet("zdataliteprojleavingcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteprojleavingpointer", trQuestVarGet("zdataliteprojleavingpointer")-1);
      if (0 > trQuestVarGet("zdataliteprojleavingpointer")) {
      trQuestVarSet("zdataliteprojleavingpointer", trQuestVarGet("zdataliteprojleavingcount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteprojleavingpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdataliteprojleavingindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdataliteprojleavingcount") - 1;
      zdataremove = trQuestVarGet("zdataliteprojleavingpointer");
      trQuestVarSet("zdataliteprojleavingindex"+zdataremove, trQuestVarGet("zdataliteprojleavingindex"+zdatacount));
      trQuestVarSet("zdataliteprojleavingcount", zdatacount);
      trQuestVarSet("zdataliteprojleavingpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("projleaving", trQuestVarGet("zdataliteprojleavingindex"+zdatapointer));
      UnitID = trQuestVarGet("projleaving");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V2", kbGetBlockPosition(""+1*trQuestVarGet("projleaving")));
      /**/ if (trQuestVarGet("V2z") < 10) {
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojleavingcount") - 1;
      zdataremove = trQuestVarGet("zdataliteprojleavingpointer");
      trQuestVarSet("zdataliteprojleavingindex"+zdataremove, trQuestVarGet("zdataliteprojleavingindex"+zdatacount));
      trQuestVarSet("zdataliteprojleavingcount", zdatacount);
      if (trQuestVarGet("zdataliteprojleavingpointer") >= trQuestVarGet("zdataliteprojleavingcount")) {
      trQuestVarSet("zdataliteprojleavingpointer", trQuestVarGet("zdataliteprojleavingcount")-1);
      }
      /**/ 
      /**/ 
      /**/ 
      /**/ } else {
      /**/ trUnitTeleport(1,1,1);
      /**/ 
      }
      }
      /**/ }
      /**/ void searchIncomingEnemies() {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteenemiesIncomingcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteenemiesIncomingcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteenemiesIncomingpointer", trQuestVarGet("zdataliteenemiesIncomingpointer")-1);
      if (0 > trQuestVarGet("zdataliteenemiesIncomingpointer")) {
      trQuestVarSet("zdataliteenemiesIncomingpointer", trQuestVarGet("zdataliteenemiesIncomingcount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteenemiesIncomingpointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdataliteenemiesIncomingindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiesIncomingpointer");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdataremove, trQuestVarGet("zdataliteenemiesIncomingindex"+zdatacount));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount);
      trQuestVarSet("zdataliteenemiesIncomingpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("enemiesIncoming", trQuestVarGet("zdataliteenemiesIncomingindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("enemiesIncoming"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemiesIncoming"), true);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("enemiesIncoming"), true));
      if ((trVectorQuestVarGetX("maxEnter") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxEnter") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minEnter") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minEnter")) == true) {
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiescount");
      trQuestVarSet("zdataliteenemiesindex"+zdatacount, trQuestVarGet("enemiesIncoming"));
      trQuestVarSet("zdataliteenemiescount", zdatacount+1);
      if(type == kbGetProtoUnitID("Ramming Ship Egyptian")){
      trQuestVarSetFromRand("sound", 1, 2, true);
      trSoundPlayFN("rainofarrows"+1*trQuestVarGet("sound")+".wav", "1", -1, "","");
      }
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiesIncomingpointer");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdataremove, trQuestVarGet("zdataliteenemiesIncomingindex"+zdatacount));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount);
      if (trQuestVarGet("zdataliteenemiesIncomingpointer") >= trQuestVarGet("zdataliteenemiesIncomingcount")) {
      trQuestVarSet("zdataliteenemiesIncomingpointer", 1);
      }
      }
      }
      /**/ }
      rule zenowashereenemyspawn
      inactive
      highFrequency
      {
      if(true) {
      xsDisableSelf();
      xsDisableRule("__enemy_spawn_code");
      trEcho("Trigger disabling rule _enemy_spawn_code");
   }
}

rule __enemy_dead_code
highFrequency
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      xsEnableRule("zenowashereenemydead");
      xsDisableSelf();}}
      /**/ void searchDeadEnemies() {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteenemiescount") > (4) && (4) > 0) {
      zdatasearch = 4;
      } else {
      zdatasearch = trQuestVarGet("zdataliteenemiescount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteenemiespointer", trQuestVarGet("zdataliteenemiespointer")-1);
      if (0 > trQuestVarGet("zdataliteenemiespointer")) {
      trQuestVarSet("zdataliteenemiespointer", trQuestVarGet("zdataliteenemiescount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteenemiespointer");
      trQuestVarSet("enemies", trQuestVarGet("zdataliteenemiesindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("enemies"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemies"), true);
      if(trUnitDead()==true){
      trUnitChangeProtoUnit("Meteorite");
      type = kbGetProtoUnitID("Meteorite");
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiescount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiespointer");
      trQuestVarSet("zdataliteenemiesindex"+zdataremove, trQuestVarGet("zdataliteenemiesindex"+zdatacount));
      trQuestVarSet("zdataliteenemiescount", zdatacount);
      if (trQuestVarGet("zdataliteenemiespointer") >= trQuestVarGet("zdataliteenemiescount")) {
      trQuestVarSet("zdataliteenemiespointer", 1);
      }
      trQuestVarSetFromRand("sound", 1, 4, true);
      trSoundPlayFN("Zenophobia\Psynergy"+1*trQuestVarGet("sound")+".wav", "1", -1, "","");
      /**/ continue;
      }
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("enemies"), true));
      if ((trVectorQuestVarGetX("maxbound") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxbound") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minbound") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minbound")) == false) {
      trUnitDestroy();
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiescount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiespointer");
      trQuestVarSet("zdataliteenemiesindex"+zdataremove, trQuestVarGet("zdataliteenemiesindex"+zdatacount));
      trQuestVarSet("zdataliteenemiescount", zdatacount);
      if (trQuestVarGet("zdataliteenemiespointer") >= trQuestVarGet("zdataliteenemiescount")) {
      trQuestVarSet("zdataliteenemiespointer", 1);
      }
      /**/ continue;
      }
      }
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteenemiesIncomingcount") > (4) && (4) > 0) {
      zdatasearch = 4;
      } else {
      zdatasearch = trQuestVarGet("zdataliteenemiesIncomingcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteenemiesIncomingpointer", trQuestVarGet("zdataliteenemiesIncomingpointer")-1);
      if (0 > trQuestVarGet("zdataliteenemiesIncomingpointer")) {
      trQuestVarSet("zdataliteenemiesIncomingpointer", trQuestVarGet("zdataliteenemiesIncomingcount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteenemiesIncomingpointer");
      trQuestVarSet("enemiesIncoming", trQuestVarGet("zdataliteenemiesIncomingindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("enemiesIncoming"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemiesIncoming"), true);
      if(trUnitDead()==true){
      trUnitChangeProtoUnit("Meteorite");
      type = kbGetProtoUnitID("Meteorite");
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiesIncomingpointer");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdataremove, trQuestVarGet("zdataliteenemiesIncomingindex"+zdatacount));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount);
      if (trQuestVarGet("zdataliteenemiesIncomingpointer") >= trQuestVarGet("zdataliteenemiesIncomingcount")) {
      trQuestVarSet("zdataliteenemiesIncomingpointer", 1);
      }
      }
      }
      /**/ }
      rule zenowashereenemydead
      inactive
      highFrequency
      {
      if(true) {
      xsDisableSelf();
      xsDisableRule("__enemy_dead_code");
      trEcho("Trigger disabling rule _enemy_dead_code");
   }
}

rule _enemy_siege_s_01
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("enemysiege1") >= 1);

   bool bVar1 = (trQuestVarGet("enemysiege2") >= 1);

   bool bVar2 = (trQuestVarGet("enemysiege3") >= 1);


   bool tempExp = (bVar0 || bVar1 || bVar2);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemysiege"+x+"") >= 1){
      trQuestVarSet("enemysiege"+x+"name", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Ajax Older", 1, 4.93, 0.00, 4.86, 0, true);
      trQuestVarSet("cow", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Dwarf", 1, 3.240000, 6.280000, 21.330000, 0, true);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("cow"), true);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesSiegecount");
      trQuestVarSet("zdataliteenemiesSiegeindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesSiegecount", zdatacount+1);
      trQuestVarSet("enemiesSiege"+zdatacount+"Cooldown", 0);
      trUnitChangeProtoUnit("Relic");
      /**/ trImmediateUnitGarrison(""+1*trQuestVarGet("enemySiege"+x+"name"));
      unitTransform("Relic","Siege Ship Atlantean");
      unitTransform("Ajax Older","Priest Projectile");
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemysiege"+x+"name"), true);
      trQuestVarSet("enemysiege"+x+"starty", 0.3);
      trUnitTeleport(trVectorQuestVarGetX("enemysiege"+x+"start"),trVectorQuestVarGetY("enemysiege"+x+"start"),trVectorQuestVarGetZ("enemysiege"+x+"start"));
      /**/ }}
      trEventFire(33);
      xsDisableRule("_enemy_siege_s_01");
      trEcho("Trigger disabling rule enemy_siege_s_01");
   }
}

rule _enemy_siege_s_02
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemysiegespawn02timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemysiegespawn02timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemysiegespawn02timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemysiegespawn02timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemysiegespawn02timer_CompTime")) >= 3) {
   for(Accurate_Timer_QVenemysiegespawn02timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemysiegespawn02timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemysiegespawn02timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemysiege"+x+"") >= 1){
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemysiege"+x+"name"), true);
      trUnitMoveToPoint(trVectorQuestVarGetX("enemysiege"+x+"end"),trVectorQuestVarGetY("enemysiege"+x+"end"),trVectorQuestVarGetZ("enemysiege"+x+"end"), -1, false);
      trQuestVarSet("enemysiege"+x+"", trQuestVarGet("enemysiege"+x+"") - 1);
      /**/ }}
      trEventFire(34);
      xsDisableRule("_enemy_siege_s_02");
      trEcho("Trigger disabling rule enemy_siege_s_02");
   }
}

rule _enemy_basic_s1
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesBasicCount") >= 1);

   if(trQuestVarGet("Accurate_Timer_QVenemybasicshoottimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemybasicshoottimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemybasicshoottimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemybasicshoottimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemybasicshoottimer_CompTime")) >= 200) {
   for(Accurate_Timer_QVenemybasicshoottimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemybasicshoottimer_DidFirstPass", 0);}
   bool bVar2 = (Accurate_Timer_QVenemybasicshoottimer_IsTrue == 1);

   bool bVar3 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1 && bVar2 && bVar3);
   if (tempExp)
   {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteenemiesBasiccount") > (20) && (20) > 0) {
      zdatasearch = 20;
      } else {
      zdatasearch = trQuestVarGet("zdataliteenemiesBasiccount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteenemiesBasicpointer", trQuestVarGet("zdataliteenemiesBasicpointer")-1);
      if (0 > trQuestVarGet("zdataliteenemiesBasicpointer")) {
      trQuestVarSet("zdataliteenemiesBasicpointer", trQuestVarGet("zdataliteenemiesBasiccount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteenemiesBasicpointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdataliteenemiesBasicindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdataliteenemiesBasiccount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiesBasicpointer");
      trQuestVarSet("zdataliteenemiesBasicindex"+zdataremove, trQuestVarGet("zdataliteenemiesBasicindex"+zdatacount));
      trQuestVarSet("zdataliteenemiesBasiccount", zdatacount);
      trQuestVarSet("zdataliteenemiesBasicpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("enemiesBasic", trQuestVarGet("zdataliteenemiesBasicindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("enemiesBasic"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemiesBasic"), true);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("enemiesBasic"), true));
      if ((trVectorQuestVarGetX("maxBound") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxBound") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minBound") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minBound")) == true) {
      trQuestVarSetFromRand("shoot", 1, 20 - trGetWorldDifficulty()*2, true);
      if(trQuestVarGet("shoot") == 1){
      for(bb=1; >0) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projpointer")+1);
      if (trQuestVarGet("p2projpointer") > trQuestVarGet("p2projend")) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projstart"));
      }
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p2proj"));
      /**/ trUnitSetHeading(180);
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("V1") + 0,trVectorQuestVarGetY("V1") + 1.5,trVectorQuestVarGetZ("V1") + 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("V1");b = trVectorQuestVarGetY("V1");c = trVectorQuestVarGetZ("V1");
      trVectorQuestVarSet("V1",xsVectorSet(a,b,c));}
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep2projshootbasiccount");
      trQuestVarSet("zdatalitep2projshootbasicindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdatalitep2projshootbasiccount", zdatacount+1);
      }
      trQuestVarSet("soundplay", 1);
      }
      }
      }
      trEventFire(35);
      if(trQuestVarGet("soundplay") == 1){
      trSoundPlayFN("titanfall.wav", "1", -1, "","");
      trQuestVarSet("soundplay", 0);
      }
      xsDisableRule("_enemy_basic_s1");
      trEcho("Trigger disabling rule enemy_basic_s1");
   }
}

rule _enemy_basic_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemybasics2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemybasics2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemybasics2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemybasics2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemybasics2timer_CompTime")) >= 1) {
   for(Accurate_Timer_QVenemybasics2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemybasics2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemybasics2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("zdatalitep2projshootbasiccount") >= 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep2projshootbasiccount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep2projshootbasiccount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep2projshootbasicpointer", trQuestVarGet("zdatalitep2projshootbasicpointer")-1);
      if (0 > trQuestVarGet("zdatalitep2projshootbasicpointer")) {
      trQuestVarSet("zdatalitep2projshootbasicpointer", trQuestVarGet("zdatalitep2projshootbasiccount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep2projshootbasicpointer");
      trQuestVarSet("p2projshootbasic", trQuestVarGet("zdatalitep2projshootbasicindex"+zdatapointer));
      UnitID = trQuestVarGet("p2projshootbasic");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("p2projshootbasic")));
      trVectorQuestVarSet("dir", trVectorQuestVarGet("playerpos"));
      trVectorQuestVarSet("dir", trVectorQuestVarGet("dir") - trVectorQuestVarGet("V1"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("dir");b = trVectorQuestVarGetY("dir");c = trVectorQuestVarGetZ("dir");
      trVectorQuestVarSet("dir",xsVectorSet(a,b,c));}
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojactivecount");
      trQuestVarSet("zdataliteprojactiveindex"+zdatacount, trQuestVarGet("p2projshootbasic"));
      trQuestVarSet("zdataliteprojactivecount", zdatacount+1);
      }
      trQuestVarSet("zdatalitep2projshootbasiccount", 0);
      trQuestVarSet("zdatalitep2projshootbasicpointer", 0);
      trQuestVarSet("p2projshootbasic", 0);
      }
      trEventFire(36);
      xsDisableRule("_enemy_basic_s2");
      trEcho("Trigger disabling rule enemy_basic_s2");
   }
}

rule _projectile_init
highFrequency
active
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 2, 1, 6.0+2.0*trGetWorldDifficulty() - trQuestVarGet("p"+2+"p"+zsps+"f1f"));
      trQuestVarSet("p"+2+"p"+zsps+"f1f", 6.0+2.0*trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 3.0+1.0*trGetWorldDifficulty() - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 3.0+1.0*trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 5, 1, 4.5+1.5*trGetWorldDifficulty() - trQuestVarGet("p"+5+"p"+zsps+"f1f"));
      trQuestVarSet("p"+5+"p"+zsps+"f1f", 4.5+1.5*trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 4, 1, 4.5+1.5*trGetWorldDifficulty() - trQuestVarGet("p"+4+"p"+zsps+"f1f"));
      trQuestVarSet("p"+4+"p"+zsps+"f1f", 4.5+1.5*trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 3.0+1.0*trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 3.0+1.0*trGetWorldDifficulty());
      xsDisableRule("_projectile_init");
      trEcho("Trigger disabling rule projectile_init");
   }
}

rule _enemy_siege_s1
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);

   bool bVar2 = (trQuestVarGet("zdataliteenemiesSiegeCount") >= 1);

   if(trQuestVarGet("Accurate_Timer_QVenemysieges1timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemysieges1timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemysieges1timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemysieges1timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemysieges1timer_CompTime")) >= 200) {
   for(Accurate_Timer_QVenemysieges1timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemysieges1timer_DidFirstPass", 0);}
   bool bVar3 = (Accurate_Timer_QVenemysieges1timer_IsTrue == 1);


   bool tempExp = (bVar0 && bVar1 && bVar2 && bVar3);
   if (tempExp)
   {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteenemiesSiegecount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteenemiesSiegecount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteenemiesSiegepointer", trQuestVarGet("zdataliteenemiesSiegepointer")-1);
      if (0 > trQuestVarGet("zdataliteenemiesSiegepointer")) {
      trQuestVarSet("zdataliteenemiesSiegepointer", trQuestVarGet("zdataliteenemiesSiegecount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteenemiesSiegepointer");
      trQuestVarSet("enemiesSiege", trQuestVarGet("zdataliteenemiesSiegeindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("enemiesSiege"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemiesSiege"), true);
      if(trUnitDead()==true){
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesSiegecount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiesSiegepointer");
      trQuestVarSet("zdataliteenemiesSiegeindex"+zdataremove, trQuestVarGet("zdataliteenemiesSiegeindex"+zdatacount));
      trQuestVarSet("zdataliteenemiesSiegecount", zdatacount);
      if (trQuestVarGet("zdataliteenemiesSiegepointer") >= trQuestVarGet("zdataliteenemiesSiegecount")) {
      trQuestVarSet("zdataliteenemiesSiegepointer", trQuestVarGet("zdataliteenemiesSiegecount")-1);
      }
      trQuestVarCopy("enemiesSiege"+zdatapointer+"cooldown", "enemiesSiege"+zdatacount+"cooldown");
      /**/ continue;
      }
      trQuestVarSet("enemiesSiege"+zdatapointer+"cooldown", trQuestVarGet("enemiesSiege"+zdatapointer+"cooldown") + 1);
      if(trQuestVarGet("enemiesSiege"+zdatapointer+"cooldown") >= 20){
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("enemiesSiege"), true));
      if ((trVectorQuestVarGetX("maxbound") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxbound") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minbound") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minbound")) == true) {
      trQuestVarSet("enemiesSiege"+zdatapointer+"cooldown", 0);
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("V1") + 0,trVectorQuestVarGetY("V1") + 1.5,trVectorQuestVarGetZ("V1") + 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("V1");b = trVectorQuestVarGetY("V1");c = trVectorQuestVarGetZ("V1");
      trVectorQuestVarSet("V1",xsVectorSet(a,b,c));}
      trSoundPlayFN("titanfall.wav", "1", -1, "","");
      trSoundPlayFN("ui\lightning1.wav", "3", -1, "","");
      for(bb=(5 + 2*trGetWorldDifficulty()); >0) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p3proj"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep3projshootsiegecount");
      trQuestVarSet("zdatalitep3projshootsiegeindex"+zdatacount, trQuestVarGet("p3proj"));
      trQuestVarSet("zdatalitep3projshootsiegecount", zdatacount+1);
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      /**/ trUnitSetHeading(180);
      }
      }
      }
      }
      trEventFire(37);
      xsDisableRule("_enemy_siege_s1");
      trEcho("Trigger disabling rule enemy_siege_s1");
   }
}

rule _enemy_siege_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemysieges2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemysieges2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemysieges2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemysieges2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemysieges2timer_CompTime")) >= 1) {
   for(Accurate_Timer_QVenemysieges2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemysieges2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemysieges2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("zdatalitep3projshootsiegecount") >= 1){
      trQuestVarSet("startAngle", trGetWorldDifficulty() + 2);
      trQuestVarSet("startAngle", trQuestVarGet("startAngle") * 0.174);
      /**/ while(trQuestVarGet("zdatalitep3projshootsiegecount") > 0) {
      trQuestVarSet("zdatalitep3projshootsiegepointer", -1);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep3projshootsiegecount") > (1) && (1) > 0) {
      zdatasearch = 1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep3projshootsiegecount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep3projshootsiegepointer", trQuestVarGet("zdatalitep3projshootsiegepointer")-1);
      if (0 > trQuestVarGet("zdatalitep3projshootsiegepointer")) {
      trQuestVarSet("zdatalitep3projshootsiegepointer", trQuestVarGet("zdatalitep3projshootsiegecount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep3projshootsiegepointer");
      trQuestVarSet("p3projshootsiege", trQuestVarGet("zdatalitep3projshootsiegeindex"+zdatapointer));
      UnitID = trQuestVarGet("p3projshootsiege");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("p3projshootsiege")));
      trQuestVarSet("angle", Math_atan( (trVectorQuestVarGetX("playerpos")-trVectorQuestVarGetX("V1")) / (trVectorQuestVarGetZ("playerpos")-trVectorQuestVarGetZ("V1")) ));
      if (trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("playerpos")) {
      if (trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("playerpos")) {
      trQuestVarSet("angle", trQuestVarGet("angle") - PI);
      } else {
      trQuestVarSet("angle", trQuestVarGet("angle") + PI);
      }
      }
      trQuestVarSet("angle", trQuestVarGet("angle") + trQuestVarGet("startAngle"));
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") == 0) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojactivecount");
      trQuestVarSet("zdataliteprojactiveindex"+zdatacount, trQuestVarGet("p3projshootsiege"));
      trQuestVarSet("zdataliteprojactivecount", zdatacount+1);
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep3projshootsiegecount") - 1;
      zdataremove = trQuestVarGet("zdatalitep3projshootsiegepointer");
      trQuestVarSet("zdatalitep3projshootsiegeindex"+zdataremove, trQuestVarGet("zdatalitep3projshootsiegeindex"+zdatacount));
      trQuestVarSet("zdatalitep3projshootsiegecount", zdatacount);
      if (trQuestVarGet("zdatalitep3projshootsiegepointer") >= trQuestVarGet("zdatalitep3projshootsiegecount")) {
      trQuestVarSet("zdatalitep3projshootsiegepointer", trQuestVarGet("zdatalitep3projshootsiegecount")-1);
      }
      }
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep3projshootsiegecount") > (4+2*trGetWorldDifficulty()) && (4+2*trGetWorldDifficulty()) > 0) {
      zdatasearch = 4+2*trGetWorldDifficulty();
      } else {
      zdatasearch = trQuestVarGet("zdatalitep3projshootsiegecount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep3projshootsiegepointer", trQuestVarGet("zdatalitep3projshootsiegepointer")-1);
      if (0 > trQuestVarGet("zdatalitep3projshootsiegepointer")) {
      trQuestVarSet("zdatalitep3projshootsiegepointer", trQuestVarGet("zdatalitep3projshootsiegecount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep3projshootsiegepointer");
      trQuestVarSet("p3projshootsiege", trQuestVarGet("zdatalitep3projshootsiegeindex"+zdatapointer));
      UnitID = trQuestVarGet("p3projshootsiege");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trQuestVarSet("angle", trQuestVarGet("angle") - 0.174);
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") == 0) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojactivecount");
      trQuestVarSet("zdataliteprojactiveindex"+zdatacount, trQuestVarGet("p3projshootsiege"));
      trQuestVarSet("zdataliteprojactivecount", zdatacount+1);
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep3projshootsiegecount") - 1;
      zdataremove = trQuestVarGet("zdatalitep3projshootsiegepointer");
      trQuestVarSet("zdatalitep3projshootsiegeindex"+zdataremove, trQuestVarGet("zdatalitep3projshootsiegeindex"+zdatacount));
      trQuestVarSet("zdatalitep3projshootsiegecount", zdatacount);
      if (trQuestVarGet("zdatalitep3projshootsiegepointer") >= trQuestVarGet("zdatalitep3projshootsiegecount")) {
      trQuestVarSet("zdatalitep3projshootsiegepointer", trQuestVarGet("zdatalitep3projshootsiegecount")-1);
      }
      trQuestVarSet("zdatalitep3projshootsiegepointer", -1);
      }
      /**/ }
      }
      trEventFire(38);
      xsDisableRule("_enemy_siege_s2");
      trEcho("Trigger disabling rule enemy_siege_s2");
   }
}

rule _lasers_off
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("movement") == 1);

   bool bVar1 = (trQuestVarGet("play") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      trUnitSelectClear();
      trUnitSelectByID(5918);
      trUnitSelectByID(5919);
      trUnitSelectByID(5920);
      trUnitSelectByID(5921);
      trUnitSelectByID(5922);
      trUnitSelectByID(5923);
      trUnitSelectByID(5924);
      trUnitSelectByID(5925);
      trUnitSelectByID(5926);
      trUnitTeleport(3.64, 6.58, 8.23);
      trEventFire(39);
      xsDisableRule("_lasers_off");
      trEcho("Trigger disabling rule lasers_off");
   }
}

rule _lasers_on
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("movement") == 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(40);
      /**/ trVectorQuestVarSet("lasertimerpos", kbGetBlockPosition("0"));
      xsDisableRule("_lasers_on");
      trEcho("Trigger disabling rule lasers_on");
   }
}

rule _eescape
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trGetWorldDifficulty() < 0){
      trQuestVarSet("play", 0);
      trUIFadeToColor(0,0,0,1000,0,true);
      trEventFire(41);
      /**/ } else {
      trLetterBox(false);
      }
      xsDisableRule("_eescape");
      trEcho("Trigger disabling rule eescape");
   }
}

rule _Shoot_laser_01
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   bool bVar1 = (trQuestVarGet("movement") == 2);

   bool bVar2 = (trQuestVarGet("ceasefire") == 0);


   bool tempExp = (bVar0 && bVar1 && bVar2);
   if (tempExp)
   {
      trEventFire(42);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteenemiescount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteenemiescount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteenemiespointer", trQuestVarGet("zdataliteenemiespointer")-1);
      if (0 > trQuestVarGet("zdataliteenemiespointer")) {
      trQuestVarSet("zdataliteenemiespointer", trQuestVarGet("zdataliteenemiescount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteenemiespointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdataliteenemiesindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdataliteenemiescount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiespointer");
      trQuestVarSet("zdataliteenemiesindex"+zdataremove, trQuestVarGet("zdataliteenemiesindex"+zdatacount));
      trQuestVarSet("zdataliteenemiescount", zdatacount);
      trQuestVarSet("zdataliteenemiespointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("enemies", trQuestVarGet("zdataliteenemiesindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("enemies"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemies"), true);
      /**/ float p = xsVectorGetX(kbGetBlockPosition(""+1*trQuestVarGet("enemies"), true));
      /**/ if (type == kbGetProtoUnitID("Fishing Ship Atlantean") ||
      /**/ type == kbGetProtoUnitID("Fishing Ship Egyptian")) {
      /**/ 
      /**/ 
      /**/ if (p < trVectorQuestVarGetX("playerpos")+0.5 &&
      /**/ p > trVectorQuestVarGetX("playerpos")-0.5) {
      trDamageUnit(trQuestVarGet("laserDamage"));
      trUnitHighlight(0.1, false);
      /**/ continue; }}
      /**/ if (type == kbGetProtoUnitID("Siege Ship Atlantean") ||
      /**/ type == kbGetProtoUnitID("Fire Ship Atlantean") ||
      /**/ type == kbGetProtoUnitID("Fire Siphon") ||
      /**/ type == kbGetProtoUnitID("Kebenit") ||
      /**/ type == kbGetProtoUnitID("Siege Tower") ||
      /**/ type == kbGetProtoUnitID("Ramming Ship Egyptian") ||
      /**/ type == kbGetProtoUnitID("Siege Ship Egyptian")) {
      /**/ 
      /**/ 
      /**/ 
      /**/ if (p < trVectorQuestVarGetX("playerpos")+2.5 &&
      /**/ p > trVectorQuestVarGetX("playerpos")-2.5) {
      trDamageUnit(trQuestVarGet("laserDamage"));
      trUnitHighlight(0.1, false);
      /**/ continue; }}
      /**/ if (type == kbGetProtoUnitID("Bireme")) {
      /**/ 
      /**/ 
      /**/ 
      /**/ if (p < trVectorQuestVarGetX("playerpos")+4.0 &&
      /**/ p > trVectorQuestVarGetX("playerpos")-4.0) {
      trDamageUnit(trQuestVarGet("laserDamage"));
      trUnitHighlight(0.1, false);
      /**/ continue; }}
      /**/ if (type == kbGetProtoUnitID("Transport Ship Norse") ||
      /**/ type == kbGetProtoUnitID("Guardian XP")) {
      /**/ 
      /**/ 
      /**/ if (p < trVectorQuestVarGetX("playerpos")+1.0 &&
      /**/ p > trVectorQuestVarGetX("playerpos")-1.0) {
      trDamageUnit(trQuestVarGet("laserDamage"));
      trUnitHighlight(0.1, false);
      /**/ continue; }}
      }
      /**/ trVectorQuestVarSet("lasertimerpos", kbGetBlockPosition("0"));
      /**/ if (trQuestVarGet("lasertimerposx") > 70) {
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(0);
      /**/ trMutateSelected(780);
      /**/ 
      /**/ 
      trUnitTeleport(trVectorQuestVarGetX("lasertimerstart"),trVectorQuestVarGetY("lasertimerstart"),trVectorQuestVarGetZ("lasertimerstart"));
      trEventFire(43);
      trVectorQuestVarSet("lasertimerpos", trVectorQuestVarGet("lasertimerstart"));
      /**/ }
      xsDisableRule("_Shoot_laser_01");
      trEcho("Trigger disabling rule Shoot_laser_01");
   }
}

rule _Shoot_laser_02
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootlasertimer02_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootlasertimer02_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootlasertimer02_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootlasertimer02_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootlasertimer02_CompTime")) >= 50) {
   for(Accurate_Timer_QVshootlasertimer02_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootlasertimer02_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootlasertimer02_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(44);
      /**/ trVectorQuestVarSet("V1", kbGetBlockPosition("0"));
      trQuestVarSet("laserdamage", (trQuestVarGet("V1x") - trQuestVarGet("lasertimerposx")) * 110.0 * (1.0 + trQuestVarGet("power")));
      if(trQuestVarGet("laserdamage") < 100){
      trQuestVarSet("laserdamage", 180 + 180 * trQuestVarGet("power"));
      trEventFire(43);
      }
      xsDisableRule("_Shoot_laser_02");
      trEcho("Trigger disabling rule Shoot_laser_02");
   }
}

rule _display_health
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   bool bVar1 = (trQuestVarGet("boss") >= 1);

   if(trQuestVarGet("Accurate_Timer_QVdisplayhealthtimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdisplayhealthtimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdisplayhealthtimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdisplayhealthtimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdisplayhealthtimer_CompTime")) >= 500) {
   for(Accurate_Timer_QVdisplayhealthtimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdisplayhealthtimer_DidFirstPass", 0);}
   bool bVar2 = (Accurate_Timer_QVdisplayhealthtimer_IsTrue == 1);


   bool tempExp = (bVar0 && bVar1 && bVar2);
   if (tempExp)
   {
      /**/ string s = trStringQuestVarGet("bossName");
      if(trQuestVarGet("boss") == 1){
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(1*trQuestVarGet("bossID"));
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      /**/ for(x=trQuestVarGet("bossHP"); >trUnitPercentDamaged()) {
      /**/ s = s + "=";
      /**/ }
      /**/ } else {
      /**/ s = s + "[.";
      /**/ for(x=trQuestVarGet("bossAmmo"); >0) {
      /**/ s = s + "[!].";
      /**/ }
      /**/ for(x=trQuestVarGet("bossAmmoMax"); >trQuestVarGet("bossAmmo")) {
      /**/ s = s + "....";
      /**/ }
      /**/ s = s + "]";
      /**/ }
      trSoundPlayFN("default", "1", -1, "Lives "+1*trQuestVarGet("lives")+" Bombs "+1*trQuestVarGet("bombs")+": "+s+"","");
      xsDisableRule("_display_health");
      trEcho("Trigger disabling rule display_health");
      trDelayedRuleActivation("_display_health");
   }
}

rule _lasers_s1
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("laser1active") == 1);

   bool bVar1 = (trQuestVarGet("laser2active") == 1);

   bool bVar2 = (trQuestVarGet("laser3active") == 1);

   bool bVar3 = (trQuestVarGet("laser4active") == 1);

   bool bVar4 = (trQuestVarGet("laser5active") == 1);


   bool tempExp = (bVar0 || bVar1 || bVar2 || bVar3 || bVar4);
   if (tempExp)
   {
      /**/ for(x=5; >0) {
      if(trQuestVarGet("laser"+x+"active") == 1){
      trQuestVarSet("laserStart", 4554 + x);
      trVectorQuestVarSet("laser"+x+"p0", kbGetBlockPosition(""+1*trQuestVarGet("laserStart")));
      trVectorQuestVarSet("laser"+x+"p0", xsVectorSet(trVectorQuestVarGetX("laser"+x+"p0") + 0,trVectorQuestVarGetY("laser"+x+"p0") + 1.5,trVectorQuestVarGetZ("laser"+x+"p0") + 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("laser"+x+"p0");b = trVectorQuestVarGetY("laser"+x+"p0");c = trVectorQuestVarGetZ("laser"+x+"p0");
      trVectorQuestVarSet("laser"+x+"p0",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("laser"+x+"dir",xsVectorSet(Math_sin(trQuestVarGet("laser"+x+"angle")) * 1.0, 0, Math_cos(trQuestVarGet("laser"+x+"angle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("laser"+x+"dir") / trVectorQuestVarGetX("laser"+x+"dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("laser"+x+"p0") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("laser"+x+"p0"));
      if (0.0 > trVectorQuestVarGetX("laser"+x+"dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minBound"), 0, trVectorQuestVarGetX("minBound") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxBound"), 0, trVectorQuestVarGetX("maxBound") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("laser"+x+"dir") == 0) {
      trVectorQuestVarSet("laser"+x+"p2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("laser"+x+"dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minBound") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minBound")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxBound") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxBound")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minBound") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxBound")) {
      trVectorQuestVarSet("laser"+x+"p2", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("laser"+x+"p2", trVectorQuestVarGet("ziwrposs2"));
      }
      trVectorQuestVarSet("laser"+x+"p2", xsVectorSet(trVectorQuestVarGetX("laser"+x+"p2") + 0,trVectorQuestVarGetY("laser"+x+"p2") + 1.5,trVectorQuestVarGetZ("laser"+x+"p2") + 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("laser"+x+"p2");b = trVectorQuestVarGetY("laser"+x+"p2");c = trVectorQuestVarGetZ("laser"+x+"p2");
      trVectorQuestVarSet("laser"+x+"p2",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("laser"+x+"p1", trVectorQuestVarGet("laser"+x+"p2"));
      trVectorQuestVarSet("laser"+x+"p1", trVectorQuestVarGet("laser"+x+"p1") - trVectorQuestVarGet("laser"+x+"p0"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("laser"+x+"p1");b = trVectorQuestVarGetY("laser"+x+"p1");c = trVectorQuestVarGetZ("laser"+x+"p1");
      trVectorQuestVarSet("laser"+x+"p1",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("laser"+x+"p1", xsVectorSet(trVectorQuestVarGetX("laser"+x+"p1") * 0.5,trVectorQuestVarGetY("laser"+x+"p1") * 0,trVectorQuestVarGetZ("laser"+x+"p1") * 0.5));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("laser"+x+"p1");b = trVectorQuestVarGetY("laser"+x+"p1");c = trVectorQuestVarGetZ("laser"+x+"p1");
      trVectorQuestVarSet("laser"+x+"p1",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("laser"+x+"p1", trVectorQuestVarGet("laser"+x+"p1") + trVectorQuestVarGet("laser"+x+"p0"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("laser"+x+"p1");b = trVectorQuestVarGetY("laser"+x+"p1");c = trVectorQuestVarGetZ("laser"+x+"p1");
      trVectorQuestVarSet("laser"+x+"p1",xsVectorSet(a,b,c));}
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("laserStart")+"");
      trQuestVarSet("laser"+x+"distance", trUnitDistanceToPoint(trVectorQuestVarGetX("playerpos"),trVectorQuestVarGetY("playerpos"),trVectorQuestVarGetZ("playerpos")));
      trVectorQuestVarSet("laser"+x+"lethal",xsVectorSet(Math_sin(trQuestVarGet("laser"+x+"angle")) * trQuestVarGet("laser"+x+"distance"), 0, Math_cos(trQuestVarGet("laser"+x+"angle")) * trQuestVarGet("laser"+x+"distance")));
      trVectorQuestVarSet("laser"+x+"lethal", trVectorQuestVarGet("laser"+x+"lethal") + trVectorQuestVarGet("laser"+x+"p0"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("laser"+x+"lethal");b = trVectorQuestVarGetY("laser"+x+"lethal");c = trVectorQuestVarGetZ("laser"+x+"lethal");
      trVectorQuestVarSet("laser"+x+"lethal",xsVectorSet(a,b,c));}
      }
      }
      trEventFire(45);
      xsDisableRule("_lasers_s1");
      trEcho("Trigger disabling rule lasers_s1");
   }
}

rule _lasers_s2
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   if(trQuestVarGet("Accurate_Timer_QVlaserss2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVlaserss2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVlaserss2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVlaserss2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVlaserss2timer_CompTime")) >= 10) {
   for(Accurate_Timer_QVlaserss2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVlaserss2timer_DidFirstPass", 0);}
   bool bVar1 = (Accurate_Timer_QVlaserss2timer_IsTrue == 1);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("laservary", trQuestVarGet("laservary") + 1);
      if(trQuestVarGet("laservary") == 2){
      trQuestVarSet("laservary", 0);
      }
      /**/ for(x=5; >0) {
      if(trQuestVarGet("laser"+x+"active") == 1){
      /**/ trUnitSelectClear(); trUnitSelect(""+(4559 + x));
      trUnitTeleport(trVectorQuestVarGetX("laser"+x+"p"+1*trQuestVarGet("laservary")+""),trVectorQuestVarGetY("laser"+x+"p"+1*trQuestVarGet("laservary")+""),trVectorQuestVarGetZ("laser"+x+"p"+1*trQuestVarGet("laservary")+""));
      /**/ trUnitSelectClear(); trUnitSelect(""+(4564 + x));
      trUnitTeleport(trVectorQuestVarGetX("laser"+x+"p"+(1+1*trQuestVarGet("laservary"))+""),trVectorQuestVarGetY("laser"+x+"p"+(1+1*trQuestVarGet("laservary"))+""),trVectorQuestVarGetZ("laser"+x+"p"+(1+1*trQuestVarGet("laservary"))+""));
      /**/ trUnitSelect(""+(4559 + x));
      trUnitChangeProtoUnit("Ball of Fire");
      /**/ trUnitSelectClear(); trUnitSelect(""+(4569 + x));
      trUnitTeleport(trVectorQuestVarGetX("laser"+x+"lethal"),trVectorQuestVarGetY("laser"+x+"lethal"),trVectorQuestVarGetZ("laser"+x+"lethal"));
      }
      }
      trEventFire(46);
      xsDisableRule("_lasers_s2");
      trEcho("Trigger disabling rule lasers_s2");
   }
}

rule _choose_01
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trUIFadeToColor(0,0,0,1000,0,true);
      trEventFire(47);
      xsDisableRule("_choose_01");
      trEcho("Trigger disabling rule choose_01");
   }
}

rule _choose_04_extra
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("Zenophobia\heal.wav", "1", -1, "Lives and bombs replenished!","");
      trLetterBox(true);
      /**/ while(trQuestVarGet("lives") < trQuestVarGet("maxLives")) {
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(5908+1*trQuestVarGet("lives"));
      /**/ trUnitSelectByID(5913+1*trQuestVarGet("lives"));
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(trVectorQuestVarGetX("nextLife"),trVectorQuestVarGetY("nextLife"),trVectorQuestVarGetZ("nextLife"));
      trVectorQuestVarSet("nextLife", xsVectorSet(trVectorQuestVarGetX("nextLife") + 0,trVectorQuestVarGetY("nextLife") + 0,trVectorQuestVarGetZ("nextLife") + 4));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("nextLife");b = trVectorQuestVarGetY("nextLife");c = trVectorQuestVarGetZ("nextLife");
      trVectorQuestVarSet("nextLife",xsVectorSet(a,b,c));}
      trQuestVarSet("lives", trQuestVarGet("lives") + 1);
      }
      trQuestVarSet("bombs", 3);
      trUnitSelectClear();
      trUnitSelectByID(4483);
      trUnitSelectByID(4482);
      trUnitSelectByID(4481);
      trUnitChangeProtoUnit("Statue of Automaton Base");
      xsDisableRule("_choose_04_extra");
      trEcho("Trigger disabling rule choose_04_extra");
   }
}

rule _game_over_01
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("play", 0);
      trQuestVarSet("stage", 0);
      trQuestVarSet("boss", 0);
      trSoundPlayFN("lose.wav", "8", -1, "","");
      trUnitSelectClear();
      trUnitSelectByID(5904);
      trUnitChangeProtoUnit("Meteor Impact Ground");
      trEventFire(48);
      trFadeOutMusic(3.0);
      xsDisableRule("_game_over_01");
      trEcho("Trigger disabling rule game_over_01");
   }
}

rule _game_over_02
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVgameovertime_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVgameovertime_CompTime", trTimeMS());
   for(Accurate_Timer_QVgameovertime_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVgameovertime_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVgameovertime_CompTime")) >= 500) {
   for(Accurate_Timer_QVgameovertime_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVgameovertime_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVgameovertime_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(49);
      trUIFadeToColor(0,0,0,1000,0,true);
      xsDisableRule("_game_over_02");
      trEcho("Trigger disabling rule game_over_02");
   }
}

rule _game_over_03
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVgameovertime2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVgameovertime2_CompTime", trTimeMS());
   for(Accurate_Timer_QVgameovertime2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVgameovertime2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVgameovertime2_CompTime")) >= 1000) {
   for(Accurate_Timer_QVgameovertime2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVgameovertime2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVgameovertime2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trLetterBox(false);
      trEventFire(50);
      xsDisableRule("_game_over_03");
      trEcho("Trigger disabling rule game_over_03");
   }
}

rule _game_over_04
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVgameovertime3_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVgameovertime3_CompTime", trTimeMS());
   for(Accurate_Timer_QVgameovertime3_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVgameovertime3_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVgameovertime3_CompTime")) >= 1000) {
   for(Accurate_Timer_QVgameovertime3_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVgameovertime3_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVgameovertime3_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trYouLose();
      trEndGame();
      xsDisableRule("_game_over_04");
      trEcho("Trigger disabling rule game_over_04");
   }
}

rule _enemy_gunship_s_01
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("enemygunship1") >= 1);

   bool bVar1 = (trQuestVarGet("enemygunship2") >= 1);

   bool bVar2 = (trQuestVarGet("enemygunship3") >= 1);


   bool tempExp = (bVar0 || bVar1 || bVar2);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemygunship"+x+"") >= 1){
      trQuestVarSet("enemygunship"+x+"name", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Ajax Older", 1, 4.59, 0.00, 4.62, 0, true);
      trQuestVarSet("cow", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Dwarf", 1, 3.240000, 6.280000, 21.330000, 0, true);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("cow"), true);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesGunshipcount");
      trQuestVarSet("zdataliteenemiesGunshipindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesGunshipcount", zdatacount+1);
      trUnitChangeProtoUnit("Relic");
      /**/ trImmediateUnitGarrison(""+1*trQuestVarGet("enemyGunship"+x+"name"));
      unitTransform("Relic","Transport Ship Norse");
      unitTransform("Ajax Older","Stymph Bird Feather");
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemygunship"+x+"name"), true);
      trQuestVarSet("enemygunship"+x+"starty", 0.3);
      trUnitTeleport(trVectorQuestVarGetX("enemygunship"+x+"start"),trVectorQuestVarGetY("enemygunship"+x+"start"),trVectorQuestVarGetZ("enemygunship"+x+"start"));
      /**/ }}
      trEventFire(51);
      xsDisableRule("_enemy_gunship_s_01");
      trEcho("Trigger disabling rule enemy_gunship_s_01");
   }
}

rule _enemy_gunship_s_02
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemygunshipspawn02timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemygunshipspawn02timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemygunshipspawn02timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemygunshipspawn02timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemygunshipspawn02timer_CompTime")) >= 800) {
   for(Accurate_Timer_QVenemygunshipspawn02timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemygunshipspawn02timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemygunshipspawn02timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemygunship"+x+"") >= 1){
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemygunship"+x+"name"), true);
      trUnitMoveToPoint(trVectorQuestVarGetX("enemygunship"+x+"end"),trVectorQuestVarGetY("enemygunship"+x+"end"),trVectorQuestVarGetZ("enemygunship"+x+"end"), -1, false);
      trQuestVarSet("enemygunship"+x+"", trQuestVarGet("enemygunship"+x+"") - 1);
      /**/ }}
      trEventFire(52);
      xsDisableRule("_enemy_gunship_s_02");
      trEcho("Trigger disabling rule enemy_gunship_s_02");
   }
}

rule _enemy_gunship_s1
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesGunshipCount") >= 1);

   if(trQuestVarGet("Accurate_Timer_QVenemygunshipshoottimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemygunshipshoottimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemygunshipshoottimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemygunshipshoottimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemygunshipshoottimer_CompTime")) >= 500 + 5 * trQuestVarGet("delay")) {
   for(Accurate_Timer_QVenemygunshipshoottimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemygunshipshoottimer_DidFirstPass", 0);}
   bool bVar2 = (Accurate_Timer_QVenemygunshipshoottimer_IsTrue == 1);

   bool bVar3 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1 && bVar2 && bVar3);
   if (tempExp)
   {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteenemiesGunshipcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteenemiesGunshipcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteenemiesGunshippointer", trQuestVarGet("zdataliteenemiesGunshippointer")-1);
      if (0 > trQuestVarGet("zdataliteenemiesGunshippointer")) {
      trQuestVarSet("zdataliteenemiesGunshippointer", trQuestVarGet("zdataliteenemiesGunshipcount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteenemiesGunshippointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdataliteenemiesGunshipindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdataliteenemiesGunshipcount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiesGunshippointer");
      trQuestVarSet("zdataliteenemiesGunshipindex"+zdataremove, trQuestVarGet("zdataliteenemiesGunshipindex"+zdatacount));
      trQuestVarSet("zdataliteenemiesGunshipcount", zdatacount);
      trQuestVarSet("zdataliteenemiesGunshippointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("enemiesGunship", trQuestVarGet("zdataliteenemiesGunshipindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("enemiesGunship"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemiesGunship"), true);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("enemiesGunship"), true));
      if ((trVectorQuestVarGetX("maxBound") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxBound") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minBound") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minBound")) == true) {
      for(bb=1; >0) {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projpointer")+1);
      if (trQuestVarGet("p5projpointer") > trQuestVarGet("p5projend")) {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projstart"));
      }
      trQuestVarSet("p5proj", trQuestVarGet("p5projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p5proj"));
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("V1") + 0,trVectorQuestVarGetY("V1") + 1.5,trVectorQuestVarGetZ("V1") + 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("V1");b = trVectorQuestVarGetY("V1");c = trVectorQuestVarGetZ("V1");
      trVectorQuestVarSet("V1",xsVectorSet(a,b,c));}
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep5projshootgunshipcount");
      trQuestVarSet("zdatalitep5projshootgunshipindex"+zdatacount, trQuestVarGet("p5proj"));
      trQuestVarSet("zdatalitep5projshootgunshipcount", zdatacount+1);
      }
      }
      }
      trEventFire(53);
      if(trQuestVarGet("zdatalitep5projshootgunshipcount") >= 1){
      trQuestVarSetFromRand("sound", 1, 3, true);
      if(trQuestVarGet("sound") == 1){
      trSoundPlayFN("automatonspcbirth.wav", "2", -1, "","");
      /**/ } else {
      trSoundPlayFN("automatonspcbirth"+1*trQuestVarGet("sound")+".wav", "1", -1, "","");
      }
      }
      trQuestVarSet("zdataliteenemiesgunshippointer", 0);
      xsDisableRule("_enemy_gunship_s1");
      trEcho("Trigger disabling rule enemy_gunship_s1");
   }
}

rule _enemy_gunship_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemygunships2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemygunships2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemygunships2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemygunships2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemygunships2timer_CompTime")) >= 1) {
   for(Accurate_Timer_QVenemygunships2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemygunships2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemygunships2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("zdatalitep5projshootgunshipcount") >= 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep5projshootgunshipcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep5projshootgunshipcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep5projshootgunshippointer", trQuestVarGet("zdatalitep5projshootgunshippointer")-1);
      if (0 > trQuestVarGet("zdatalitep5projshootgunshippointer")) {
      trQuestVarSet("zdatalitep5projshootgunshippointer", trQuestVarGet("zdatalitep5projshootgunshipcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep5projshootgunshippointer");
      trQuestVarSet("p5projshootgunship", trQuestVarGet("zdatalitep5projshootgunshipindex"+zdatapointer));
      UnitID = trQuestVarGet("p5projshootgunship");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("p5projshootgunship")));
      trVectorQuestVarSet("target", xsVectorSet(trVectorQuestVarGetX("V1"),0,trVectorQuestVarGetZ("minExit")));
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojactivecount");
      trQuestVarSet("zdataliteprojactiveindex"+zdatacount, trQuestVarGet("p5projshootgunship"));
      trQuestVarSet("zdataliteprojactivecount", zdatacount+1);
      }
      trQuestVarSet("zdatalitep5projshootgunshipcount", 0);
      trQuestVarSet("zdatalitep5projshootgunshippointer", 0);
      trQuestVarSet("p5projshootgunship", 0);
      }
      trEventFire(54);
      xsDisableRule("_enemy_gunship_s2");
      trEcho("Trigger disabling rule enemy_gunship_s2");
   }
}

rule _enemy_rocket_s_01
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("enemyrocket1") >= 1);

   bool bVar1 = (trQuestVarGet("enemyrocket2") >= 1);

   bool bVar2 = (trQuestVarGet("enemyrocket3") >= 1);


   bool tempExp = (bVar0 || bVar1 || bVar2);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemyrocket"+x+"") >= 1){
      trQuestVarSet("enemyrocket"+x+"name", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Ajax Older", 1, 4.44, 0.00, 4.36, 180, true);
      trQuestVarSet("cow", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Dwarf", 1, 3.240000, 6.280000, 21.330000, 0, true);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("cow"), true);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesRocketcount");
      trQuestVarSet("zdataliteenemiesRocketindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesRocketcount", zdatacount+1);
      /**/ 
      trUnitChangeProtoUnit("Relic");
      /**/ trImmediateUnitGarrison(""+1*trQuestVarGet("enemyRocket"+x+"name"));
      unitTransform("Relic","Fire Ship Atlantean");
      unitTransform("Ajax Older","Stymph Bird Feather");
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemyRocket"+x+"name"), true);
      trUnitTeleport(trVectorQuestVarGetX("enemyrocket"+x+"start"),trVectorQuestVarGetY("enemyrocket"+x+"start"),trVectorQuestVarGetZ("enemyrocket"+x+"start"));
      trQuestVarSet("alternate", trQuestVarGet("alternate") + 1);
      if(trQuestVarGet("alternate") == 2){
      trQuestVarSet("alternate", 0);
      }
      trQuestVarSet("enemiesRocket"+zdatacount+"Cooldown", 15*trQuestVarGet("alternate"));
      trQuestVarSet("enemyrocket"+x+"starty", 0.3);
      trUnitTeleport(trVectorQuestVarGetX("enemyrocket"+x+"start"),trVectorQuestVarGetY("enemyrocket"+x+"start"),trVectorQuestVarGetZ("enemyrocket"+x+"start"));
      /**/ }}
      trEventFire(55);
      xsDisableRule("_enemy_rocket_s_01");
      trEcho("Trigger disabling rule enemy_rocket_s_01");
   }
}

rule _enemy_rocket_s_02
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemyrocketspawn02timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemyrocketspawn02timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemyrocketspawn02timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemyrocketspawn02timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemyrocketspawn02timer_CompTime")) >= 3) {
   for(Accurate_Timer_QVenemyrocketspawn02timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemyrocketspawn02timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemyrocketspawn02timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemyrocket"+x+"") >= 1){
      if(trQuestVarGet("enemyrocket"+x+"name") >= 1){
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemyRocket"+x+"name"), true);
      trUnitMoveToPoint(trVectorQuestVarGetX("enemyrocket"+x+"end"),trVectorQuestVarGetY("enemyrocket"+x+"end"),trVectorQuestVarGetZ("enemyrocket"+x+"end"), -1, false);
      trQuestVarSet("enemyrocket"+x+"name", 0);
      trQuestVarSet("enemyrocket"+x+"", trQuestVarGet("enemyrocket"+x+"") - 1);
      /**/ }}}
      trEventFire(56);
      xsDisableRule("_enemy_rocket_s_02");
      trEcho("Trigger disabling rule enemy_rocket_s_02");
   }
}

rule _enemy_rocket_s1
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);

   bool bVar2 = (trQuestVarGet("zdataliteenemiesRocketCount") >= 1);

   if(trQuestVarGet("Accurate_Timer_QVenemyrockets1timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemyrockets1timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemyrockets1timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemyrockets1timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemyrockets1timer_CompTime")) >= 200) {
   for(Accurate_Timer_QVenemyrockets1timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemyrockets1timer_DidFirstPass", 0);}
   bool bVar3 = (Accurate_Timer_QVenemyrockets1timer_IsTrue == 1);


   bool tempExp = (bVar0 && bVar1 && bVar2 && bVar3);
   if (tempExp)
   {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteenemiesRocketcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteenemiesRocketcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteenemiesRocketpointer", trQuestVarGet("zdataliteenemiesRocketpointer")-1);
      if (0 > trQuestVarGet("zdataliteenemiesRocketpointer")) {
      trQuestVarSet("zdataliteenemiesRocketpointer", trQuestVarGet("zdataliteenemiesRocketcount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteenemiesRocketpointer");
      trQuestVarSet("enemiesRocket", trQuestVarGet("zdataliteenemiesRocketindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("enemiesRocket"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemiesRocket"), true);
      if(trUnitDead()==true){
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesRocketcount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiesRocketpointer");
      trQuestVarSet("zdataliteenemiesRocketindex"+zdataremove, trQuestVarGet("zdataliteenemiesRocketindex"+zdatacount));
      trQuestVarSet("zdataliteenemiesRocketcount", zdatacount);
      if (trQuestVarGet("zdataliteenemiesRocketpointer") >= trQuestVarGet("zdataliteenemiesRocketcount")) {
      trQuestVarSet("zdataliteenemiesRocketpointer", trQuestVarGet("zdataliteenemiesRocketcount")-1);
      }
      trQuestVarCopy("enemiesRocket"+zdatapointer+"cooldown", "enemiesRocket"+zdatacount+"cooldown");
      /**/ continue;
      }
      /**/ trQuestVarSet("enemiesRocket"+zdatapointer+"cooldown", trQuestVarGet("enemiesRocket"+zdatapointer+"cooldown")+1);
      /**/ int x = 0;
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      if(trQuestVarGet("enemiesRocket"+zdatapointer+"cooldown") == 15){
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("enemiesRocket"), true));
      if ((trVectorQuestVarGetX("maxbound") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxbound") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minbound") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minbound")) == true) {
      /**/ x = 1;
      }
      }
      if(trQuestVarGet("enemiesRocket"+zdatapointer+"cooldown") >= 30){
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("enemiesRocket"), true));
      if ((trVectorQuestVarGetX("maxbound") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxbound") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minbound") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minbound")) == true) {
      /**/ x = 2;
      }
      trQuestVarSet("enemiesRocket"+zdatapointer+"cooldown", 0);
      }
      /**/ if (x > 0) {
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("V1") + 0,trVectorQuestVarGetY("V1") + 1.5,trVectorQuestVarGetZ("V1") + 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("V1");b = trVectorQuestVarGetY("V1");c = trVectorQuestVarGetZ("V1");
      trVectorQuestVarSet("V1",xsVectorSet(a,b,c));}
      trSoundPlayFN("fireball fall "+x+".wav", "1", -1, "","");
      trSoundPlayFN("catapltattack.wav", "1", -1, "","");
      for(bb=trQuestVarGet("missileCount"); >0) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p4proj"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitemissiles"+x+"dcount");
      trQuestVarSet("zdatalitemissiles"+x+"dindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdatalitemissiles"+x+"dcount", zdatacount+1);
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      trQuestVarSet("missileAngle", trQuestVarGet("missileAngle") + trQuestVarGet("missileAngleMod"));
      while (trQuestVarGet("missileAngle") > (6.283185)) {
      trQuestVarSet("missileAngle", trQuestVarGet("missileAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("missileAngle")) {
      trQuestVarSet("missileAngle", trQuestVarGet("missileAngle") + 6.283185);
      }
      trQuestVarSet("missileHeading", trQuestVarGet("missileHeading") + trQuestVarGet("missileHeadingMod"));
      while (trQuestVarGet("missileHeading") > (360)) {
      trQuestVarSet("missileHeading", trQuestVarGet("missileHeading") - (360));
      }
      while (0 > trQuestVarGet("missileHeading")) {
      trQuestVarSet("missileHeading", trQuestVarGet("missileHeading") + 360);
      }
      /**/ trUnitSetHeading(trQuestVarGet("missileHeading"));
      trQuestVarCopy("missiles"+x+"d"+zdatacount+"angle", "missileAngle");
      trVectorQuestVarSet("missiles"+x+"d"+zdatacount+"Target", trVectorQuestVarGet("V1"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      }
      }
      trEventFire(57);
      xsDisableRule("_enemy_rocket_s1");
      trEcho("Trigger disabling rule enemy_rocket_s1");
   }
}

rule __missiles_code
highFrequency
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      xsEnableRule("zenowasheremissilescode");
      xsDisableSelf();}}
      /**/ void searchMissiles() {
      /**/ for(x=2; >0) {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitemissiles"+x+"dcount") > (8) && (8) > 0) {
      zdatasearch = 8;
      } else {
      zdatasearch = trQuestVarGet("zdatalitemissiles"+x+"dcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitemissiles"+x+"dpointer", trQuestVarGet("zdatalitemissiles"+x+"dpointer")-1);
      if (0 > trQuestVarGet("zdatalitemissiles"+x+"dpointer")) {
      trQuestVarSet("zdatalitemissiles"+x+"dpointer", trQuestVarGet("zdatalitemissiles"+x+"dcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitemissiles"+x+"dpointer");
      trQuestVarSet("missiles"+x+"d", trQuestVarGet("zdatalitemissiles"+x+"dindex"+zdatapointer));
      UnitID = trQuestVarGet("missiles"+x+"d");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      if ((trVectorQuestVarGetX("maxBound") > trVectorQuestVarGetX("missiles"+x+"d"+zdatapointer+"target") &&
      trVectorQuestVarGetZ("maxBound") > trVectorQuestVarGetZ("missiles"+x+"d"+zdatapointer+"target") &&
      trVectorQuestVarGetX("missiles"+x+"d"+zdatapointer+"target") > trVectorQuestVarGetX("minMissile") &&
      trVectorQuestVarGetZ("missiles"+x+"d"+zdatapointer+"target") > trVectorQuestVarGetZ("minMissile")) == false) {
      trVectorQuestVarSet("V1",xsVectorSet(Math_sin(trQuestVarGet("missiles"+x+"d"+zdatapointer+"angle")) * 16.0, 0, Math_cos(trQuestVarGet("missiles"+x+"d"+zdatapointer+"angle")) * 16.0));
      trVectorQuestVarSet("missiles"+x+"d"+zdatapointer+"target", trVectorQuestVarGet("missiles"+x+"d"+zdatapointer+"target") + trVectorQuestVarGet("V1"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("missiles"+x+"d"+zdatapointer+"target");b = trVectorQuestVarGetY("missiles"+x+"d"+zdatapointer+"target");c = trVectorQuestVarGetZ("missiles"+x+"d"+zdatapointer+"target");
      trVectorQuestVarSet("missiles"+x+"d"+zdatapointer+"target",xsVectorSet(a,b,c));}
      trUnitMoveToPoint(trVectorQuestVarGetX("missiles"+x+"d"+zdatapointer+"target"),trVectorQuestVarGetY("missiles"+x+"d"+zdatapointer+"target"),trVectorQuestVarGetZ("missiles"+x+"d"+zdatapointer+"target"), -1, false);
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdatalitemissiles"+x+"dcount") - 1;
      zdataremove = trQuestVarGet("zdatalitemissiles"+x+"dpointer");
      trQuestVarSet("zdatalitemissiles"+x+"dindex"+zdataremove, trQuestVarGet("zdatalitemissiles"+x+"dindex"+zdatacount));
      trQuestVarSet("zdatalitemissiles"+x+"dcount", zdatacount);
      if (trQuestVarGet("zdatalitemissiles"+x+"dpointer") >= trQuestVarGet("zdatalitemissiles"+x+"dcount")) {
      trQuestVarSet("zdatalitemissiles"+x+"dpointer", trQuestVarGet("zdatalitemissiles"+x+"dcount")-1);
      }
      trQuestVarCopy("missiles"+x+"d"+zdataremove+"angle", "missiles"+x+"d"+zdatacount+"angle");
      trVectorQuestVarSet("missiles"+x+"d"+zdataremove+"target", trVectorQuestVarGet("missiles"+x+"d"+zdatacount+"target"));
      /**/ continue;
      }
      /**/ int p = zdatapointer;
      if (trUnitDistanceToPoint(trVectorQuestVarGetX("missiles"+x+"d"+p+"target"),trVectorQuestVarGetY("missiles"+x+"d"+p+"target"),trVectorQuestVarGetZ("missiles"+x+"d"+p+"target")) <= 1.0){
      trQuestVarSet("missiles"+x+"d"+p+"angle", trQuestVarGet("missiles"+x+"d"+p+"angle") + trQuestVarGet("missile"+x+"mod"));
      while (trQuestVarGet("missiles"+x+"d"+p+"angle") > (6.283185)) {
      trQuestVarSet("missiles"+x+"d"+p+"angle", trQuestVarGet("missiles"+x+"d"+p+"angle") - (6.283185));
      }
      while (0 > trQuestVarGet("missiles"+x+"d"+p+"angle")) {
      trQuestVarSet("missiles"+x+"d"+p+"angle", trQuestVarGet("missiles"+x+"d"+p+"angle") + 6.283185);
      }
      trVectorQuestVarSet("V1",xsVectorSet(Math_sin(trQuestVarGet("missiles"+x+"d"+p+"angle")) * 4.0, 0, Math_cos(trQuestVarGet("missiles"+x+"d"+p+"angle")) * 4.0));
      trVectorQuestVarSet("missiles"+x+"d"+p+"target", trVectorQuestVarGet("missiles"+x+"d"+p+"target") + trVectorQuestVarGet("V1"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("missiles"+x+"d"+p+"target");b = trVectorQuestVarGetY("missiles"+x+"d"+p+"target");c = trVectorQuestVarGetZ("missiles"+x+"d"+p+"target");
      trVectorQuestVarSet("missiles"+x+"d"+p+"target",xsVectorSet(a,b,c));}
      trUnitMoveToPoint(trVectorQuestVarGetX("missiles"+x+"d"+p+"target"),trVectorQuestVarGetY("missiles"+x+"d"+p+"target"),trVectorQuestVarGetZ("missiles"+x+"d"+p+"target"), -1, false);
      }
      }
      /**/ }}
      rule zenowasheremissilescode
      inactive
      highFrequency
      {
      if(true) {
      xsDisableSelf();
      xsDisableRule("__missiles_code");
      trEcho("Trigger disabling rule _missiles_code");
   }
}

rule _enemy_rocket_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemyrockets2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemyrockets2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemyrockets2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemyrockets2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemyrockets2timer_CompTime")) >= 1) {
   for(Accurate_Timer_QVenemyrockets2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemyrockets2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemyrockets2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(58);
      xsDisableRule("_enemy_rocket_s2");
      trEcho("Trigger disabling rule enemy_rocket_s2");
   }
}

rule _choose_02
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("playerpos", xsVectorSet(trQuestVarGet("playcenterx"),-0.1,trQuestVarGet("playcenterz") - 12.0));
      trVectorQuestVarSet("playermove", trVectorQuestVarGet("playerpos"));
      trUnitSelectClear();
      trUnitSelectByID(5904);
      trUnitSelectByID(5906);
      trUnitSelectByID(5905);
      trUnitSelectByID(5907);
      trUnitTeleport(trVectorQuestVarGetX("playerpos"),trVectorQuestVarGetY("playerpos"),trVectorQuestVarGetZ("playerpos"));
      trLetterBox(false);
      trMusicPlay("ageadvance.wav", "5", 0.0);
      trVectorQuestVarSet("direction", xsVectorSet(0,0,0));
      trQuestVarSet("movement", 1);
      if(trQuestVarGet("stage") == 2){
      trEventFire(59);
      }
      trBlockAllSounds(true);
      if(trQuestVarGet("stage") == 1){
      trEventFire(60);
      }
      if(trQuestVarGet("stage") == 3){
      trEventFire(61);
      if(trQuestVarGet("power") == 3){
      trEventFire(62);
      /**/ } else {
      trShowChoiceDialog("Choose A Reward", "Upgrade Weapons", 63, "Replenish Lives and Bombs", 62);
      }
      /**/ } else {
      trShowChoiceDialog("Choose A Reward", "Upgrade Weapons", 63, "Replenish Lives and Bombs", 62);
      }
      trModifyProtounit("Petrobolos Shot", 2, 1, 1.999);
      /**/ for(x=5; >0) {
      for(bb=256; >0) {
      trQuestVarSet("p"+x+"projpointer", trQuestVarGet("p"+x+"projpointer")+1);
      if (trQuestVarGet("p"+x+"projpointer") > trQuestVarGet("p"+x+"projend")) {
      trQuestVarSet("p"+x+"projpointer", trQuestVarGet("p"+x+"projstart"));
      }
      trQuestVarSet("p"+x+"proj", trQuestVarGet("p"+x+"projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p"+x+"proj"));
      trUnitTeleport(98.99, 0.00, 98.84);
      }
      /**/ }
      xsDisableRule("_choose_02");
      trEcho("Trigger disabling rule choose_02");
   }
}

rule _choose_03_upgrade
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("researchcomplete.wav", "1", -1, "Upgraded weapons!","");
      trQuestVarSet("power", trQuestVarGet("power") + 1);
      trLetterBox(true);
      trQuestVarSet("laserxoffset", trQuestVarGet("laserxoffset") + 0.15);
      trQuestVarSet("anglemod", 2.094 / trQuestVarGet("power"));
      trQuestVarSet("angle", 1.0471);
      /**/ for(x=trQuestVarGet("power") + 1; >1) {
      trQuestVarSet("angle", trQuestVarGet("angle") - trQuestVarGet("anglemod"));
      while (trQuestVarGet("angle") > (6.283185)) {
      trQuestVarSet("angle", trQuestVarGet("angle") - (6.283185));
      }
      while (0 > trQuestVarGet("angle")) {
      trQuestVarSet("angle", trQuestVarGet("angle") + 6.283185);
      }
      trVectorQuestVarSet("oliverdir"+x+"",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      /**/ }
      xsDisableRule("_choose_03_upgrade");
      trEcho("Trigger disabling rule choose_03_upgrade");
   }
}

rule _Cin_A_00
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("panel", 0);
      trEventFire(64);
      trMusicPlay("music\standard\(fine layers of) slaysenflite.mp3", "181", 0.0);
      trEventFire(-1);
      trBlockAllSounds(true);
      xsDisableRule("_Cin_A_00");
      trEcho("Trigger disabling rule Cin_A_00");
   }
}

rule _Cin_A_01_s1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trShowImageDialog("Zenophobia\SFA\cin01p"+1*trQuestVarGet("panel")+"", "");
      trEventFire(65);
      xsDisableRule("_Cin_A_01_s1");
      trEcho("Trigger disabling rule Cin_A_01_s1");
   }
}

rule _Cin_A_01_s2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("panel", trQuestVarGet("panel") + 1);
      if(trQuestVarGet("panel") < 15){
      trEventFire(64);
      }
      if(trQuestVarGet("panel") == 13){
      trMusicPlay("music\fight\i wish i could throw shapes.mp3", "65", 0.0);
      }
      xsDisableRule("_Cin_A_01_s2");
      trEcho("Trigger disabling rule Cin_A_01_s2");
   }
}

rule _enemy_kebenit_s_01
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("enemykebenit1") >= 1);

   bool bVar1 = (trQuestVarGet("enemykebenit2") >= 1);

   bool bVar2 = (trQuestVarGet("enemykebenit3") >= 1);


   bool tempExp = (bVar0 || bVar1 || bVar2);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemykebenit"+x+"") >= 1){
      trQuestVarSet("enemykebenit"+x+"name", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Ajax Older", 1, 4.79, 0.00, 5.09, 180, true);
      trQuestVarSet("cow", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Dwarf", 1, 3.240000, 6.280000, 21.330000, 0, true);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("cow"), true);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesKebenitcount");
      trQuestVarSet("zdataliteenemiesKebenitindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesKebenitcount", zdatacount+1);
      trUnitChangeProtoUnit("Relic");
      /**/ trImmediateUnitGarrison(""+1*trQuestVarGet("enemyKebenit"+x+"name"));
      unitTransform("Relic","Kebenit");
      unitTransform("Ajax Older","Priest Projectile");
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemyKebenit"+x+"name"), true);
      trQuestVarSet("enemyKebenit"+x+"starty", 0.3);
      trUnitTeleport(trVectorQuestVarGetX("enemyKebenit"+x+"start"),trVectorQuestVarGetY("enemyKebenit"+x+"start"),trVectorQuestVarGetZ("enemyKebenit"+x+"start"));
      trQuestVarSet("enemiesKebenit"+zdatacount+"angle", 0);
      /**/ }}
      trEventFire(66);
      xsDisableRule("_enemy_kebenit_s_01");
      trEcho("Trigger disabling rule enemy_kebenit_s_01");
   }
}

rule _enemy_kebenit_s_02
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemyfrigatespawn02timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemyfrigatespawn02timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemyfrigatespawn02timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemyfrigatespawn02timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemyfrigatespawn02timer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVenemyfrigatespawn02timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemyfrigatespawn02timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemyfrigatespawn02timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemykebenit"+x+"") >= 1){
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemyKebenit"+x+"name"), true);
      trUnitMoveToPoint(trVectorQuestVarGetX("enemykebenit"+x+"end"),trVectorQuestVarGetY("enemykebenit"+x+"end"),trVectorQuestVarGetZ("enemykebenit"+x+"end"), -1, false);
      trQuestVarSet("enemykebenit"+x+"", trQuestVarGet("enemykebenit"+x+"") - 1);
      /**/ }}
      trEventFire(67);
      xsDisableRule("_enemy_kebenit_s_02");
      trEcho("Trigger disabling rule enemy_kebenit_s_02");
   }
}

rule _enemy_cruiser_s1
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesCruiserCount") >= 1);

   if(trQuestVarGet("Accurate_Timer_QVenemycruisershoottimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemycruisershoottimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemycruisershoottimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemycruisershoottimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemycruisershoottimer_CompTime")) >= 200) {
   for(Accurate_Timer_QVenemycruisershoottimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemycruisershoottimer_DidFirstPass", 0);}
   bool bVar2 = (Accurate_Timer_QVenemycruisershoottimer_IsTrue == 1);

   bool bVar3 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1 && bVar2 && bVar3);
   if (tempExp)
   {
      trQuestVarSet("soundPlay", 0);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteenemiesCruisercount") > (20) && (20) > 0) {
      zdatasearch = 20;
      } else {
      zdatasearch = trQuestVarGet("zdataliteenemiesCruisercount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteenemiesCruiserpointer", trQuestVarGet("zdataliteenemiesCruiserpointer")-1);
      if (0 > trQuestVarGet("zdataliteenemiesCruiserpointer")) {
      trQuestVarSet("zdataliteenemiesCruiserpointer", trQuestVarGet("zdataliteenemiesCruisercount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteenemiesCruiserpointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdataliteenemiesCruiserindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdataliteenemiesCruisercount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiesCruiserpointer");
      trQuestVarSet("zdataliteenemiesCruiserindex"+zdataremove, trQuestVarGet("zdataliteenemiesCruiserindex"+zdatacount));
      trQuestVarSet("zdataliteenemiesCruisercount", zdatacount);
      trQuestVarSet("zdataliteenemiesCruiserpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("enemiesCruiser", trQuestVarGet("zdataliteenemiesCruiserindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("enemiesCruiser"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemiesCruiser"));
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("enemiesCruiser")));
      if ((trVectorQuestVarGetX("maxBound") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxBound") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minBound") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minBound")) == true) {
      trQuestVarSetFromRand("shoot", 1, 25- trGetWorldDifficulty()*2, true);
      if(trQuestVarGet("shoot") == 1){
      for(bb=1; >0) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("p1proj"));
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("V1") + 0,trVectorQuestVarGetY("V1") + 0.2,trVectorQuestVarGetZ("V1") + 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("V1");b = trVectorQuestVarGetY("V1");c = trVectorQuestVarGetZ("V1");
      trVectorQuestVarSet("V1",xsVectorSet(a,b,c));}
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep1projshootbasiccount");
      trQuestVarSet("zdatalitep1projshootbasicindex"+zdatacount, trQuestVarGet("p1proj"));
      trQuestVarSet("zdatalitep1projshootbasiccount", zdatacount+1);
      }
      trQuestVarSet("soundPlay", 1);
      }
      }
      }
      trEventFire(68);
      if(trQuestVarGet("soundPlay") == 1){
      trSoundPlayFN("ui\thunder2.wav", "2", -1, "","");
      trSoundPlayFN("lightningstrike5.wav", "4", -1, "","");
      }
      xsDisableRule("_enemy_cruiser_s1");
      trEcho("Trigger disabling rule enemy_cruiser_s1");
   }
}

rule _enemy_cruiser_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemycruisers2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemycruisers2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemycruisers2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemycruisers2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemycruisers2timer_CompTime")) >= 1) {
   for(Accurate_Timer_QVenemycruisers2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemycruisers2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemycruisers2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("zdatalitep1projshootbasiccount") >= 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep1projshootbasiccount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep1projshootbasiccount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep1projshootbasicpointer", trQuestVarGet("zdatalitep1projshootbasicpointer")-1);
      if (0 > trQuestVarGet("zdatalitep1projshootbasicpointer")) {
      trQuestVarSet("zdatalitep1projshootbasicpointer", trQuestVarGet("zdatalitep1projshootbasiccount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep1projshootbasicpointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdatalitep1projshootbasicindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdatalitep1projshootbasiccount") - 1;
      zdataremove = trQuestVarGet("zdatalitep1projshootbasicpointer");
      trQuestVarSet("zdatalitep1projshootbasicindex"+zdataremove, trQuestVarGet("zdatalitep1projshootbasicindex"+zdatacount));
      trQuestVarSet("zdatalitep1projshootbasiccount", zdatacount);
      trQuestVarSet("zdatalitep1projshootbasicpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p1projshootbasic", trQuestVarGet("zdatalitep1projshootbasicindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("p1projshootbasic"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("p1projshootbasic"));
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("p1projshootbasic")));
      trQuestVarSet("angle", Math_atan( (trVectorQuestVarGetX("playerpos")-trVectorQuestVarGetX("V1")) / (trVectorQuestVarGetZ("playerpos")-trVectorQuestVarGetZ("V1")) ));
      if (trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("playerpos")) {
      if (trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("playerpos")) {
      trQuestVarSet("angle", trQuestVarGet("angle") - PI);
      } else {
      trQuestVarSet("angle", trQuestVarGet("angle") + PI);
      }
      }
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") == 0) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojactivecount");
      trQuestVarSet("zdataliteprojactiveindex"+zdatacount, trQuestVarGet("p1projshootbasic"));
      trQuestVarSet("zdataliteprojactivecount", zdatacount+1);
      }
      trQuestVarSet("zdatalitep1projshootbasiccount", 0);
      trQuestVarSet("zdatalitep1projshootbasicpointer", 0);
      trQuestVarSet("p1projshootbasic", 0);
      }
      trEventFire(69);
      xsDisableRule("_enemy_cruiser_s2");
      trEcho("Trigger disabling rule enemy_cruiser_s2");
   }
}

rule _enemy_kebenit_s1
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesKebenitCount") >= 1);

   if(trQuestVarGet("Accurate_Timer_QVenemyfrigateshoottimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemyfrigateshoottimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemyfrigateshoottimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemyfrigateshoottimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemyfrigateshoottimer_CompTime")) >= 60 + trQuestVarGet("delay")) {
   for(Accurate_Timer_QVenemyfrigateshoottimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemyfrigateshoottimer_DidFirstPass", 0);}
   bool bVar2 = (Accurate_Timer_QVenemyfrigateshoottimer_IsTrue == 1);

   bool bVar3 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1 && bVar2 && bVar3);
   if (tempExp)
   {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteenemieskebenitcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteenemieskebenitcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteenemieskebenitpointer", trQuestVarGet("zdataliteenemieskebenitpointer")-1);
      if (0 > trQuestVarGet("zdataliteenemieskebenitpointer")) {
      trQuestVarSet("zdataliteenemieskebenitpointer", trQuestVarGet("zdataliteenemieskebenitcount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteenemieskebenitpointer");
      trQuestVarSet("enemieskebenit", trQuestVarGet("zdataliteenemieskebenitindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("enemieskebenit"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemieskebenit"), true);
      if(trUnitDead()==true){
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesKebenitcount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiesKebenitpointer");
      trQuestVarSet("zdataliteenemiesKebenitindex"+zdataremove, trQuestVarGet("zdataliteenemiesKebenitindex"+zdatacount));
      trQuestVarSet("zdataliteenemiesKebenitcount", zdatacount);
      if (trQuestVarGet("zdataliteenemiesKebenitpointer") >= trQuestVarGet("zdataliteenemiesKebenitcount")) {
      trQuestVarSet("zdataliteenemiesKebenitpointer", trQuestVarGet("zdataliteenemiesKebenitcount")-1);
      }
      trQuestVarCopy("enemiesKebenit"+zdatapointer+"angle", "enemiesKebenit"+zdatacount+"angle");
      /**/ continue; }
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("enemieskebenit"), true));
      if ((trVectorQuestVarGetX("maxBound") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxBound") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minBound") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minBound")) == true) {
      for(bb=1; >0) {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projpointer")+1);
      if (trQuestVarGet("p5projpointer") > trQuestVarGet("p5projend")) {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projstart"));
      }
      trQuestVarSet("p5proj", trQuestVarGet("p5projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p5proj"));
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("V1") + 0,trVectorQuestVarGetY("V1") + 1.5,trVectorQuestVarGetZ("V1") + 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("V1");b = trVectorQuestVarGetY("V1");c = trVectorQuestVarGetZ("V1");
      trVectorQuestVarSet("V1",xsVectorSet(a,b,c));}
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep6projshootKebenitcount");
      trQuestVarSet("zdatalitep6projshootKebenitindex"+zdatacount, trQuestVarGet("p5proj"));
      trQuestVarSet("zdatalitep6projshootKebenitcount", zdatacount+1);
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("enemiesKebenit"+zdatapointer+"angle")) * 1.0, 0, Math_cos(trQuestVarGet("enemiesKebenit"+zdatapointer+"angle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p6proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p6proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      trQuestVarSet("enemiesKebenit"+zdatapointer+"angle", trQuestVarGet("enemiesKebenit"+zdatapointer+"angle") + trQuestVarGet("kebenitAngle"));
      while (trQuestVarGet("enemiesKebenit"+zdatapointer+"angle") > (6.283185)) {
      trQuestVarSet("enemiesKebenit"+zdatapointer+"angle", trQuestVarGet("enemiesKebenit"+zdatapointer+"angle") - (6.283185));
      }
      while (0 > trQuestVarGet("enemiesKebenit"+zdatapointer+"angle")) {
      trQuestVarSet("enemiesKebenit"+zdatapointer+"angle", trQuestVarGet("enemiesKebenit"+zdatapointer+"angle") + 6.283185);
      }
      }
      }
      }
      trEventFire(70);
      xsDisableRule("_enemy_kebenit_s1");
      trEcho("Trigger disabling rule enemy_kebenit_s1");
   }
}

rule _enemy_kebenit_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemyfrigates2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemyfrigates2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemyfrigates2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemyfrigates2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemyfrigates2timer_CompTime")) >= 1) {
   for(Accurate_Timer_QVenemyfrigates2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemyfrigates2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemyfrigates2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("zdatalitep6projshootKebenitcount") >= 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep6projshootKebenitcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep6projshootKebenitcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep6projshootKebenitpointer", trQuestVarGet("zdatalitep6projshootKebenitpointer")-1);
      if (0 > trQuestVarGet("zdatalitep6projshootKebenitpointer")) {
      trQuestVarSet("zdatalitep6projshootKebenitpointer", trQuestVarGet("zdatalitep6projshootKebenitcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep6projshootKebenitpointer");
      trQuestVarSet("p6projshootKebenit", trQuestVarGet("zdatalitep6projshootKebenitindex"+zdatapointer));
      UnitID = trQuestVarGet("p6projshootKebenit");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p6proj"+zdatapointer+"target"),trVectorQuestVarGetY("p6proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p6proj"+zdatapointer+"target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojactivecount");
      trQuestVarSet("zdataliteprojactiveindex"+zdatacount, trQuestVarGet("p6projshootKebenit"));
      trQuestVarSet("zdataliteprojactivecount", zdatacount+1);
      }
      trQuestVarSet("zdatalitep6projshootKebenitcount", 0);
      trQuestVarSet("zdatalitep6projshootKebenitpointer", 0);
      trQuestVarSet("p6projshootKebenit", 0);
      }
      trEventFire(71);
      xsDisableRule("_enemy_kebenit_s2");
      trEcho("Trigger disabling rule enemy_kebenit_s2");
   }
}

rule __proj_convert
highFrequency
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      xsEnableRule("zenowashereswirlcode");
      xsDisableSelf();}}
      /**/ void projectileConvert(int x = 0, string y = "", string z = "", float w = 0.4, float s = 1, float h = 0) {
      /**/ 
      /**/ for(sfx1 = kbGetProtoUnitID(""+y);<-1){}
      /**/ for (sfx2 = kbGetProtoUnitID(""+z);<-1){}
      /**/ 
      /**/ for(k = 0;>1){}
      /**/ 
      for(bb=256; >0) {
      trQuestVarSet("p"+x+"projpointer", trQuestVarGet("p"+x+"projpointer")+1);
      if (trQuestVarGet("p"+x+"projpointer") > trQuestVarGet("p"+x+"projend")) {
      trQuestVarSet("p"+x+"projpointer", trQuestVarGet("p"+x+"projstart"));
      }
      trQuestVarSet("p"+x+"proj", trQuestVarGet("p"+x+"projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p"+x+"proj"));
      /**/ k = trQuestVarGet("p"+x+"proj");
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(1280+k); trSetSelectedScale(s, s, s); trUnitHighlight(h, 0);
      /**/ trMutateSelected(sfx1); trUnitOverrideAnimation(0, 0, 1, 1, -1, 0);
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(2560+k); trSetSelectedScale(s, s, s); trUnitHighlight(h, 0);
      /**/ trMutateSelected(sfx2); trUnitOverrideAnimation(0, 0, 1, 1, -1, 0);
      /**/ 
      /**/ trQuestVarSet("p"+x+"hitbox", w);
      /**/ 
      /**/ 
      /**/ 
      }
      /**/ }
      rule zenowashereswirlcode
      inactive
      highFrequency
      {
      if(true) {
      xsDisableSelf();
      xsDisableRule("__proj_convert");
      trEcho("Trigger disabling rule _proj_convert");
   }
}

rule ____y_always
highFrequency
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteplayerprojactivecount") > (6) && (6) > 0) {
      zdatasearch = 6;
      } else {
      zdatasearch = trQuestVarGet("zdataliteplayerprojactivecount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteplayerprojactivepointer", trQuestVarGet("zdataliteplayerprojactivepointer")-1);
      if (0 > trQuestVarGet("zdataliteplayerprojactivepointer")) {
      trQuestVarSet("zdataliteplayerprojactivepointer", trQuestVarGet("zdataliteplayerprojactivecount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteplayerprojactivepointer");
      trQuestVarSet("playerprojactive", trQuestVarGet("zdataliteplayerprojactiveindex"+zdatapointer));
      UnitID = trQuestVarGet("playerprojactive");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("playerprojactive")));
      if ((trVectorQuestVarGetX("maxbound") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxbound") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minbound") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minbound")) == false) {
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteplayerprojactivecount") - 1;
      zdataremove = trQuestVarGet("zdataliteplayerprojactivepointer");
      trQuestVarSet("zdataliteplayerprojactiveindex"+zdataremove, trQuestVarGet("zdataliteplayerprojactiveindex"+zdatacount));
      trQuestVarSet("zdataliteplayerprojactivecount", zdatacount);
      if (trQuestVarGet("zdataliteplayerprojactivepointer") >= trQuestVarGet("zdataliteplayerprojactivecount")) {
      trQuestVarSet("zdataliteplayerprojactivepointer", 1);
      }
      /**/ continue; }
      /**/ if (damageEnemy("UtilityShip", 2)) { break; }
      /**/ if (damageEnemy("SiegeShip", 4)) { break; }
      /**/ if (damageEnemy("Fire Siphon", 4)) { break; }
      /**/ if (damageEnemy("HammerShip", 3)) { break; }
      /**/ if (damageEnemy("TransportShip", 3)) { break; }
      /**/ if (damageEnemy("Siege Tower", 4)) { break; }
      /**/ if (damageEnemy("ArcherShip", 4)) { break; }
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      if(trQuestVarGet("pilot") == 1){
      if(trQuestVarGet("playerproj"+1*trQuestVarGet("playerprojactive")+"target") == -1){
      if(trUnitDistanceToUnit("5906") > 6.0){
      for(zdatapointer=0;>1){}
      if (trQuestVarGet("zdataliteenemiescount") == 0) {
      trQuestVarSet("enemies", -1);
      } else {
      trQuestVarSet("zdataliteenemiespointer", trQuestVarGet("zdataliteenemiespointer")-1);
      if (0 > trQuestVarGet("zdataliteenemiespointer")) {
      trQuestVarSet("zdataliteenemiespointer", trQuestVarGet("zdataliteenemiescount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteenemiespointer");
      trQuestVarSet("enemies", trQuestVarGet("zdataliteenemiesindex"+zdatapointer));
      }
      /**/ 
      trQuestVarCopy("playerproj"+1*trQuestVarGet("playerprojactive")+"target", "enemies");
      /**/ 
      }
      }
      if(trQuestVarGet("playerproj"+1*trQuestVarGet("playerprojactive")+"target") > 0){
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("playerproj"+1*trQuestVarGet("playerprojactive")+"target"), true);
      if(trUnitPercentDamaged() < 100){
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("playerprojactive"));
      trVectorQuestVarSet("playerproj"+1*trQuestVarGet("playerprojactive")+"pos", kbGetBlockPosition(""+1*trQuestVarGet("playerprojactive")));
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("playerproj"+1*trQuestVarGet("playerprojactive")+"target"), true));
      trVectorQuestVarSet("V1", trVectorQuestVarGet("V1") - trVectorQuestVarGet("playerproj"+1*trQuestVarGet("playerprojactive")+"pos"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("V1");b = trVectorQuestVarGetY("V1");c = trVectorQuestVarGetZ("V1");
      trVectorQuestVarSet("V1",xsVectorSet(a,b,c));}
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("V1") / trVectorQuestVarGetX("V1"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("playerproj"+1*trQuestVarGet("playerprojactive")+"pos") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("playerproj"+1*trQuestVarGet("playerprojactive")+"pos"));
      if (0.0 > trVectorQuestVarGetX("V1")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("V1") == 0) {
      trVectorQuestVarSet("playerproj"+1*trQuestVarGet("playerprojactive")+"target", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("V1")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("playerproj"+1*trQuestVarGet("playerprojactive")+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("playerproj"+1*trQuestVarGet("playerprojactive")+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("playerproj"+1*trQuestVarGet("playerprojactive")+"target"),trVectorQuestVarGetY("playerproj"+1*trQuestVarGet("playerprojactive")+"target"),trVectorQuestVarGetZ("playerproj"+1*trQuestVarGet("playerprojactive")+"target"), -1, false);
      } else {
      trQuestVarSet("playerproj"+1*trQuestVarGet("playerprojactive")+"target", 0);
      }
      /**/ } else
      if(trQuestVarGet("playerproj"+1*trQuestVarGet("playerprojactive")+"target") == 0){
      trUnitMoveToPoint(trVectorQuestVarGetX("playerproj"+1*trQuestVarGet("playerprojactive")+"target"),trVectorQuestVarGetY("playerproj"+1*trQuestVarGet("playerprojactive")+"target"),trVectorQuestVarGetZ("playerproj"+1*trQuestVarGet("playerprojactive")+"target"), -1, false);
      }
      }
      }
      /**/ searchIncomingEnemies();
      /**/ searchDeadEnemies();
      /**/ searchMissiles();
      /**/ searchActiveProj();
      if(trQuestVarGet("boss") < 2){
      /**/ starCode();
      }
      xsDisableRule("____y_always");
      trEcho("Trigger disabling rule ___y_always");
      trDelayedRuleActivation("____y_always");
   }
}

rule _patch_28
highFrequency
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("lava1type", trGetTerrainType(0, 49));
      trQuestVarSet("lava1subtype", trGetTerrainSubType(0, 49));
      trQuestVarSet("coral1type", trGetTerrainType(1, 49));
      trQuestVarSet("coral1subtype", trGetTerrainSubType(1, 49));
      trQuestVarSet("blacktype", trGetTerrainType(2, 49));
      trQuestVarSet("blacksubtype", trGetTerrainSubType(2, 49));
      for(tempX=0; >1){}
      for(tempZ=0; >1){}
      tempX = xsFloor(xsVectorGetX(vector(0.84, 6.58, 99.03)) / 2.0);
      tempZ = xsFloor(xsVectorGetZ(vector(0.84, 6.58, 99.03)) / 2.0);
      trQuestVarSet("lava1val", 1000 * trGetTerrainType(tempX, tempZ) + trGetTerrainSubType(tempX, tempZ));
      for(tempX=0; >1){}
      for(tempZ=0; >1){}
      tempX = xsFloor(xsVectorGetX(vector(3.43, 6.58, 98.61)) / 2.0);
      tempZ = xsFloor(xsVectorGetZ(vector(3.43, 6.58, 98.61)) / 2.0);
      trQuestVarSet("coral1val", 1000 * trGetTerrainType(tempX, tempZ) + trGetTerrainSubType(tempX, tempZ));
      for(tempX=0; >1){}
      for(tempZ=0; >1){}
      tempX = xsFloor(xsVectorGetX(vector(5.35, 6.58, 99.25)) / 2.0);
      tempZ = xsFloor(xsVectorGetZ(vector(5.35, 6.58, 99.25)) / 2.0);
      trQuestVarSet("blackval", 1000 * trGetTerrainType(tempX, tempZ) + trGetTerrainSubType(tempX, tempZ));
      trUnitSelectClear();
      trUnitSelectByID(6012);
      trUnitSelectByID(6011);
      trUnitSelectByID(6010);
      trUnitSelectByID(6014);
      trUnitSelectByID(6015);
      trUnitSelectByID(6013);
      trMutateSelected(kbGetProtoUnitID("Stymph Bird Feather"));
      trQuestVarSet("coral2type", trGetTerrainType(3, 49));
      trQuestVarSet("coral2subtype", trGetTerrainSubType(3, 49));
      for(tempX=0; >1){}
      for(tempZ=0; >1){}
      tempX = xsFloor(xsVectorGetX(vector(7.12, 0.00, 99.04)) / 2.0);
      tempZ = xsFloor(xsVectorGetZ(vector(7.12, 0.00, 99.04)) / 2.0);
      trQuestVarSet("coral2val", 1000 * trGetTerrainType(tempX, tempZ) + trGetTerrainSubType(tempX, tempZ));
      trQuestVarSet("shoreline1type", trGetTerrainType(4, 49));
      trQuestVarSet("shoreline1subtype", trGetTerrainSubType(4, 49));
      for(tempX=0; >1){}
      for(tempZ=0; >1){}
      tempX = xsFloor(xsVectorGetX(vector(9.33, 0.00, 99.19)) / 2.0);
      tempZ = xsFloor(xsVectorGetZ(vector(9.33, 0.00, 99.19)) / 2.0);
      trQuestVarSet("shoreline1val", 1000 * trGetTerrainType(tempX, tempZ) + trGetTerrainSubType(tempX, tempZ));
      trQuestVarSet("city1type", trGetTerrainType(2, 48));
      trQuestVarSet("city1subtype", trGetTerrainSubType(2, 48));
      for(tempX=0; >1){}
      for(tempZ=0; >1){}
      tempX = xsFloor(xsVectorGetX(vector(5.22, -0.00, 97.30)) / 2.0);
      tempZ = xsFloor(xsVectorGetZ(vector(5.22, -0.00, 97.30)) / 2.0);
      trQuestVarSet("city1val", 1000 * trGetTerrainType(tempX, tempZ) + trGetTerrainSubType(tempX, tempZ));
      xsDisableRule("_patch_28");
      trEcho("Trigger disabling rule patch_28");
   }
}

rule _Cin_Z_03
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trOverlayText("                       Episode 2 - The Order Strikes Back", 3.0, 320, 360, 800);
      trEventFire(72);
      xsDisableRule("_Cin_Z_03");
      trEcho("Trigger disabling rule Cin_Z_03");
   }
}

rule _escape_2
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trLetterBox(false);
      trYouLose();
      trEndGame();
      xsDisableRule("_escape_2");
      trEcho("Trigger disabling rule escape_2");
   }
}

rule _Cin_Choose_00
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("panel", 0);
      trEventFire(73);
      trEventFire(74);
      trBlockAllSounds(true);
      trLetterBox(false);
      xsDisableRule("_Cin_Choose_00");
      trEcho("Trigger disabling rule Cin_Choose_00");
   }
}

rule _Cin_Choose_01_s1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trShowImageDialog("Zenophobia\SFA\cin01p"+1*trQuestVarGet("panel")+"", "");
      trEventFire(75);
      xsDisableRule("_Cin_Choose_01_s1");
      trEcho("Trigger disabling rule Cin_Choose_01_s1");
   }
}

rule _Cin_Choose_01_s2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("panel", trQuestVarGet("panel") + 1);
      if(trQuestVarGet("panel") < 3){
      trEventFire(73);
      }
      xsDisableRule("_Cin_Choose_01_s2");
      trEcho("Trigger disabling rule Cin_Choose_01_s2");
   }
}

rule _Cin_Choose_02
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("panel") == 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trShowChoiceDialog("Choose your fighter", "Ace", 76, "Oliver", 77);
      trEventFire(78);
      xsDisableRule("_Cin_Choose_02");
      trEcho("Trigger disabling rule Cin_Choose_02");
   }
}

rule _Cin_Choose_03
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trLetterBox(true);
      /* BACKDOOR */
      if(false) {
      /**/ projectileConvert(1, "Catapult Shot", "Einheriar Boost SFX", 0.4);
      /**/ projectileConvert(2, "Petosuchus Projectile", "Invisible Target", 0.3, 1, 3600);
      /**/ projectileConvert(3, "Catapult Shot", "Einheriar Boost SFX", 0.4);
      /**/ projectileConvert(4, "Tower Mirror", "Invisible Target", 0.8, 0);
      /**/ projectileConvert(5, "Outpost", "Invisible Target", 0.6, 0);
      /**/ 
      trQuestVarSet("power", 3);
      trEventFire(61);
      /**/ } else {
      trEventFire(79);
      }
      xsDisableRule("_Cin_Choose_03");
      trEcho("Trigger disabling rule Cin_Choose_03");
   }
}

rule _choose_ace
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(30);
      trEventFire(39);
      trEventFire(44);
      trQuestVarSet("playerprojstart", kbGetBlockID("1"));
      trQuestVarCopy("playerprojpointer", "playerprojstart");
      trQuestVarSet("playerprojend", trQuestVarGet("playerprojstart") + 63 - 1);
      trEventFire(80);
      trQuestVarSet("pilot", 0);
      for(bb=63; >0) {
      trQuestVarSet("playerprojpointer", trQuestVarGet("playerprojpointer")+1);
      if (trQuestVarGet("playerprojpointer") > trQuestVarGet("playerprojend")) {
      trQuestVarSet("playerprojpointer", trQuestVarGet("playerprojstart"));
      }
      trQuestVarSet("playerproj", trQuestVarGet("playerprojpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("playerproj"));
      /**/ trUnitSetHeading(0);
      }
      trQuestVarSet("moveFast", 3.0);
      trQuestVarSet("moveslow", 0.9);
      /**/ trUnitSelectClear(); trUnitSelectByID(0);
      trVectorQuestVarSet("lasertimerstart", xsVectorSet(10,0,10));
      trVectorQuestVarSet("lasertimerend", xsVectorSet(90,0,10));
      trUnitTeleport(trVectorQuestVarGetX("lasertimerstart"),trVectorQuestVarGetY("lasertimerstart"),trVectorQuestVarGetZ("lasertimerstart"));
      trEventFire(43);
      xsDisableRule("_choose_ace");
      trEcho("Trigger disabling rule choose_ace");
   }
}

rule _choose_oliver
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("playerprojstart", kbGetBlockID("0"));
      trQuestVarCopy("playerprojpointer", "playerprojstart");
      trQuestVarSet("playerprojend", trQuestVarGet("playerprojstart") + 32 - 1);
      for(bb=32; >0) {
      trQuestVarSet("playerprojpointer", trQuestVarGet("playerprojpointer")+1);
      if (trQuestVarGet("playerprojpointer") > trQuestVarGet("playerprojend")) {
      trQuestVarSet("playerprojpointer", trQuestVarGet("playerprojstart"));
      }
      trQuestVarSet("playerproj", trQuestVarGet("playerprojpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("playerproj"));
      trUnitChangeProtoUnit("Ajax Older");
      /**/ trSetSelectedScale(0.0, 50.0, 0.0);
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(1*trQuestVarGet("playerproj")+32);
      /**/ trUnitChangeProtoUnit("Relic");
      /**/ trImmediateUnitGarrison(""+1*trQuestVarGet("playerproj"));
      /**/ trMutateSelected(kbGetProtoUnitID("Lampades"));
      /**/ trSetSelectedScale(0.0, 0.0, 0.0);
      }
      unitTransform("Ajax Older","Manticore Barb");
      trEventFire(81);
      trModifyProtounit("Manticore Barb", 2, 1, -10);
      trVectorQuestVarSet("oliverdir1",xsVectorSet(Math_sin(1.047) * 1.0, 0, Math_cos(1.047) * 1.0));
      trVectorQuestVarSet("oliverdir2",xsVectorSet(Math_sin(5.236) * 1.0, 0, Math_cos(5.236) * 1.0));
      trVectorQuestVarSet("oliverdir3",xsVectorSet(Math_sin(0.01) * 1.0, 0, Math_cos(0.01) * 1.0));
      trVectorQuestVarSet("oliverdir4",xsVectorSet(Math_sin(0.02) * 1.0, 0, Math_cos(0.02) * 1.0));
      trQuestVarSet("pilot", 1);
      trEventFire(82);
      trUnitSelectClear();
      trUnitSelectByID(5907);
      trUnitSelectByID(5906);
      trUnitChangeProtoUnit("Cinematic Block");
      trUnitSelectClear();
      trUnitSelectByID(5904);
      trUnitSelectByID(5908);
      trUnitSelectByID(5909);
      trUnitSelectByID(5910);
      trUnitSelectByID(5911);
      trUnitSelectByID(5912);
      trUnitChangeProtoUnit("Ajax Older");
      trUnitSelectClear();
      trUnitSelectByID(5905);
      trUnitSelectByID(5913);
      trUnitSelectByID(5914);
      trUnitSelectByID(5915);
      trUnitSelectByID(5916);
      trUnitSelectByID(5917);
      trUnitChangeProtoUnit("Relic");
      trUnitSelectClear();
      trUnitSelectByID(5905);
      trImmediateUnitGarrison("5904");
      /**/ for(x=5912; >5907) {
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(x+5);
      /**/ trImmediateUnitGarrison(""+x);
      /**/ trVectorQuestVarSet("V1", kbGetBlockPosition(""+x));
      /**/ 
      /**/ 
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1") - 0.1,trVectorQuestVarGetZ("V1")));
      /**/ trUnitSelectClear();
      /**/ trUnitSelect(""+x);
      /**/ trMutateSelected(kbGetProtoUnitID("Wadjet Spit"));
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      /**/ }
      trUnitSelectClear();
      trUnitSelectByID(5905);
      trUnitSelectByID(5913);
      trUnitSelectByID(5914);
      trUnitSelectByID(5915);
      trUnitSelectByID(5916);
      trUnitSelectByID(5917);
      trMutateSelected(kbGetProtoUnitID("Servant"));
      trUnitSelectClear();
      trUnitSelectByID(5904);
      trUnitSelectByID(5908);
      trUnitSelectByID(5909);
      trUnitSelectByID(5910);
      trUnitSelectByID(5911);
      trUnitSelectByID(5912);
      trMutateSelected(kbGetProtoUnitID("Wadjet Spit"));
      trVectorQuestVarSet("playerpos", xsVectorSet(trVectorQuestVarGetX("playerpos") - 0,trVectorQuestVarGetY("playerpos") - 0.1,trVectorQuestVarGetZ("playerpos") - 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("playerpos");b = trVectorQuestVarGetY("playerpos");c = trVectorQuestVarGetZ("playerpos");
      trVectorQuestVarSet("playerpos",xsVectorSet(a,b,c));}
      trUnitSelectClear();
      trUnitSelectByID(5904);
      trUnitTeleport(trVectorQuestVarGetX("playerpos"),trVectorQuestVarGetY("playerpos"),trVectorQuestVarGetZ("playerpos"));
      trQuestVarSet("movefast", 2.5);
      trQuestVarSet("moveslow", 0.75);
      trVectorQuestVarSet("nextLife", xsVectorSet(trVectorQuestVarGetX("nextLife") - 0,trVectorQuestVarGetY("nextLife") - 0.1,trVectorQuestVarGetZ("nextLife") - 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("nextLife");b = trVectorQuestVarGetY("nextLife");c = trVectorQuestVarGetZ("nextLife");
      trVectorQuestVarSet("nextLife",xsVectorSet(a,b,c));}
      xsDisableRule("_choose_oliver");
      trEcho("Trigger disabling rule choose_oliver");
   }
}

rule _basic_proj_unlock
highFrequency
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      unitTransform("Lava Sheet","Relic");
      /**/ for(x=5926; >5917) {
      /**/ trUnitSelectClear();
      /**/ trUnitSelect(""+x);
      /**/ trUnitChangeProtoUnit("Ajax Older");
      /**/ trUnitSelectClear();
      /**/ trUnitSelect(""+(x+9));
      /**/ trImmediateUnitGarrison(""+x);
      /**/ }
      unitTransform("Relic","Lava Sheet");
      unitTransform("Ajax Older","Wadjet Spit");
      /**/ int a = kbGetProtoUnitID("Ajax Older");
      /**/ int v = kbGetProtoUnitID("Victory Marker");
      /**/ int r = kbGetProtoUnitID("Relic");
      /**/ int k = kbGetProtoUnitID("Cinematic Rocks");
      /**/ kbLookAtAllUnitsOnMap();
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      for(bb=16; >0) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidspointer")+1);
      if (trQuestVarGet("asteroidspointer") > trQuestVarGet("asteroidsend")) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidsstart"));
      }
      trQuestVarSet("asteroids", trQuestVarGet("asteroidspointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("asteroids"));
      /**/ trMutateSelected(a);
      /**/ trSetSelectedScale(0, 50, 0);
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(1*trQuestVarGet("asteroids")+16);
      /**/ trMutateSelected(r);
      /**/ trImmediateUnitGarrison(""+1*trQuestVarGet("asteroids"));
      trQuestVarSetFromRand("scale", 1, 4, false);
      trQuestVarSetFromRand("path", 10, 13, true);
      /**/ trMutateSelected(k);
      /**/ trSetSelectedScale(trQuestVarGet("scale"),0.05,trQuestVarGet("scale"));
      /**/ trUnitSetAnimationPath(""+1*trQuestVarGet("path")+",0,0,0,0,0,0");
      /**/ 
      /**/ 
      /**/ 
      }
      unitTransform("Ajax Older","Catapult Shot");
      /**/ for(x=5; >0) {
      for(bb=256; >0) {
      trQuestVarSet("p"+x+"projpointer", trQuestVarGet("p"+x+"projpointer")+1);
      if (trQuestVarGet("p"+x+"projpointer") > trQuestVarGet("p"+x+"projend")) {
      trQuestVarSet("p"+x+"projpointer", trQuestVarGet("p"+x+"projstart"));
      }
      trQuestVarSet("p"+x+"proj", trQuestVarGet("p"+x+"projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p"+x+"proj"));
      trUnitConvert(x);
      /**/ trMutateSelected(a);
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(1*trQuestVarGet("p"+x+"proj")+1280);
      /**/ trUnitSelectByID(1*trQuestVarGet("p"+x+"proj")+2560);
      /**/ trUnitSelectByID(1*trQuestVarGet("p"+x+"proj")+3840);
      /**/ trMutateSelected(r);
      /**/ 
      /**/ 
      /**/ trUnitConvert(x);
      /**/ trImmediateUnitGarrison(""+1*trQuestVarGet("p"+x+"proj"));
      /**/ trMutateSelected(v);
      /**/ 
      }
      /**/ }
      /**/ kbLookAtAllUnitsOnMap();
      unitTransform("Ajax Older","Wadjet Spit");
      xsDisableRule("_basic_proj_unlock");
      trEcho("Trigger disabling rule basic_proj_unlock");
   }
}

rule _move_to_oliver
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   if(trQuestVarGet("Accurate_Timer_QVmovetotimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVmovetotimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVmovetotimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVmovetotimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVmovetotimer_CompTime")) >= 10) {
   for(Accurate_Timer_QVmovetotimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVmovetotimer_DidFirstPass", 0);}
   bool bVar1 = (Accurate_Timer_QVmovetotimer_IsTrue == 1);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      /**/ 
      /**/ if ((trVectorQuestVarGetX("playerMove") > trVectorQuestVarGetX("playerPos") + 0.2 && trVectorQuestVarGetX("direction") > 0) ||
      /**/ (trVectorQuestVarGetX("playerMove")  < trVectorQuestVarGetX("playerPos") - 0.2 && trVectorQuestVarGetX("direction") < 0) ||
      /**/ (trVectorQuestVarGetZ("playerMove")  > trVectorQuestVarGetZ("playerPos") + 0.25 && trVectorQuestVarGetZ("direction") > 0) ||
      /**/ (trVectorQuestVarGetZ("playerMove")  < trVectorQuestVarGetZ("playerPos") - 0.25 && trVectorQuestVarGetZ("direction") < 0)) {
      /**/ 
      /**/ 
      trVectorQuestVarSet("playerPos", trVectorQuestVarGet("playerPos") + trVectorQuestVarGet("direction"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("playerPos");b = trVectorQuestVarGetY("playerPos");c = trVectorQuestVarGetZ("playerPos");
      trVectorQuestVarSet("playerPos",xsVectorSet(a,b,c));}
      trUnitSelectClear();
      trUnitSelectByID(5904);
      trUnitSelectByID(5907);
      trUnitSelectByID(5905);
      trUnitSelectByID(5906);
      trUnitTeleport(trVectorQuestVarGetX("playerPos"),trVectorQuestVarGetY("playerPos"),trVectorQuestVarGetZ("playerPos"));
      /**/ }
      xsDisableRule("_move_to_oliver");
      trEcho("Trigger disabling rule move_to_oliver");
      trDelayedRuleActivation("_move_to_oliver");
   }
}

rule _Shoot_spread_oliver_01
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   if(trQuestVarGet("Accurate_Timer_QVshootspread01timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootspread01timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootspread01timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootspread01timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootspread01timer_CompTime")) >= 500) {
   for(Accurate_Timer_QVshootspread01timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootspread01timer_DidFirstPass", 0);}
   bool bVar1 = (Accurate_Timer_QVshootspread01timer_IsTrue == 1);

   bool bVar2 = (trQuestVarGet("ceasefire") == 0);


   bool tempExp = (bVar0 && bVar1 && bVar2);
   if (tempExp)
   {
      trVectorQuestVarSet("V1", xsVectorSet(trQuestVarGet("playerposx"),1.5,trQuestVarGet("playerposz")));
      for(bb=1+trQuestVarGet("power"); >0) {
      trQuestVarSet("playerprojpointer", trQuestVarGet("playerprojpointer")+1);
      if (trQuestVarGet("playerprojpointer") > trQuestVarGet("playerprojend")) {
      trQuestVarSet("playerprojpointer", trQuestVarGet("playerprojstart"));
      }
      trQuestVarSet("playerproj", trQuestVarGet("playerprojpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("playerproj"));
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      /**/ trMutateSelected(kbGetProtoUnitID("Manticore Barb"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteplayerprojshootcount");
      trQuestVarSet("zdataliteplayerprojshootindex"+zdatacount, trQuestVarGet("playerproj"));
      trQuestVarSet("zdataliteplayerprojshootcount", zdatacount+1);
      trQuestVarSet("playerproj"+1*trQuestVarGet("playerproj")+"target", -1);
      }
      trEventFire(83);
      xsDisableRule("_Shoot_spread_oliver_01");
      trEcho("Trigger disabling rule Shoot_spread_oliver_01");
   }
}

rule _Shoot_spread_oliver_02
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootspread02timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootspread02timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootspread02timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootspread02timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootspread02timer_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootspread02timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootspread02timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootspread02timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(82);
      trVectorQuestVarSet("playershootstart", xsVectorSet(trQuestVarGet("playerposx"),0,trQuestVarGet("playerposz")));
      /**/ for(x=1+trQuestVarGet("power"); >0) {
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("oliverdir"+x+"") / trVectorQuestVarGetX("oliverdir"+x+""));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("playershootstart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("playershootstart"));
      if (0.0 > trVectorQuestVarGetX("oliverdir"+x+"")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("oliverdir"+x+"") == 0) {
      trVectorQuestVarSet("players"+x+"", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("oliverdir"+x+"")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("players"+x+"", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("players"+x+"", trVectorQuestVarGet("ziwrposs2"));
      }
      /**/ }
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteplayerprojshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteplayerprojshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteplayerprojshootpointer", trQuestVarGet("zdataliteplayerprojshootpointer")-1);
      if (0 > trQuestVarGet("zdataliteplayerprojshootpointer")) {
      trQuestVarSet("zdataliteplayerprojshootpointer", trQuestVarGet("zdataliteplayerprojshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteplayerprojshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdataliteplayerprojshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdataliteplayerprojshootcount") - 1;
      zdataremove = trQuestVarGet("zdataliteplayerprojshootpointer");
      trQuestVarSet("zdataliteplayerprojshootindex"+zdataremove, trQuestVarGet("zdataliteplayerprojshootindex"+zdatacount));
      trQuestVarSet("zdataliteplayerprojshootcount", zdatacount);
      trQuestVarSet("zdataliteplayerprojshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("playerprojshoot", trQuestVarGet("zdataliteplayerprojshootindex"+zdatapointer));
      UnitID = trQuestVarGet("playerprojshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("players"+zdatasearching+""),trVectorQuestVarGetY("players"+zdatasearching+""),trVectorQuestVarGetZ("players"+zdatasearching+""), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteplayerprojactivecount");
      trQuestVarSet("zdataliteplayerprojactiveindex"+zdatacount, trQuestVarGet("playerprojshoot"));
      trQuestVarSet("zdataliteplayerprojactivecount", zdatacount+1);
      }
      trQuestVarSet("zdataliteplayerprojshootcount", 0);
      trQuestVarSet("zdataliteplayerprojshootpointer", 0);
      trQuestVarSet("playerprojshoot", 0);
      xsDisableRule("_Shoot_spread_oliver_02");
      trEcho("Trigger disabling rule Shoot_spread_oliver_02");
   }
}

rule _Stage_B_01_Start
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trUIFadeToColor(0,0,0,1000,0,false);
      trOverlayText("Stage 2: Confront Yeebaagooon", 3.0, 400, 150, 800);
      trBlockAllSounds(true);
      trQuestVarSet("stage", 2);
      trVectorQuestVarSet("bosspos", kbGetBlockPosition("6003"));
      trVectorQuestVarSet("bossmove", kbGetBlockPosition("6003"));
      trQuestVarSet("play", 1);
      trMusicPlay("music\fight\li'l drips.mp3", "78", 0.0);
      trEventFire(84);
      /**/ trCameraCut(vector(50.0,130.0,50.0), vector(0.0,-1.000000,0.0), vector(0.0,0.0,1.0), vector(1.0,0.0,0.0));
      trStringQuestVarSet("bossHealthBar", "Stage 2: Confront Yeebaagooon");
      trSoundPlayFN("default", "1", -1, "Lives "+1*trQuestVarGet("lives")+" Bombs "+1*trQuestVarGet("bombs")+": "+trStringQuestVarGet("bossHealthBar")+"","");
      for(bb=16; >0) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidspointer")+1);
      if (trQuestVarGet("asteroidspointer") > trQuestVarGet("asteroidsend")) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidsstart"));
      }
      trQuestVarSet("asteroids", trQuestVarGet("asteroidspointer"));
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("asteroids"));
      trQuestVarSetFromRand("xpos", trQuestVarGet("minEnterX") + 5.0, trQuestVarGet("maxEnterX") - 5.0, false);
      trQuestVarSetFromRand("zpos", trQuestVarGet("minEnterz"), trQuestVarGet("maxEnterz"), false);
      trVectorQuestVarSet("V1", xsVectorSet(trQuestVarGet("xpos"),0.2,trQuestVarGet("zpos")));
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      }
      trEventFire(85);
      ambientColor(80,80,100);
      sunColor(60,60,60);
      /* BACKDOOR */
      if(true) {
      trEventFire(86);
      /**/ } else {
      trEventFire(87);
      }
      /**/ projectileConvert(3, "Catapult Shot", "Einheriar Boost SFX");
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 3.0 + 1.0 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 3.0 + 1.0 * trGetWorldDifficulty());
      trQuestVarSet("clearName", trGetNextUnitScenarioNameNumber());
      xsDisableRule("_Stage_B_01_Start");
      trEcho("Trigger disabling rule Stage_B_01_Start");
   }
}

rule _asteroids_move
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVmoo_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVmoo_CompTime", trTimeMS());
   for(Accurate_Timer_QVmoo_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVmoo_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVmoo_CompTime")) >= 100) {
   for(Accurate_Timer_QVmoo_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVmoo_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVmoo_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      for(bb=16; >0) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidspointer")+1);
      if (trQuestVarGet("asteroidspointer") > trQuestVarGet("asteroidsend")) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidsstart"));
      }
      trQuestVarSet("asteroids", trQuestVarGet("asteroidspointer"));
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("asteroids"));
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("asteroids")));
      /**/ trUnitMoveToPoint(trVectorQuestVarGetX("V1"), 0, 0, -1, 0);
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      }
      trQuestVarSet("asteroidfield", 1);
      xsDisableRule("_asteroids_move");
      trEcho("Trigger disabling rule asteroids_move");
   }
}

rule _Stage_B_music1
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 62);

   bool bVar1 = (trQuestVarGet("boss") == 2);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boss") == 0){
      trMusicPlay("music\fight\li'l drips.mp3", "78", 0.5);
      trEventFire(88);
      }
      xsDisableRule("_Stage_B_music1");
      trEcho("Trigger disabling rule Stage_B_music1");
   }
}

rule _Stage_B_music2
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 62);

   bool bVar1 = (trQuestVarGet("boss") == 2);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boss") == 0){
      trMusicPlay("music\fight\li'l drips.mp3", "78", 0.5);
      trEventFire(84);
      }
      xsDisableRule("_Stage_B_music2");
      trEcho("Trigger disabling rule Stage_B_music2");
   }
}

rule _enemy_row_s_01
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("enemyrow3") >= 1);

   bool bVar1 = (trQuestVarGet("enemyrow2") >= 1);

   bool bVar2 = (trQuestVarGet("enemyrow1") >= 1);


   bool tempExp = (bVar0 || bVar1 || bVar2);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemyrow"+x+"") >= 1){
      trQuestVarSet("enemyrow"+x+"name", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Ajax Older", 1, 4.81, 0.00, 4.82, 180, true);
      trQuestVarSet("cow", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Dwarf", 1, 3.240000, 6.280000, 21.330000, 0, true);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("cow"), true);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesbasiccount");
      trQuestVarSet("zdataliteenemiesbasicindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesbasiccount", zdatacount+1);
      trUnitChangeProtoUnit("Relic");
      /**/ trImmediateUnitGarrison(""+1*trQuestVarGet("enemyRow"+x+"name"));
      unitTransform("Relic","Fishing Ship Egyptian");
      unitTransform("Ajax Older","Sling Stone");
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemyrow"+x+"name"), true);
      trUnitTeleport(trVectorQuestVarGetX("enemyrow"+x+"start"),trVectorQuestVarGetY("enemyrow"+x+"start"),trVectorQuestVarGetZ("enemyrow"+x+"start"));
      trQuestVarSet("enemyrow"+x+"starty", 0.2);
      /**/ }}
      trEventFire(89);
      xsDisableRule("_enemy_row_s_01");
      trEcho("Trigger disabling rule enemy_row_s_01");
   }
}

rule _enemy_row_s_02
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemyrowspawn02timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemyrowspawn02timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemyrowspawn02timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemyrowspawn02timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemyrowspawn02timer_CompTime")) >= 250) {
   for(Accurate_Timer_QVenemyrowspawn02timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemyrowspawn02timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemyrowspawn02timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemyrow"+x+"") >= 1){
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemyrow"+x+"name"), true);
      trUnitMoveToPoint(trVectorQuestVarGetX("enemyrow"+x+"end"),trVectorQuestVarGetY("enemyrow"+x+"end"),trVectorQuestVarGetZ("enemyrow"+x+"end"), -1, false);
      trQuestVarSet("enemyrow"+x+"", trQuestVarGet("enemyrow"+x+"") - 1);
      trVectorQuestVarSet("enemyrow"+x+"start", trVectorQuestVarGet("enemyrow"+x+"start") + trVectorQuestVarGet("enemyrow"+x+"shift"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("enemyrow"+x+"start");b = trVectorQuestVarGetY("enemyrow"+x+"start");c = trVectorQuestVarGetZ("enemyrow"+x+"start");
      trVectorQuestVarSet("enemyrow"+x+"start",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("enemyrow"+x+"end", trVectorQuestVarGet("enemyrow"+x+"end") + trVectorQuestVarGet("enemyrow"+x+"shift"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("enemyrow"+x+"end");b = trVectorQuestVarGetY("enemyrow"+x+"end");c = trVectorQuestVarGetZ("enemyrow"+x+"end");
      trVectorQuestVarSet("enemyrow"+x+"end",xsVectorSet(a,b,c));}
      /**/ }}
      trEventFire(90);
      xsDisableRule("_enemy_row_s_02");
      trEcho("Trigger disabling rule enemy_row_s_02");
   }
}

rule _enemy_spray_s_01
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("enemyspray1") >= 1);

   bool bVar1 = (trQuestVarGet("enemyspray2") >= 1);

   bool bVar2 = (trQuestVarGet("enemyspray3") >= 1);


   bool tempExp = (bVar0 || bVar1 || bVar2);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemyspray"+x+"") >= 1){
      trQuestVarSet("enemyspray"+x+"name", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Ajax Older", 1, 4.81, 0.00, 4.82, 180, true);
      trQuestVarSet("cow", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Dwarf", 1, 3.240000, 6.280000, 21.330000, 0, true);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("cow"), true);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesSpraycount");
      trQuestVarSet("zdataliteenemiesSprayindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesSpraycount", zdatacount+1);
      trUnitChangeProtoUnit("Relic");
      /**/ trImmediateUnitGarrison(""+1*trQuestVarGet("enemySpray"+x+"name"));
      unitTransform("Relic","Ramming Ship Egyptian");
      unitTransform("Ajax Older","Sling Stone");
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemyspray"+x+"name"), true);
      trQuestVarSet("enemyspray"+x+"starty", 0.3);
      trUnitTeleport(trVectorQuestVarGetX("enemyspray"+x+"start"),trVectorQuestVarGetY("enemyspray"+x+"start"),trVectorQuestVarGetZ("enemyspray"+x+"start"));
      /**/ }}
      trEventFire(91);
      xsDisableRule("_enemy_spray_s_01");
      trEcho("Trigger disabling rule enemy_spray_s_01");
   }
}

rule _enemy_spray_s_02
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemysprayspawn02timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemysprayspawn02timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemysprayspawn02timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemysprayspawn02timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemysprayspawn02timer_CompTime")) >= 500) {
   for(Accurate_Timer_QVenemysprayspawn02timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemysprayspawn02timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemysprayspawn02timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemyspray"+x+"") >= 1){
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemyspray"+x+"name"), true);
      trUnitMoveToPoint(trVectorQuestVarGetX("enemyspray"+x+"end"),trVectorQuestVarGetY("enemyspray"+x+"end"),trVectorQuestVarGetZ("enemyspray"+x+"end"), -1, false);
      trQuestVarSet("enemyspray"+x+"", trQuestVarGet("enemyspray"+x+"") - 1);
      /**/ }}
      trEventFire(92);
      xsDisableRule("_enemy_spray_s_02");
      trEcho("Trigger disabling rule enemy_spray_s_02");
   }
}

rule _Stage_B_02
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyKebenit1start", xsVectorSet(trQuestVarGet("middleSpawn") + 5.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyKebenit1end", xsVectorSet(trQuestVarGet("middleSpawn") + 5.0,0.0,trQuestVarGet("upperSpawn") - 20.0));
      trQuestVarSet("enemyKebenit1", 1);
      trVectorQuestVarSet("enemyKebenit2start", xsVectorSet(trQuestVarGet("middleSpawn") - 5.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyKebenit2end", xsVectorSet(trQuestVarGet("middleSpawn") - 5.0,0.0,trQuestVarGet("upperSpawn") - 20.0));
      trQuestVarSet("enemyKebenit2", 1);
      trEventFire(93);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemyKebenit3start", xsVectorSet(trQuestVarGet("middleSpawn"),0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyKebenit3end", xsVectorSet(trQuestVarGet("middleSpawn"),0.0,trQuestVarGet("upperSpawn") - 20.0));
      trQuestVarSet("enemyKebenit3", 1);
      }
      xsDisableRule("_Stage_B_02");
      trEcho("Trigger disabling rule Stage_B_02");
   }
}

rule _enemy_spray_s1
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesSprayCount") >= 1);

   if(trQuestVarGet("Accurate_Timer_QVenemysprayshoottimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemysprayshoottimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemysprayshoottimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemysprayshoottimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemysprayshoottimer_CompTime")) >= trQuestVarGet("delay")) {
   for(Accurate_Timer_QVenemysprayshoottimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemysprayshoottimer_DidFirstPass", 0);}
   bool bVar2 = (Accurate_Timer_QVenemysprayshoottimer_IsTrue == 1);

   bool bVar3 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1 && bVar2 && bVar3);
   if (tempExp)
   {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteenemiesSpraycount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteenemiesSpraycount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteenemiesSpraypointer", trQuestVarGet("zdataliteenemiesSpraypointer")-1);
      if (0 > trQuestVarGet("zdataliteenemiesSpraypointer")) {
      trQuestVarSet("zdataliteenemiesSpraypointer", trQuestVarGet("zdataliteenemiesSpraycount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteenemiesSpraypointer");
      trQuestVarSet("enemiesSpray", trQuestVarGet("zdataliteenemiesSprayindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("enemiesSpray"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemiesSpray"), true);
      if(trUnitDead()==true){
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesSpraycount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiesSpraypointer");
      trQuestVarSet("zdataliteenemiesSprayindex"+zdataremove, trQuestVarGet("zdataliteenemiesSprayindex"+zdatacount));
      trQuestVarSet("zdataliteenemiesSpraycount", zdatacount);
      if (trQuestVarGet("zdataliteenemiesSpraypointer") >= trQuestVarGet("zdataliteenemiesSpraycount")) {
      trQuestVarSet("zdataliteenemiesSpraypointer", trQuestVarGet("zdataliteenemiesSpraycount")-1);
      }
      trQuestVarCopy("enemiesSpray"+zdatapointer+"angle", "enemiesSpray"+zdatacount+"angle");
      /**/ continue; }
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("enemiesSpray"), true));
      if ((trVectorQuestVarGetX("maxBound") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxBound") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minBound") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minBound")) == true) {
      for(bb=1; >0) {
      trQuestVarSet("p1projxp3proj", trQuestVarGet("p1projxp3proj") + 1);
      if (trQuestVarGet("p1projxp3proj") > 1) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trQuestVarSet("p3proj", trQuestVarGet("p1projpointer"));
      trQuestVarSet("p1projxp3proj", 0);
      } else {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p3proj"));
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("V1") + 0,trVectorQuestVarGetY("V1") + 1.5,trVectorQuestVarGetZ("V1") + 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("V1");b = trVectorQuestVarGetY("V1");c = trVectorQuestVarGetZ("V1");
      trVectorQuestVarSet("V1",xsVectorSet(a,b,c));}
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep3projshootSpraycount");
      trQuestVarSet("zdatalitep3projshootSprayindex"+zdatacount, trQuestVarGet("p3proj"));
      trQuestVarSet("zdatalitep3projshootSpraycount", zdatacount+1);
      trQuestVarCopy("p3projShoot"+zdatacount+"angle", "enemiesSpray"+zdatapointer+"Angle");
      trQuestVarSet("enemiesSpray"+zdatapointer+"angle", trQuestVarGet("enemiesSpray"+zdatapointer+"angle") + 2.43);
      while (trQuestVarGet("enemiesSpray"+zdatapointer+"angle") > (6.283185)) {
      trQuestVarSet("enemiesSpray"+zdatapointer+"angle", trQuestVarGet("enemiesSpray"+zdatapointer+"angle") - (6.283185));
      }
      while (0 > trQuestVarGet("enemiesSpray"+zdatapointer+"angle")) {
      trQuestVarSet("enemiesSpray"+zdatapointer+"angle", trQuestVarGet("enemiesSpray"+zdatapointer+"angle") + 6.283185);
      }
      }
      }
      }
      trEventFire(94);
      xsDisableRule("_enemy_spray_s1");
      trEcho("Trigger disabling rule enemy_spray_s1");
   }
}

rule _enemy_spray_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemysprays2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemysprays2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemysprays2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemysprays2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemysprays2timer_CompTime")) >= 1) {
   for(Accurate_Timer_QVenemysprays2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemysprays2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemysprays2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("zdatalitep3projshootSpraycount") >= 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep3projshootspraycount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep3projshootspraycount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep3projshootspraypointer", trQuestVarGet("zdatalitep3projshootspraypointer")-1);
      if (0 > trQuestVarGet("zdatalitep3projshootspraypointer")) {
      trQuestVarSet("zdatalitep3projshootspraypointer", trQuestVarGet("zdatalitep3projshootspraycount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep3projshootspraypointer");
      trQuestVarSet("p3projshootspray", trQuestVarGet("zdatalitep3projshootsprayindex"+zdatapointer));
      UnitID = trQuestVarGet("p3projshootspray");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("p3projshootSpray")));
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("p3projShoot"+zdatapointer+"angle")) * 1.0, 0, Math_cos(trQuestVarGet("p3projShoot"+zdatapointer+"angle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojactivecount");
      trQuestVarSet("zdataliteprojactiveindex"+zdatacount, trQuestVarGet("p3projshootSpray"));
      trQuestVarSet("zdataliteprojactivecount", zdatacount+1);
      }
      trQuestVarSet("zdatalitep3projshootSpraycount", 0);
      trQuestVarSet("zdatalitep3projshootSpraypointer", 0);
      trQuestVarSet("p3projshootSpray", 0);
      }
      trEventFire(95);
      xsDisableRule("_enemy_spray_s2");
      trEcho("Trigger disabling rule enemy_spray_s2");
   }
}

rule _Stage_B_03
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn"),0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn"),0.0,trQuestVarGet("minExitZ")));
      trQuestVarSet("enemySpray1", 1);
      trEventFire(96);
      xsDisableRule("_Stage_B_03");
      trEcho("Trigger disabling rule Stage_B_03");
   }
}

rule _Stage_B_04
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn") + 4,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn") + 4,0.0,trQuestVarGet("minExitZ")));
      trQuestVarSet("enemySpray1", 1);
      trEventFire(97);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn") - 4,0.0,trQuestVarGet("upperSpawn") + 12.0));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") - 4,0.0,trQuestVarGet("minExitZ")));
      trQuestVarSet("enemySpray2", 1);
      xsDisableRule("_Stage_B_04");
      trEcho("Trigger disabling rule Stage_B_04");
   }
}

rule _Stage_B_05
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") + 19,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") + 19,0.0,trQuestVarGet("minExitZ")));
      trQuestVarSet("enemyRow1", 18);
      trEventFire(98);
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(-2.0,0.0,0.0));
      xsDisableRule("_Stage_B_05");
      trEcho("Trigger disabling rule Stage_B_05");
   }
}

rule _Stage_B_06_reflect
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemyRow1") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 19);
      trEventFire(99);
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(2.0,0.0,0.0));
      xsDisableRule("_Stage_B_06_reflect");
      trEcho("Trigger disabling rule Stage_B_06_reflect");
   }
}

rule _Stage_B_07
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemyRow1") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(100);
      trVectorQuestVarSet("enemyKebenit1start", xsVectorSet(trQuestVarGet("middleSpawn") + 8,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyKebenit1end", xsVectorSet(trQuestVarGet("middleSpawn") + 8,0,trQuestVarGet("upperSpawn") - 20.0));
      trQuestVarSet("enemykebenit1", 1);
      trVectorQuestVarSet("enemyKebenit2start", xsVectorSet(trQuestVarGet("middleSpawn") - 8,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyKebenit2end", xsVectorSet(trQuestVarGet("middleSpawn") - 8,0,trQuestVarGet("upperSpawn") - 20.0));
      trQuestVarSet("enemykebenit2", 1);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemyKebenit3start", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyKebenit3end", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("upperSpawn") - 20.0));
      trQuestVarSet("enemykebenit3", 1);
      }
      xsDisableRule("_Stage_B_07");
      trEcho("Trigger disabling rule Stage_B_07");
   }
}

rule _Stage_B_08
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trEventFire(101);
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("rightSpawn"),0.0,trVectorQuestVarGetZ("maxBound") - 10));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("leftSpawn"),0.0,trVectorQuestVarGetZ("maxBound") - 10));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("rightSpawn"),0.0,trVectorQuestVarGetZ("maxBound") - 6));
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("leftSpawn"),0.0,trVectorQuestVarGetZ("maxBound") - 6));
      trQuestVarSet("enemySpray2", 1);
      xsDisableRule("_Stage_B_08");
      trEcho("Trigger disabling rule Stage_B_08");
   }
}

rule _Stage_B_09
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(102);
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("rightSpawn"),0.0,trVectorQuestVarGetZ("maxBound") - 6));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("leftSpawn"),0.0,trVectorQuestVarGetZ("maxBound") - 6));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("rightSpawn"),0.0,trVectorQuestVarGetZ("maxBound") - 10));
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("leftSpawn"),0.0,trVectorQuestVarGetZ("maxBound") - 10));
      trQuestVarSet("enemySpray2", 1);
      xsDisableRule("_Stage_B_09");
      trEcho("Trigger disabling rule Stage_B_09");
   }
}

rule _Stage_B_10_row
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") - 19,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") - 19,0.0,trQuestVarGet("minExitZ")));
      trQuestVarSet("enemyRow1", 18);
      trEventFire(103);
      trVectorQuestVarSet("enemyKebenit1start", xsVectorSet(trQuestVarGet("middleSpawn") + 8,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyKebenit1end", xsVectorSet(trQuestVarGet("middleSpawn") + 8,0,trQuestVarGet("upperSpawn") - 20));
      trQuestVarSet("enemyKebenit1", 1);
      xsDisableRule("_Stage_B_10_row");
      trEcho("Trigger disabling rule Stage_B_10_row");
   }
}

rule _Stage_B_11_reflec
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemyRow1") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 19);
      trEventFire(104);
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(-2.0,0.0,0.0));
      trVectorQuestVarSet("enemyKebenit1start", xsVectorSet(trQuestVarGet("middleSpawn") - 8,0,trQuestVarGet("upperspawn")));
      trVectorQuestVarSet("enemyKebenit1end", xsVectorSet(trQuestVarGet("middleSpawn") - 8,0,trQuestVarGet("upperspawn") - 20));
      trQuestVarSet("enemyKebenit1", 1);
      xsDisableRule("_Stage_B_11_reflec");
      trEcho("Trigger disabling rule Stage_B_11_reflec");
   }
}

rule _Stage_B_12
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trEventFire(105);
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn"),0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray2", 1);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("middleSpawn") + 15,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray3", 1);
      }
      xsDisableRule("_Stage_B_12");
      trEcho("Trigger disabling rule Stage_B_12");
   }
}

rule _Stage_B_13
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(106);
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn"),0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray2", 1);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("middleSpawn") - 15,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray3", 1);
      }
      xsDisableRule("_Stage_B_13");
      trEcho("Trigger disabling rule Stage_B_13");
   }
}

rule _Stage_B_14
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(107);
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn"),0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray2", 1);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("middleSpawn") + 15,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray3", 1);
      }
      xsDisableRule("_Stage_B_14");
      trEcho("Trigger disabling rule Stage_B_14");
   }
}

rule _Stage_B_15
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyLine1start", xsVectorSet(trQuestVarGet("rightSpawn"),0,trVectorQuestVarGetZ("maxBound") - 10));
      trVectorQuestVarSet("enemyLine1end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trVectorQuestVarGetZ("maxBound") - 10));
      trQuestVarSet("enemyLine1", 12);
      trEventFire(108);
      trVectorQuestVarSet("enemyLine2start", xsVectorSet(trQuestVarGet("leftSpawn"),0,trVectorQuestVarGetZ("maxBound") - 15));
      trVectorQuestVarSet("enemyLine2end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trVectorQuestVarGetZ("maxBound") - 15));
      trQuestVarSet("enemyLine2", 12);
      xsDisableRule("_Stage_B_15");
      trEcho("Trigger disabling rule Stage_B_15");
   }
}

rule _Stage_B_16_diamond_is_unbreakable
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyKebenit1start", xsVectorSet(trQuestVarGet("rightspawn"),0,trVectorQuestVarGetZ("playCenter") + 5));
      trVectorQuestVarSet("enemyKebenit1end", xsVectorSet(trQuestVarGet("leftspawn"),0,trVectorQuestVarGetZ("playCenter") + 5));
      trQuestVarSet("enemyKebenit1", 1);
      trVectorQuestVarSet("enemyKebenit2start", xsVectorSet(trQuestVarGet("rightspawn") + 5,0,trVectorQuestVarGetZ("playCenter") + 10));
      trVectorQuestVarSet("enemyKebenit2end", xsVectorSet(trQuestVarGet("leftspawn"),0,trVectorQuestVarGetZ("playCenter") + 10));
      trQuestVarSet("enemyKebenit2", 1);
      trVectorQuestVarSet("enemyKebenit3start", xsVectorSet(trQuestVarGet("rightspawn") + 5,0,trVectorQuestVarGetZ("playCenter")));
      trVectorQuestVarSet("enemyKebenit3end", xsVectorSet(trQuestVarGet("leftspawn"),0,trVectorQuestVarGetZ("playCenter")));
      trQuestVarSet("enemyKebenit3", 1);
      trEventFire(109);
      xsDisableRule("_Stage_B_16_diamond_is_unbreakable");
      trEcho("Trigger disabling rule Stage_B_16_diamond_is_unbreakable");
   }
}

rule _Stage_B_17_diamond_is_unbreakable
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyKebenit1start", xsVectorSet(trQuestVarGet("leftspawn"),0,trVectorQuestVarGetZ("playCenter") + 5));
      trVectorQuestVarSet("enemyKebenit1end", xsVectorSet(trQuestVarGet("rightspawn"),0,trVectorQuestVarGetZ("playCenter") + 5));
      trQuestVarSet("enemyKebenit1", 1);
      trVectorQuestVarSet("enemyKebenit2start", xsVectorSet(trQuestVarGet("leftspawn") - 5,0,trVectorQuestVarGetZ("playCenter") + 10));
      trVectorQuestVarSet("enemyKebenit2end", xsVectorSet(trQuestVarGet("rightspawn"),0,trVectorQuestVarGetZ("playCenter") + 10));
      trQuestVarSet("enemyKebenit2", 1);
      trVectorQuestVarSet("enemyKebenit3start", xsVectorSet(trQuestVarGet("leftspawn") - 5,0,trVectorQuestVarGetZ("playCenter")));
      trVectorQuestVarSet("enemyKebenit3end", xsVectorSet(trQuestVarGet("rightspawn"),0,trVectorQuestVarGetZ("playCenter")));
      trQuestVarSet("enemyKebenit3", 1);
      trEventFire(110);
      xsDisableRule("_Stage_B_17_diamond_is_unbreakable");
      trEcho("Trigger disabling rule Stage_B_17_diamond_is_unbreakable");
   }
}

rule _Stage_B_18_row
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") + 19,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") + 19,0.0,trQuestVarGet("minExitZ")));
      trQuestVarSet("enemyRow1", 18);
      trEventFire(111);
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("rightSpawn"),0,trVectorQuestVarGetZ("maxPos") - 10));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trVectorQuestVarGetZ("maxPos") - 10));
      trQuestVarSet("enemySpray1", 1);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("leftSpawn") - 10,0,trVectorQuestVarGetZ("maxPos") - 10));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trVectorQuestVarGetZ("maxPos") - 10));
      trQuestVarSet("enemySpray2", 1);
      }
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(-2.0,0.0,0.0));
      xsDisableRule("_Stage_B_18_row");
      trEcho("Trigger disabling rule Stage_B_18_row");
   }
}

rule _Stage_B_19_reflec
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemyRow1") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 19);
      trEventFire(112);
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(2.0,0.0,0.0));
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("leftSpawn"),0,trVectorQuestVarGetZ("maxpos") - 10));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trVectorQuestVarGetZ("maxpos") - 10));
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("rightSpawn") + 10,0,trVectorQuestVarGetZ("maxpos") - 10));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trVectorQuestVarGetZ("maxpos") - 10));
      trQuestVarSet("enemySpray2", 1);
      }
      xsDisableRule("_Stage_B_19_reflec");
      trEcho("Trigger disabling rule Stage_B_19_reflec");
   }
}

rule _Stage_B_20_reflect
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemyRow1") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 18);
      trEventFire(113);
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("rightSpawn"),0,trVectorQuestVarGetZ("maxPos") - 10));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trVectorQuestVarGetZ("maxPos") - 10));
      trQuestVarSet("enemySpray1", 1);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("leftSpawn") - 10,0,trVectorQuestVarGetZ("maxPos") - 10));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trVectorQuestVarGetZ("maxPos") - 10));
      trQuestVarSet("enemySpray2", 1);
      }
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(-2.0,0.0,0.0));
      xsDisableRule("_Stage_B_20_reflect");
      trEcho("Trigger disabling rule Stage_B_20_reflect");
   }
}

rule _Stage_B_21_diamond
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyKebenit1start", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyKebenit1end", xsVectorSet(trQuestVarGet("middleSpawn"),0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemyKebenit1", 1);
      trVectorQuestVarSet("enemyKebenit2start", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0,trQuestVarGet("upperSpawn") + 5));
      trVectorQuestVarSet("enemyKebenit2end", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemyKebenit2", 1);
      trVectorQuestVarSet("enemyKebenit3start", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0,trQuestVarGet("upperSpawn") + 5));
      trVectorQuestVarSet("enemyKebenit3end", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemyKebenit3", 1);
      trEventFire(114);
      xsDisableRule("_Stage_B_21_diamond");
      trEcho("Trigger disabling rule Stage_B_21_diamond");
   }
}

rule _Stage_B_22_diamond
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVstageb22diamondtimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVstageb22diamondtimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVstageb22diamondtimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVstageb22diamondtimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVstageb22diamondtimer_CompTime")) >= 1600) {
   for(Accurate_Timer_QVstageb22diamondtimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVstageb22diamondtimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVstageb22diamondtimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyKebenit1start", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("upperSpawn") + 5));
      trVectorQuestVarSet("enemyKebenit1end", xsVectorSet(trQuestVarGet("middleSpawn"),0,trVectorQuestVarGetZ("minExit")));
      trVectorQuestVarSet("enemyKebenit2start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0,trQuestVarGet("upperSpawn") + 5));
      trVectorQuestVarSet("enemyKebenit2end", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0,trVectorQuestVarGetZ("minExit")));
      trVectorQuestVarSet("enemyKebenit3start", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0,trQuestVarGet("upperSpawn") + 5));
      trVectorQuestVarSet("enemyKebenit3end", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemyKebenit1", 1);
      trQuestVarSet("enemyKebenit2", 1);
      trQuestVarSet("enemyKebenit3", 1);
      if(trGetWorldDifficulty() >= 2){
      trEventFire(115);
      } else {
      trEventFire(87);
      }
      xsDisableRule("_Stage_B_22_diamond");
      trEcho("Trigger disabling rule Stage_B_22_diamond");
   }
}

rule _Stage_B_23_row
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") - 19,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") - 19,0.0,trQuestVarGet("minExitZ")));
      trQuestVarSet("enemyRow1", 18);
      trEventFire(116);
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray1", 1);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray2", 1);
      }
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(2.0,0.0,0.0));
      xsDisableRule("_Stage_B_23_row");
      trEcho("Trigger disabling rule Stage_B_23_row");
   }
}

rule _Stage_B_24_reflect
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemyRow1") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 18);
      trEventFire(117);
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn") -10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray1", 1);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray2", 1);
      }
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(-2.0,0.0,0.0));
      xsDisableRule("_Stage_B_24_reflect");
      trEcho("Trigger disabling rule Stage_B_24_reflect");
   }
}

rule _Stage_B_25_reflect
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemyRow1") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 18);
      trEventFire(87);
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray1", 1);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray2", 1);
      }
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(2.0,0.0,0.0));
      xsDisableRule("_Stage_B_25_reflect");
      trEcho("Trigger disabling rule Stage_B_25_reflect");
   }
}

rule _Stage_B_26
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trEventFire(118);
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn"),0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray2", 1);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("middleSpawn") + 15,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray3", 1);
      }
      xsDisableRule("_Stage_B_26");
      trEcho("Trigger disabling rule Stage_B_26");
   }
}

rule _Stage_B_27
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(119);
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn"),0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray2", 1);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("middleSpawn") - 15,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray3", 1);
      }
      xsDisableRule("_Stage_B_27");
      trEcho("Trigger disabling rule Stage_B_27");
   }
}

rule _Stage_B_28
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(120);
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn"),0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray2", 1);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("middleSpawn") + 15,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray3", 1);
      }
      xsDisableRule("_Stage_B_28");
      trEcho("Trigger disabling rule Stage_B_28");
   }
}

rule _Stage_B_29
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(87);
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn"),0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray2", 1);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("middleSpawn") - 15,0.0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray3", 1);
      }
      xsDisableRule("_Stage_B_29");
      trEcho("Trigger disabling rule Stage_B_29");
   }
}

rule _Stage_B_30_end
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trEventFire(121);
      xsDisableRule("_Stage_B_30_end");
      trEcho("Trigger disabling rule Stage_B_30_end");
   }
}

rule _Stage_B_31_boss_appear
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("vortexstart.wav", "3", -1, "","");
      trEventFire(17);
      trQuestVarSet("play", 0);
      if(false) { trVectorQuestVarSet("bossmove", xsVectorSet(49.99, 0.00, 54.64));
      for(a=0; >1){}for(b=0; >1){}for(c=0; >1){} a = xsVectorGetX(trVectorQuestVarGet("bossmove"));b = xsVectorGetY(trVectorQuestVarGet("bossmove"));c = xsVectorGetZ(trVectorQuestVarGet("bossmove"));
      trVectorQuestVarSet("bossmove",xsVectorSet(a,b,c));}
      else {trVectorQuestVarSet("bossmove", xsVectorSet(49.99, 0.00, 54.64));}
      trEventFire(122);
      trModifyProtounit("Petrobolos Shot", 2, 1, -1.999);
      trQuestVarSet("movement", 1);
      xsDisableRule("_Stage_B_music1");
      xsDisableRule("_Stage_B_music2");
      trFadeOutMusic(3.0);
      trEventFire(123);
      for(bb=16; >0) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidspointer")+1);
      if (trQuestVarGet("asteroidspointer") > trQuestVarGet("asteroidsend")) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidsstart"));
      }
      trQuestVarSet("asteroids", trQuestVarGet("asteroidspointer"));
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("asteroids"));
      trVectorQuestVarSet("asteroid"+1*trQuestVarGet("asteroids")+"pos", kbGetBlockPosition(""+1*trQuestVarGet("asteroids")));
      /**/ trMutateSelected(kbGetProtoUnitID("Manticore Barb"));
      /**/ trMutateSelected(kbGetProtoUnitID("Catapult Shot"));
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      }
      trEventFire(124);
      trQuestVarSet("asteroidfield", 0);
      xsDisableRule("_Stage_B_31_boss_appear");
      trEcho("Trigger disabling rule Stage_B_31_boss_appear");
   }
}

rule _Stage_B_boss_m1
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(6003);
   bool bVar0 = (trUnitDistanceToPoint(trVectorQuestVarGetX("bossmove"),trVectorQuestVarGetY("bossmove"),trVectorQuestVarGetZ("bossmove")) > 0);

   bool bVar1 = (trQuestVarGet("stage") == 3);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      /**/ if ((trQuestVarGet("stage") == 3) == false) {
      trEventFire(125);
      trVectorQuestVarSet("bosspos", trVectorQuestVarGet("bosspos") - trVectorQuestVarGet("bossmove"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("bosspos");b = trVectorQuestVarGetY("bosspos");c = trVectorQuestVarGetZ("bosspos");
      trVectorQuestVarSet("bosspos",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("bosspos", xsVectorSet(trVectorQuestVarGetX("bosspos") * 0.95,trVectorQuestVarGetY("bosspos") * 0,trVectorQuestVarGetZ("bosspos") * 0.95));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("bosspos");b = trVectorQuestVarGetY("bosspos");c = trVectorQuestVarGetZ("bosspos");
      trVectorQuestVarSet("bosspos",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("bosspos", trVectorQuestVarGet("bosspos") + trVectorQuestVarGet("bossmove"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("bosspos");b = trVectorQuestVarGetY("bosspos");c = trVectorQuestVarGetZ("bosspos");
      trVectorQuestVarSet("bosspos",xsVectorSet(a,b,c));}
      trUnitSelectClear();
      trUnitSelectByID(6003);
      trUnitTeleport(trVectorQuestVarGetX("bosspos"),trVectorQuestVarGetY("bosspos"),trVectorQuestVarGetZ("bosspos"));
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("bosspos") + 4,0,trVectorQuestVarGetZ("bosspos")));
      trUnitSelectClear();
      trUnitSelectByID(6004);
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("bosspos") - 4,0,trVectorQuestVarGetZ("bosspos")));
      trUnitSelectClear();
      trUnitSelectByID(6005);
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("bosspos") + 2,0,trVectorQuestVarGetZ("bosspos") + 2));
      trUnitSelectClear();
      trUnitSelectByID(6006);
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("bosspos") - 2,0,trVectorQuestVarGetZ("bosspos") + 2));
      trUnitSelectClear();
      trUnitSelectByID(6007);
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      }
      xsDisableRule("_Stage_B_boss_m1");
      trEcho("Trigger disabling rule Stage_B_boss_m1");
   }
}

rule _Stage_B_boss_m2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVstagebbossm2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVstagebbossm2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVstagebbossm2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVstagebbossm2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVstagebbossm2timer_CompTime")) >= 10) {
   for(Accurate_Timer_QVstagebbossm2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVstagebbossm2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVstagebbossm2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ if ((trQuestVarGet("stage") == 3) == false) {
      trEventFire(122);
      }
      xsDisableRule("_Stage_B_boss_m2");
      trEcho("Trigger disabling rule Stage_B_boss_m2");
   }
}

rule _Stage_B_32
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Yeebaagooon: So you've finally arrived.","Zenophobia\SFA\Yeebaagooon");
      trEventFire(126);
      /**/ projectileConvert(1, "Lampades Bolt", "Victory Marker");
      /**/ projectileConvert(3, "Lampades Bolt", "Victory Marker");
      /**/ projectileConvert(4, "Outpost", "Victory Marker", 0.6, 0);
      /**/ 
      /**/ 
      /**/ 
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      xsDisableRule("_Stage_B_32");
      trEcho("Trigger disabling rule Stage_B_32");
   }
}

rule _Stage_B_33
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Oliver: Ace! Is that him?","Zenophobia\SFA\Oliver");
      trEventFire(127);
      for(UnitID=0; >1) {}
      for(type=0; >1) {}
      for(ySearchTarget = 0; > 1){}
      ySearchTarget = trGetNextUnitScenarioNameNumber();
      while(ySearchTarget > trQuestVarGet("clearName")){
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("clearName"));
      if (kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("clearName"))) != -1){
      UnitID = kbGetBlockID(""+1*trQuestVarGet("clearName"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitDestroy();
      }
      trQuestVarSet("clearName", trQuestVarGet("clearName")+1);}
      xsDisableRule("_Stage_B_33");
      trEcho("Trigger disabling rule Stage_B_33");
   }
}

rule _Stage_B_34
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Ace: Yeah! Let's get him!","Zenophobia\SFA\Ace");
      trEventFire(128);
      xsDisableRule("_Stage_B_34");
      trEcho("Trigger disabling rule Stage_B_34");
   }
}

rule _Stage_B_35
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Yeebaagooon: Not so fast!","Zenophobia\SFA\Yeebaagooon");
      trEventFire(129);
      xsDisableRule("_Stage_B_35");
      trEcho("Trigger disabling rule Stage_B_35");
   }
}

rule _Stage_B_36
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Yeebaagooon: I've got your precious Molly here on board. If this ship explodes, she dies with it!","Zenophobia\SFA\Yeebaagooon");
      trEventFire(130);
      xsDisableRule("_Stage_B_36");
      trEcho("Trigger disabling rule Stage_B_36");
   }
}

rule _Stage_B_37_dammit_yeeb
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Ace: Dammit!","Zenophobia\SFA\Ace");
      trEventFire(131);
      xsDisableRule("_Stage_B_37_dammit_yeeb");
      trEcho("Trigger disabling rule Stage_B_37_dammit_yeeb");
   }
}

rule _Stage_B_38
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Oliver: Hey! That's playing dirty!","Zenophobia\SFA\Oliver");
      trEventFire(132);
      xsDisableRule("_Stage_B_38");
      trEcho("Trigger disabling rule Stage_B_38");
   }
}

rule _Stage_B_39
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Yeebaagooon: Muahaha... You can't fire on me. There's only one way this battle ends. Now sit still and die!","Zenophobia\SFA\Yeebaagooon");
      trEventFire(133);
      trQuestVarSet("ceasefire", 1);
      xsDisableRule("_Stage_B_39");
      trEcho("Trigger disabling rule Stage_B_39");
   }
}

rule _Stage_B_40_boss_start
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("play", 1);
      trMusicPlay("Zenophobia\The End of 1000 Years.mp3", "234", 0.0);
      trQuestVarSet("spells", 3);
      trEventFire(134);
      trQuestVarSet("boss", 2);
      trStringQuestVarSet("bossName", "Yeebaagooon ");
      trEventFire(135);
      /* BACKDOOR */
      if(true) {
      trEventFire(136);
      /**/ } else {
      trEventFire(137);
      }
      trEventFire(28);
      trQuestVarSet("zdataliteplayerprojactivecount", 0);
      trQuestVarSet("zdataliteplayerprojactivepointer", 0);
      trQuestVarSet("playerprojactive", 0);
      xsDisableRule("_Stage_B_40_boss_start");
      trEcho("Trigger disabling rule Stage_B_40_boss_start");
   }
}

rule _x_spells_startup
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ for(x=5938+trQuestVarGet("spells"); >5938) {
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(x);
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trUnitChangeProtoUnit("UI Range Indicator Norse SFX");
      /**/ }
      xsDisableRule("_x_spells_startup");
      trEcho("Trigger disabling rule x_spells_startup");
   }
}

rule _x_spells_decrement
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(5939+trQuestVarGet("spells"));
      /**/ trUnitChangeProtoUnit("Cinematic Block");
      /**/ 
      /**/ 
      /**/ 
      xsDisableRule("_x_spells_decrement");
      trEcho("Trigger disabling rule x_spells_decrement");
   }
}

rule _b6_lasers_unlock
highFrequency
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ int p = kbGetProtoUnitID("petsuchos");
      /**/ int b = kbGetProtoUnitID("Petosuchus Projectile");
      /**/ int i = kbGetProtoUnitID("Invisible Target");
      for(bb=128; >0) {
      trQuestVarSet("p6laserspointer", trQuestVarGet("p6laserspointer")+1);
      if (trQuestVarGet("p6laserspointer") > trQuestVarGet("p6lasersend")) {
      trQuestVarSet("p6laserspointer", trQuestVarGet("p6lasersstart"));
      }
      trQuestVarSet("p6lasers", trQuestVarGet("p6laserspointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p6lasers"));
      /**/ trMutateSelected(b);
      /**/ trSetSelectedScale(1.75, 1.0, 70.0);
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(1*trQuestVarGet("p6lasers")+128);
      /**/ trUnitSelectByID(1*trQuestVarGet("p6lasers")+256);
      /**/ trMutateSelected(p);
      /**/ trSetSelectedScale(0, 1.0, 0);
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(1*trQuestVarGet("p6lasers")+512);
      /**/ trUnitChangeProtoUnit("Dwarf");
      /**/ 
      /**/ trSetSelectedScale(0, 1.0, 0);
      /**/ 
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(1*trQuestVarGet("p6lasers")+384);
      /**/ 
      /**/ 
      /**/ trSetSelectedScale(0, 0, 0);
      }
      /**/ kbLookAtAllUnitsOnMap();
      unitTransform("Dwarf","Invisible Target");
      xsDisableRule("_b6_lasers_unlock");
      trEcho("Trigger disabling rule b6_lasers_unlock");
   }
}

rule _lightning_lasers
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdatalitelightninglaserscount") >= 1);

   if(trQuestVarGet("Accurate_Timer_QVlightninglasertimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVlightninglasertimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVlightninglasertimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVlightninglasertimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVlightninglasertimer_CompTime")) >= 100) {
   for(Accurate_Timer_QVlightninglasertimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVlightninglasertimer_DidFirstPass", 0);}
   bool bVar1 = (Accurate_Timer_QVlightninglasertimer_IsTrue == 1);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitelightninglaserscount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitelightninglaserscount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitelightninglaserspointer", trQuestVarGet("zdatalitelightninglaserspointer")-1);
      if (0 > trQuestVarGet("zdatalitelightninglaserspointer")) {
      trQuestVarSet("zdatalitelightninglaserspointer", trQuestVarGet("zdatalitelightninglaserscount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitelightninglaserspointer");
      trQuestVarSet("lightninglasers", trQuestVarGet("zdatalitelightninglasersindex"+zdatapointer));
      UnitID = trQuestVarGet("lightninglasers");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trQuestVarSet("lightninglaser"+zdatapointer+"progress", trQuestVarGet("lightninglaser"+zdatapointer+"progress") + 1);
      if(trQuestVarGet("lightninglaser"+zdatapointer+"progress") < 28){
      /**/ trUnitSelectClear(); trUnitSelectByID(512+trQuestVarGet("lightninglasers"));
      if(trUnitPercentDamaged() > 0){
      trDamageUnitPercent(-100);
      /**/ trUnitSelectClear(); trUnitSelectByID(1*trQuestVarGet("lightninglasers")); trUnitSetHeading(0);
      trUnitTeleport(97.12, 0.00, 97.01);
      if(trQuestVarGet("lightninglaser"+zdatapointer+"active") == 0){
      trQuestVarSet("lightninglaser"+zdatapointer+"active", 1);
      trQuestVarSet("soundplay", 1);
      }
      }
      if(trQuestVarGet("lightninglaser"+zdatapointer+"active") == 1){
      trUnitSelectClear();
      trUnitSelectByID(128+trQuestVarGet("lightninglasers"));
      trQuestVarSet("dist", trUnitDistanceToPoint(trVectorQuestVarGetX("playerpos"),trVectorQuestVarGetY("playerpos"),trVectorQuestVarGetZ("playerpos")));
      /**/ trQuestVarSet("dist", trQuestVarGet("dist") + 1.0);
      /**/ trVectorQuestVarSet("V2", kbGetBlockPosition(""+(128+1*trQuestVarGet("lightninglasers"))));
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trVectorQuestVarSet("V1", xsVectorSet(trQuestVarGet("lightninglaser"+zdatapointer+"dirx")*trQuestVarGet("dist")+trQuestVarGet("V2x"),0,trQuestVarGet("lightninglaser"+zdatapointer+"dirz")*trQuestVarGet("dist")+trQuestVarGet("V2z")));
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(384+trQuestVarGet("lightninglasers"));
      /**/ trMutateSelected(kbGetProtoUnitID("Invisible Target"));
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      }
      if(trQuestVarGet("lightninglaser"+zdatapointer+"progress") == 8){
      /**/ trUnitSelectClear(); trUnitSelectByID(256+trQuestVarGet("lightninglasers"));
      /**/ trUnitDoWorkOnUnit(""+(512+trQuestVarGet("lightninglasers")), -1);
      }
      /**/ } else {
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(384+trQuestVarGet("lightninglasers"));
      /**/ trMutateSelected(kbGetProtoUnitID("Victory Marker"));
      /**/ trUnitSelectByID(128+trQuestVarGet("lightninglasers"));
      /**/ trUnitSelectByID(256+trQuestVarGet("lightninglasers"));
      /**/ 
      trUnitTeleport(99.15, 0.00, 98.95);
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(512+trQuestVarGet("lightninglasers"));
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(99.36, 0.00, 99.04);
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdatalitelightninglaserscount") - 1;
      zdataremove = trQuestVarGet("zdatalitelightninglaserspointer");
      trQuestVarSet("zdatalitelightninglasersindex"+zdataremove, trQuestVarGet("zdatalitelightninglasersindex"+zdatacount));
      trQuestVarSet("zdatalitelightninglaserscount", zdatacount);
      if (trQuestVarGet("zdatalitelightninglaserspointer") >= trQuestVarGet("zdatalitelightninglaserscount")) {
      trQuestVarSet("zdatalitelightninglaserspointer", trQuestVarGet("zdatalitelightninglaserscount")-1);
      }
      trQuestVarCopy("lightninglaser"+zdatapointer+"progress", "lightninglaser"+zdatacount+"progress");
      trVectorQuestVarSet("lightninglaser"+zdatapointer+"dir", trVectorQuestVarGet("lightninglaser"+zdatacount+"dir"));
      trQuestVarCopy("lightninglaser"+zdatapointer+"active", "lightninglaser"+zdatacount+"active");
      }
      }
      if(trQuestVarGet("soundplay") == 1){
      trSoundPlayFN("sky passage.wav", "1", -1, "","");
      trQuestVarSet("soundplay", 0);
      }
      xsDisableRule("_lightning_lasers");
      trEcho("Trigger disabling rule lightning_lasers");
      trDelayedRuleActivation("_lightning_lasers");
   }
}

rule _lightning_laser_transform
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdatalitelightninglaserscount") >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      unitTransform("Petosuchus Beam","Osiris Lightning");
      xsDisableRule("_lightning_laser_transform");
      trEcho("Trigger disabling rule lightning_laser_transform");
      trDelayedRuleActivation("_lightning_laser_transform");
   }
}

rule _yeeb_a0_00_startup
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", 3);
      trQuestVarSet("bossAmmoMax", 3);
      trEventFire(138);
      trEventFire(139);
      trEventFire(140);
      trQuestVarSet("lasercount", 9 + 3 * trGetWorldDifficulty());
      trQuestVarSet("laserAngleMod", 2.1 / trQuestVarGet("laserCount"));
      trQuestVarSet("laserHeadingMod", 120.321162 / trQuestVarGet("laserCount"));
      xsDisableRule("_yeeb_a0_00_startup");
      trEcho("Trigger disabling rule yeeb_a0_00_startup");
   }
}

rule _yeeb_music1
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 105);

   bool bVar1 = (trQuestVarGet("boss") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boss") == 2){
      trMusicPlay("Zenophobia\The End Of 1000 Years.mp3", "234", 0.5);
      trEventFire(141);
      }
      xsDisableRule("_yeeb_music1");
      trEcho("Trigger disabling rule yeeb_music1");
   }
}

rule _yeeb_music2
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 105);

   bool bVar1 = (trQuestVarGet("boss") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boss") == 2){
      trMusicPlay("Zenophobia\The End Of 1000 Years.mp3", "234", 0.5);
      trEventFire(134);
      }
      xsDisableRule("_yeeb_music2");
      trEcho("Trigger disabling rule yeeb_music2");
   }
}

rule _yeeb_a0_01_fire
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVyeeba1firetimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVyeeba1firetimer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVyeeba1firetimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVyeeba1firetimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("laserangle1", 3.141592);
      trQuestVarSet("laserangle2", 3.141592);
      trQuestVarSet("laserheading1", 0);
      trQuestVarSet("laserheading2", 0);
      trVectorQuestVarSet("laserCenter", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossposz")));
      trQuestVarCopy("lasershoot", "lasercount");
      trEventFire(142);
      trEventFire(143);
      xsDisableRule("_yeeb_a0_01_fire");
      trEcho("Trigger disabling rule yeeb_a0_01_fire");
   }
}

rule _yeeb_a0_02_s1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ for(x=2; >0) {
      for(bb=1; >0) {
      trQuestVarSet("p6laserspointer", trQuestVarGet("p6laserspointer")+1);
      if (trQuestVarGet("p6laserspointer") > trQuestVarGet("p6lasersend")) {
      trQuestVarSet("p6laserspointer", trQuestVarGet("p6lasersstart"));
      }
      trQuestVarSet("p6lasers", trQuestVarGet("p6laserspointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p6lasers"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitelightninglaserscount");
      trQuestVarSet("zdatalitelightninglasersindex"+zdatacount, trQuestVarGet("p6lasers"));
      trQuestVarSet("zdatalitelightninglaserscount", zdatacount+1);
      trVectorQuestVarSet("lightninglaser"+zdatacount+"dir",xsVectorSet(Math_sin(trQuestVarGet("laserangle"+x)) * 1.0, 0, Math_cos(trQuestVarGet("laserangle"+x)) * 1.0));
      trQuestVarSet("lightninglaser"+zdatacount+"active", 0);
      trQuestVarSet("lightninglaser"+zdatacount+"progress", 0);
      /**/ trUnitSetHeading(trQuestVarGet("laserheading"+x));
      /**/ trUnitSelectByID(256+1*trQuestVarGet("p6lasers"));
      /**/ trUnitSelectByID(128+1*trQuestVarGet("p6lasers"));
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(trVectorQuestVarGetX("laserCenter"),trVectorQuestVarGetY("laserCenter"),trVectorQuestVarGetZ("laserCenter"));
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(512+1*trQuestVarGet("p6lasers"));
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("lightninglaser"+zdatacount+"dir") / trVectorQuestVarGetX("lightninglaser"+zdatacount+"dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("laserCenter") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("laserCenter"));
      if (0.0 > trVectorQuestVarGetX("lightninglaser"+zdatacount+"dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minLaser"), 0, trVectorQuestVarGetX("minLaser") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxLaser"), 0, trVectorQuestVarGetX("maxLaser") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("lightninglaser"+zdatacount+"dir") > -0.01 && trVectorQuestVarGetZ("lightninglaser"+zdatacount+"dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("lightninglaser"+zdatacount+"dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minLaser") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minLaser")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxLaser") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxLaser")));
      }
      if (trVectorQuestVarGetX("lightninglaser"+zdatacount+"dir") > -0.01 && trVectorQuestVarGetX("lightninglaser"+zdatacount+"dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("laserCenter"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("laserCenter"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minLaser") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxLaser")) {
      trVectorQuestVarSet("V1", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("V1", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(128+1*trQuestVarGet("p6lasers"));
      /**/ trUnitDoWorkOnUnit(""+(512+1*trQuestVarGet("p6lasers")), -1);
      /**/ 
      /**/ 
      /**/ 
      }
      /**/ }
      trSoundPlayFN("skypassagein.wav", "1", -1, "","");
      trQuestVarSet("laserangle1", trQuestVarGet("laserangle1") + trQuestVarGet("laseranglemod"));
      while (trQuestVarGet("laserangle1") > (6.283185)) {
      trQuestVarSet("laserangle1", trQuestVarGet("laserangle1") - (6.283185));
      }
      while (0 > trQuestVarGet("laserangle1")) {
      trQuestVarSet("laserangle1", trQuestVarGet("laserangle1") + 6.283185);
      }
      trQuestVarSet("laserangle2", trQuestVarGet("laserangle2") - trQuestVarGet("laseranglemod"));
      while (trQuestVarGet("laserangle2") > (6.283185)) {
      trQuestVarSet("laserangle2", trQuestVarGet("laserangle2") - (6.283185));
      }
      while (0 > trQuestVarGet("laserangle2")) {
      trQuestVarSet("laserangle2", trQuestVarGet("laserangle2") + 6.283185);
      }
      trQuestVarSet("laserheading1", trQuestVarGet("laserheading1") - trQuestVarGet("laserheadingmod"));
      while (trQuestVarGet("laserheading1") > (360.0)) {
      trQuestVarSet("laserheading1", trQuestVarGet("laserheading1") - (360.0));
      }
      while (0 > trQuestVarGet("laserheading1")) {
      trQuestVarSet("laserheading1", trQuestVarGet("laserheading1") + 360.0);
      }
      trQuestVarSet("laserheading2", trQuestVarGet("laserheading2") + trQuestVarGet("laserheadingmod"));
      while (trQuestVarGet("laserheading2") > (360.0)) {
      trQuestVarSet("laserheading2", trQuestVarGet("laserheading2") - (360.0));
      }
      while (0 > trQuestVarGet("laserheading2")) {
      trQuestVarSet("laserheading2", trQuestVarGet("laserheading2") + 360.0);
      }
      trEventFire(144);
      xsDisableRule("_yeeb_a0_02_s1");
      trEcho("Trigger disabling rule yeeb_a0_02_s1");
   }
}

rule _yeeb_a0_02_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVyeeba2s2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVyeeba2s2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVyeeba2s2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeeba2s2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVyeeba2s2timer_CompTime")) >= 80) {
   for(Accurate_Timer_QVyeeba2s2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeeba2s2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVyeeba2s2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("lasershoot", trQuestVarGet("lasershoot") - 1);
      if(trQuestVarGet("lasershoot") > 0){
      trEventFire(142);
      }
      xsDisableRule("_yeeb_a0_02_s2");
      trEcho("Trigger disabling rule yeeb_a0_02_s2");
   }
}

rule _yeeb_a0_03
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("lasershoot") == 0);

   bool bVar1 = (trQuestVarGet("zdatalitelightninglaserscount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(140);
      trEventFire(145);
      /**/ } else {
      /* BACKDOOR */
      if(true) {
      trEventFire(146);
      /**/ } else {
      trEventFire(147);
      }
      }
      trStringQuestVarSet("bossName", "Yeebaagooon ");
      xsDisableRule("_yeeb_a0_03");
      trEcho("Trigger disabling rule yeeb_a0_03");
   }
}

rule _yeeb_move
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSetFromRand("xpos", 6.0 + trVectorQuestVarGetX("minBound"), trVectorQuestVarGetX("maxBound") - 6.0, false);
      trQuestVarSetFromRand("zpos", trVectorQuestVarGetZ("maxBound") - 16.0, trVectorQuestVarGetZ("maxBound") - 7.0, false);
      /**/ trVectorQuestVarSet("bossMove", xsVectorSet(trQuestVarGet("xpos"), 0, trQuestVarGet("zpos")));
      xsDisableRule("_yeeb_move");
      trEcho("Trigger disabling rule yeeb_move");
   }
}

rule _yeeb_spell_01
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("yeebspell") == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("cinematics\15_in\gong.wav", "4", -1, "","");
      trSoundPlayFN("godpower.wav", "6", -1, "","");
      sunColor(60,60,90);
      ambientColor(80,80,80);
      trUnitSelectClear();
      trUnitSelectByID(6036);
      trUnitTeleport(trVectorQuestVarGetX("playCenter"),trVectorQuestVarGetY("playCenter"),trVectorQuestVarGetZ("playCenter"));
      trEventFire(148);
      trEventFire(149);
      for(bb=16; >0) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidspointer")+1);
      if (trQuestVarGet("asteroidspointer") > trQuestVarGet("asteroidsend")) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidsstart"));
      }
      trQuestVarSet("asteroids", trQuestVarGet("asteroidspointer"));
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("asteroids"));
      trUnitTeleport(2.57, 0.00, 2.80);
      }
      trEventFire(17);
      xsDisableRule("_yeeb_spell_01");
      trEcho("Trigger disabling rule yeeb_spell_01");
   }
}

rule _yeeb_spell_02_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVyeebspell02s1timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVyeebspell02s1timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVyeebspell02s1timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeebspell02s1timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVyeebspell02s1timer_CompTime")) >= 5) {
   for(Accurate_Timer_QVyeebspell02s1timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeebspell02s1timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVyeebspell02s1timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("yeebspell") == 1){
      trQuestVarSet("yeebspellheading1", trQuestVarGet("yeebspellheading1") + 0.2);
      trUnitSelectClear();
      trUnitSelectByID(6036);
      trUnitSetHeading(trQuestVarGet("yeebspellheading1"));
      trEventFire(150);
      }
      xsDisableRule("_yeeb_spell_02_s1");
      trEcho("Trigger disabling rule yeeb_spell_02_s1");
   }
}

rule _yeeb_spell_02_s2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("yeebspell") == 1){
      trEventFire(148);
      }
      xsDisableRule("_yeeb_spell_02_s2");
      trEcho("Trigger disabling rule yeeb_spell_02_s2");
   }
}

rule _yeeb_spell_03
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("yeebspell") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("spells", trQuestVarGet("spells") - 1);
      trEventFire(151);
      trUnitSelectClear();
      trUnitSelectByID(6036);
      trUnitTeleport(74.80, 0.00, 93.67);
      trSoundPlayFN("godpowerfailed.wav", "2", -1, "","");
      trEventFire(124);
      sunColor(60,60,60);
      ambientColor(80,80,100);
      for(bb=16; >0) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidspointer")+1);
      if (trQuestVarGet("asteroidspointer") > trQuestVarGet("asteroidsend")) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidsstart"));
      }
      trQuestVarSet("asteroids", trQuestVarGet("asteroidspointer"));
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("asteroids"));
      trUnitTeleport(trVectorQuestVarGetX("asteroid"+1*trQuestVarGet("asteroids")+"pos"),trVectorQuestVarGetY("asteroid"+1*trQuestVarGet("asteroids")+"pos"),trVectorQuestVarGetZ("asteroid"+1*trQuestVarGet("asteroids")+"pos"));
      }
      trEventFire(17);
      trStringQuestVarSet("bossName", "Yeebaagooon ");
      xsDisableRule("_yeeb_spell_03");
      trEcho("Trigger disabling rule yeeb_spell_03");
   }
}

rule _surgical_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("yeebspell", 1);
      trQuestVarSet("surgical", 1);
      trOverlayText("Surgical Precision", 3.0, 563, 360, 800);
      trEventFire(152);
      trVectorQuestVarSet("bossMove", trVectorQuestVarGet("playCenter"));
      trQuestVarSet("bossAmmo", 3);
      trQuestVarSet("bossAmmoMax", 3);
      trStringQuestVarSet("bossName", "Surgical Precision ");
      xsDisableRule("_surgical_00_startup");
      trEcho("Trigger disabling rule surgical_00_startup");
   }
}

rule _surgical_01_start
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVsurgical01starttimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVsurgical01starttimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVsurgical01starttimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVsurgical01starttimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVsurgical01starttimer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVsurgical01starttimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVsurgical01starttimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVsurgical01starttimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(153);
      trQuestVarSet("count", 12 + 4 * trGetWorldDifficulty());
      trQuestVarSet("surgicalAngleMod", 6.2 / trQuestVarGet("count"));
      trEventFire(154);
      trVectorQuestVarSet("surgicalCenter", xsVectorSet(trQuestVarGet("bossposx"),1.5,trQuestVarGet("bossposz")));
      xsDisableRule("_surgical_01_start");
      trEcho("Trigger disabling rule surgical_01_start");
   }
}

rule _surgical_02_s1
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("bomb") == 0);

   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= 50 + trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar1 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("surgical") == 1){
      for(bb=1; >0) {
      trQuestVarSet("p4projxp5proj", trQuestVarGet("p4projxp5proj") + 1);
      if (trQuestVarGet("p4projxp5proj") > 1) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trQuestVarSet("p6proj", trQuestVarGet("p4projpointer"));
      trQuestVarSet("p4projxp5proj", 0);
      } else {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projpointer")+1);
      if (trQuestVarGet("p5projpointer") > trQuestVarGet("p5projend")) {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projstart"));
      }
      trQuestVarSet("p5proj", trQuestVarGet("p5projpointer"));
      trQuestVarSet("p6proj", trQuestVarGet("p5projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p6proj"));
      trUnitTeleport(trVectorQuestVarGetX("surgicalCenter"),trVectorQuestVarGetY("surgicalCenter"),trVectorQuestVarGetZ("surgicalCenter"));
      trQuestVarCopy("p6projshoot", "p6proj");
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p6proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      trEventFire(155);
      }
      xsDisableRule("_surgical_02_s1");
      trEcho("Trigger disabling rule surgical_02_s1");
   }
}

rule _surgical_02_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("surgical") == 1){
      trQuestVarSet("surgicalAngle", trQuestVarGet("surgicalAngle") + trQuestVarGet("surgicalAngleMod"));
      while (trQuestVarGet("surgicalAngle") > (6.283185)) {
      trQuestVarSet("surgicalAngle", trQuestVarGet("surgicalAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("surgicalAngle")) {
      trQuestVarSet("surgicalAngle", trQuestVarGet("surgicalAngle") + 6.283185);
      }
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("surgicalAngle")) * 1.0, 0, Math_cos(trQuestVarGet("surgicalAngle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("surgicalCenter") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("surgicalCenter"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("surgicalCenter"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("surgicalCenter"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p6projshoot"));
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      trEventFire(153);
      }
      xsDisableRule("_surgical_02_s2");
      trEcho("Trigger disabling rule surgical_02_s2");
   }
}

rule _surgical_03_fire
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVsurgical03firetimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVsurgical03firetimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVsurgical03firetimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVsurgical03firetimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVsurgical03firetimer_CompTime")) >= 2000) {
   for(Accurate_Timer_QVsurgical03firetimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVsurgical03firetimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVsurgical03firetimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(156);
      trQuestVarSet("surgicalShoot", 3);
      trEventFire(157);
      xsDisableRule("_surgical_03_fire");
      trEcho("Trigger disabling rule surgical_03_fire");
   }
}

rule __lightning_laser_code
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      xsEnableRule("zenowasherelightninglaser");
      xsDisableSelf();}}
      /**/ void activateLightningLasers(int c = 0) {
      /**/ for(x=c; >0) {
      for(bb=1; >0) {
      trQuestVarSet("p6laserspointer", trQuestVarGet("p6laserspointer")+1);
      if (trQuestVarGet("p6laserspointer") > trQuestVarGet("p6lasersend")) {
      trQuestVarSet("p6laserspointer", trQuestVarGet("p6lasersstart"));
      }
      trQuestVarSet("p6lasers", trQuestVarGet("p6laserspointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p6lasers"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitelightninglaserscount");
      trQuestVarSet("zdatalitelightninglasersindex"+zdatacount, trQuestVarGet("p6lasers"));
      trQuestVarSet("zdatalitelightninglaserscount", zdatacount+1);
      trVectorQuestVarSet("lightninglaser"+zdatacount+"dir",xsVectorSet(Math_sin(trQuestVarGet("laserangle"+x)) * 1.0, 0, Math_cos(trQuestVarGet("laserangle"+x)) * 1.0));
      trQuestVarSet("lightninglaser"+zdatacount+"active", 0);
      trQuestVarSet("lightninglaser"+zdatacount+"progress", 0);
      trQuestVarSet("heading", 57.295779*trQuestVarGet("laserangle"+x));
      trQuestVarSet("heading", trQuestVarGet("heading") + 180.0);
      while (trQuestVarGet("heading") > (360.0)) {
      trQuestVarSet("heading", trQuestVarGet("heading") - (360.0));
      }
      while (0 > trQuestVarGet("heading")) {
      trQuestVarSet("heading", trQuestVarGet("heading") + 360.0);
      }
      /**/ trUnitSetHeading(trQuestVarGet("heading"));
      /**/ trUnitSelectByID(256+trQuestVarGet("p6lasers"));
      /**/ trUnitSelectByID(128+trQuestVarGet("p6lasers"));
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(trVectorQuestVarGetX("laserstart"+x+""),trVectorQuestVarGetY("laserstart"+x+""),trVectorQuestVarGetZ("laserstart"+x+""));
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(512+trQuestVarGet("p6lasers"));
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("lightninglaser"+zdatacount+"dir") / trVectorQuestVarGetX("lightninglaser"+zdatacount+"dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("laserstart"+x+"") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("laserstart"+x+""));
      if (0.0 > trVectorQuestVarGetX("lightninglaser"+zdatacount+"dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minLaser"), 0, trVectorQuestVarGetX("minLaser") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxLaser"), 0, trVectorQuestVarGetX("maxLaser") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("lightninglaser"+zdatacount+"dir") > -0.01 && trVectorQuestVarGetZ("lightninglaser"+zdatacount+"dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("lightninglaser"+zdatacount+"dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minLaser") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minLaser")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxLaser") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxLaser")));
      }
      if (trVectorQuestVarGetX("lightninglaser"+zdatacount+"dir") > -0.01 && trVectorQuestVarGetX("lightninglaser"+zdatacount+"dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("laserstart"+x+""), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("laserstart"+x+""), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minLaser") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxLaser")) {
      trVectorQuestVarSet("V1", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("V1", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(128+trQuestVarGet("p6lasers"));
      /**/ trUnitDoWorkOnUnit(""+(512+1*trQuestVarGet("p6lasers")), -1);
      /**/ 
      /**/ 
      /**/ 
      }
      /**/ }
      /**/ }
      rule zenowasherelightninglaser
      inactive
      highFrequency
      {
      if(true) {
      xsDisableSelf();
      xsDisableRule("__lightning_laser_code");
      trEcho("Trigger disabling rule _lightning_laser_code");
   }
}

rule _surgical_04_s1
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSetFromRand("xpos", trQuestVarGet("minLaserx"), trQuestVarGet("maxLaserx"), false);
      trVectorQuestVarSet("laserstart1", xsVectorSet(trQuestVarGet("xpos"),1.0,trVectorQuestVarGetZ("maxEnter")));
      trQuestVarSet("laserangle1", Math_atan( (trVectorQuestVarGetX("playerpos")-trVectorQuestVarGetX("laserstart1")) / (trVectorQuestVarGetZ("playerpos")-trVectorQuestVarGetZ("laserstart1")) ));
      if (trVectorQuestVarGetZ("laserstart1") > trVectorQuestVarGetZ("playerpos")) {
      if (trVectorQuestVarGetX("laserstart1") > trVectorQuestVarGetX("playerpos")) {
      trQuestVarSet("laserangle1", trQuestVarGet("laserangle1") - PI);
      } else {
      trQuestVarSet("laserangle1", trQuestVarGet("laserangle1") + PI);
      }
      }
      trQuestVarSet("lasercount", 1);
      if(trGetWorldDifficulty() >= 2){
      trQuestVarSet("lasercount", 2);
      trQuestVarCopy("laserangle2", "laserangle1");
      trQuestVarSet("laserangle2", trQuestVarGet("laserangle2") + 1.570796);
      while (trQuestVarGet("laserangle2") > (6.283185)) {
      trQuestVarSet("laserangle2", trQuestVarGet("laserangle2") - (6.283185));
      }
      while (0 > trQuestVarGet("laserangle2")) {
      trQuestVarSet("laserangle2", trQuestVarGet("laserangle2") + 6.283185);
      }
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("laserangle2")) * 1.0, 0, Math_cos(trQuestVarGet("laserangle2")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("playerpos") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("playerpos"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minLaser"), 0, trVectorQuestVarGetX("minLaser") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxLaser"), 0, trVectorQuestVarGetX("maxLaser") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minLaser") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minLaser")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxLaser") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxLaser")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("playerpos"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("playerpos"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minLaser") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxLaser")) {
      trVectorQuestVarSet("laserstart2", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("laserstart2", trVectorQuestVarGet("ziwrposs2"));
      }
      trVectorQuestVarSet("laserstart2", xsVectorSet(trQuestVarGet("laserstart2x"),1.0,trQuestVarGet("laserstart2z")));
      trQuestVarSet("laserangle2", trQuestVarGet("laserangle2") + 3.141592);
      while (trQuestVarGet("laserangle2") > (6.283185)) {
      trQuestVarSet("laserangle2", trQuestVarGet("laserangle2") - (6.283185));
      }
      while (0 > trQuestVarGet("laserangle2")) {
      trQuestVarSet("laserangle2", trQuestVarGet("laserangle2") + 6.283185);
      }
      }
      /**/ activateLightningLasers(1*trQuestVarGet("lasercount"));
      trSoundPlayFN("skypassagein.wav", "1", -1, "","");
      trEventFire(158);
      xsDisableRule("_surgical_04_s1");
      trEcho("Trigger disabling rule surgical_04_s1");
   }
}

rule _surgical_04_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVsurgical04s2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVsurgical04s2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVsurgical04s2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVsurgical04s2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVsurgical04s2timer_CompTime")) >= 500 + 100 * trGetWorldDifficulty()) {
   for(Accurate_Timer_QVsurgical04s2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVsurgical04s2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVsurgical04s2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("surgicalshoot", trQuestVarGet("surgicalshoot") - 1);
      if(trQuestVarGet("surgicalShoot") >= 1){
      trEventFire(156);
      }
      xsDisableRule("_surgical_04_s2");
      trEcho("Trigger disabling rule surgical_04_s2");
   }
}

rule _surgical_05
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("surgicalShoot") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(154);
      /**/ } else {
      trEventFire(159);
      }
      xsDisableRule("_surgical_05");
      trEcho("Trigger disabling rule surgical_05");
   }
}

rule _surgical_06_end
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 2500) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(160);
      trQuestVarSet("yeebspell", 0);
      trQuestVarSet("surgical", 0);
      xsDisableRule("_surgical_06_end");
      trEcho("Trigger disabling rule surgical_06_end");
   }
}

rule _yeeb_a1_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", 3 + trGetWorldDifficulty());
      trQuestVarSet("bossAmmoMax", 3 + trGetWorldDifficulty());
      trQuestVarSet("count", 18 + 6 * trGetWorldDifficulty());
      trQuestVarSet("anglemod", 3.1 / trQuestVarGet("count"));
      trQuestVarSet("headingmod", 57.295779 * trQuestVarGet("angleMod"));
      trEventFire(161);
      trQuestVarSet("yeeba", 1);
      trEventFire(162);
      trQuestVarSet("shootangle1", 0);
      trQuestVarSet("shootangle2", 0);
      trQuestVarSet("shootheading1", 0);
      trQuestVarSet("shootheading2", 0);
      xsDisableRule("_yeeb_a1_00_startup");
      trEcho("Trigger disabling rule yeeb_a1_00_startup");
   }
}

rule _yeeb_a1_01_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("yeeba") == 1){
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("bossposx"),1.5,trQuestVarGet("bossposz")));
      /**/ for(x=2; >0) {
      for(bb=1; >0) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projpointer")+1);
      if (trQuestVarGet("p2projpointer") > trQuestVarGet("p2projend")) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projstart"));
      }
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p2proj"));
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      /**/ trUnitSetHeading(trQuestVarGet("shootheading"+x));
      trQuestVarCopy("proj"+x+"", "p2proj");
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      /**/ }
      trEventFire(163);
      }
      xsDisableRule("_yeeb_a1_01_s1");
      trEcho("Trigger disabling rule yeeb_a1_01_s1");
   }
}

rule _yeeb_a1_01_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("yeeba") == 1){
      /**/ for(x=2; >0) {
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("shootangle"+x)) * 1.0, 0, Math_cos(trQuestVarGet("shootangle"+x)) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("proj"+x+""));
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      /**/ }
      trQuestVarSet("shootangle1", trQuestVarGet("shootangle1") + trQuestVarGet("angleMod"));
      while (trQuestVarGet("shootangle1") > (6.283185)) {
      trQuestVarSet("shootangle1", trQuestVarGet("shootangle1") - (6.283185));
      }
      while (0 > trQuestVarGet("shootangle1")) {
      trQuestVarSet("shootangle1", trQuestVarGet("shootangle1") + 6.283185);
      }
      trQuestVarSet("shootangle2", trQuestVarGet("shootangle2") - trQuestVarGet("angleMod"));
      while (trQuestVarGet("shootangle2") > (6.283185)) {
      trQuestVarSet("shootangle2", trQuestVarGet("shootangle2") - (6.283185));
      }
      while (0 > trQuestVarGet("shootangle2")) {
      trQuestVarSet("shootangle2", trQuestVarGet("shootangle2") + 6.283185);
      }
      trQuestVarSet("shootheading1", trQuestVarGet("shootheading1") + trQuestVarGet("headingMod"));
      while (trQuestVarGet("shootheading1") > (360.0)) {
      trQuestVarSet("shootheading1", trQuestVarGet("shootheading1") - (360.0));
      }
      while (0 > trQuestVarGet("shootheading1")) {
      trQuestVarSet("shootheading1", trQuestVarGet("shootheading1") + 360.0);
      }
      trQuestVarSet("shootheading2", trQuestVarGet("shootheading2") - trQuestVarGet("headingMod"));
      while (trQuestVarGet("shootheading2") > (360.0)) {
      trQuestVarSet("shootheading2", trQuestVarGet("shootheading2") - (360.0));
      }
      while (0 > trQuestVarGet("shootheading2")) {
      trQuestVarSet("shootheading2", trQuestVarGet("shootheading2") + 360.0);
      }
      trEventFire(161);
      }
      xsDisableRule("_yeeb_a1_01_s2");
      trEcho("Trigger disabling rule yeeb_a1_01_s2");
   }
}

rule _yeeb_a1_02_move
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVyeebmovetimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVyeebmovetimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVyeebmovetimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeebmovetimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVyeebmovetimer_CompTime")) >= 3000) {
   for(Accurate_Timer_QVyeebmovetimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeebmovetimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVyeebmovetimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(145);
      trEventFire(164);
      trQuestVarSetFromRand("sound", 1, 3, true);
      trSoundPlayFN("suckup"+1*trQuestVarGet("sound")+".wav", "1", -1, "","");
      xsDisableRule("_yeeb_a1_02_move");
      trEcho("Trigger disabling rule yeeb_a1_02_move");
   }
}

rule _yeeb_a1_03_check
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVyeebchecktimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVyeebchecktimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVyeebchecktimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeebchecktimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVyeebchecktimer_CompTime")) >= 1000) {
   for(Accurate_Timer_QVyeebchecktimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeebchecktimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVyeebchecktimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(162);
      /**/ } else {
      trEventFire(165);
      }
      xsDisableRule("_yeeb_a1_03_check");
      trEcho("Trigger disabling rule yeeb_a1_03_check");
   }
}

rule _yeeb_a1_04_end
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("yeeba", 0);
      trEventFire(166);
      xsDisableRule("_yeeb_a1_04_end");
      trEcho("Trigger disabling rule yeeb_a1_04_end");
   }
}

rule _yeeb_a2_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", 3 + trGetWorldDifficulty());
      trQuestVarSet("bossAmmoMax", 3 + trGetWorldDifficulty());
      trQuestVarSet("count", 18 + 6 * trGetWorldDifficulty());
      trQuestVarSet("anglemod", 3.1 / trQuestVarGet("count"));
      trQuestVarSet("headingmod", 57.295779 * trQuestVarGet("angleMod"));
      trEventFire(161);
      trQuestVarSet("yeeba", 1);
      trQuestVarSet("shootangle1", 0);
      trQuestVarSet("shootangle2", 0);
      trQuestVarSet("shootheading1", 0);
      trQuestVarSet("shootheading2", 0);
      trQuestVarSet("lasercount", 9 + 3 * trGetWorldDifficulty());
      trQuestVarSet("laserAngleMod", 2.1 / trQuestVarGet("laserCount"));
      trQuestVarSet("laserHeadingMod", 120.321162 / trQuestVarGet("laserCount"));
      trEventFire(167);
      xsDisableRule("_yeeb_a2_00_startup");
      trEcho("Trigger disabling rule yeeb_a2_00_startup");
   }
}

rule _yeeb_a2_01_fire
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVyeeba1firetimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVyeeba1firetimer_CompTime")) >= 2000) {
   for(Accurate_Timer_QVyeeba1firetimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVyeeba1firetimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("laserangle1", 3.141592);
      trQuestVarSet("laserangle2", 3.141592);
      trQuestVarSet("laserheading1", 0);
      trQuestVarSet("laserheading2", 0);
      trVectorQuestVarSet("laserCenter", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossposz")));
      trQuestVarCopy("lasershoot", "lasercount");
      trEventFire(142);
      trEventFire(168);
      trVectorQuestVarSet("laserCenter", xsVectorSet(trVectorQuestVarGetX("laserCenter") + 0,trVectorQuestVarGetY("laserCenter") + 1.0,trVectorQuestVarGetZ("laserCenter") + 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("laserCenter");b = trVectorQuestVarGetY("laserCenter");c = trVectorQuestVarGetZ("laserCenter");
      trVectorQuestVarSet("laserCenter",xsVectorSet(a,b,c));}
      xsDisableRule("_yeeb_a2_01_fire");
      trEcho("Trigger disabling rule yeeb_a2_01_fire");
   }
}

rule _yeeb_a2_03
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("lasershoot") == 0);

   bool bVar1 = (trQuestVarGet("zdatalitelightninglaserscount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(167);
      trEventFire(145);
      /**/ } else {
      trEventFire(137);
      trQuestVarSet("yeeba", 0);
      }
      xsDisableRule("_yeeb_a2_03");
      trEcho("Trigger disabling rule yeeb_a2_03");
   }
}

rule _thunderclap_00_startup
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("yeebspell", 1);
      trQuestVarSet("thunderclap", 1);
      trOverlayText("Thunderclap", 3.0, 597, 360, 800);
      trQuestVarSet("bossAmmo", 4 + trGetWorldDifficulty());
      trQuestVarSet("bossAmmoMax", 4 + trGetWorldDifficulty());
      trStringQuestVarSet("bossName", "Thunderclap ");
      trEventFire(169);
      trQuestVarSet("count", 7 + 2 * trGetWorldDifficulty());
      trQuestVarSet("stepSize", 8.0 / trQuestVarGet("count"));
      trQuestVarSet("waveCount", 9 + 3 * trGetWorldDifficulty());
      trQuestVarSet("waveAngleMod", 3.141592 / (trQuestVarGet("waveCount") + 1));
      trUnitSelectClear();
      trUnitSelect("8584");
      trUnitSelect("8585");
      trUnitChangeProtoUnit("Dwarf");
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 6, 1, 4.0 - trQuestVarGet("p"+6+"p"+zsps+"f1f"));
      trQuestVarSet("p"+6+"p"+zsps+"f1f", 4.0);
      trQuestVarSet("lightningcount", 6 + 2 * trGetWorldDifficulty());
      trQuestVarSet("lightninganglemod", 3.141592 / (1.0 + trQuestVarGet("lightningcount")));
      xsDisableRule("_thunderclap_00_startup");
      trEcho("Trigger disabling rule thunderclap_00_startup");
   }
}

rule _thunderclap_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1500 - 200 * trGetWorldDifficulty()) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("bossMove", xsVectorSet(trVectorQuestVarGetX("playerpos"),0.0,trQuestVarGet("maxExitz") - 13.0));
      trEventFire(170);
      xsDisableRule("_thunderclap_01");
      trEcho("Trigger disabling rule thunderclap_01");
   }
}

rule _thunderclap_02_done_moving
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(6003);
   bool bVar0 = (trUnitDistanceToPoint(trVectorQuestVarGetX("bossmove"),trVectorQuestVarGetY("bossmove"),trVectorQuestVarGetZ("bossmove")) == 0);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trEventFire(171);
      trUnitSelectClear();
      trUnitSelectByID(6018);
      trUnitSelectByID(6019);
      trUnitTeleport(trVectorQuestVarGetX("bosspos"),trVectorQuestVarGetY("bosspos"),trVectorQuestVarGetZ("bosspos"));
      trVectorQuestVarSet("warningtarget", xsVectorSet(trVectorQuestVarGetX("bosspos"),0.0,trVectorQuestVarGetZ("minExit")));
      trUnitSelectClear();
      trUnitSelectByID(6016);
      trUnitSelectByID(6017);
      trUnitTeleport(trVectorQuestVarGetX("warningtarget"),trVectorQuestVarGetY("warningtarget"),trVectorQuestVarGetZ("warningtarget"));
      trUnitSelectClear();
      trUnitSelectByID(6018);
      trUnitDoWorkOnUnit("6016",-1);
      trUnitSelectClear();
      trUnitSelectByID(6019);
      trUnitDoWorkOnUnit("6017",-1);
      xsDisableRule("_thunderclap_02_done_moving");
      trEcho("Trigger disabling rule thunderclap_02_done_moving");
   }
}

rule _thunderclap_03_warn
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(6017);
   bool bVar0 = (trUnitPercentDamaged() > 0);

   trUnitSelectClear();
   trUnitSelectByID(6016);
   bool bVar1 = (trUnitPercentDamaged() > 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trUnitSelectClear();
      trUnitSelectByID(6017);
      trUnitSelectByID(6016);
      trDamageUnitPercent(-100);
      trSoundPlayFN("attackwarning.wav", "2", -1, "","");
      trQuestVarSet("warningmove", 25);
      trEventFire(172);
      trVectorQuestVarSet("warning1", trVectorQuestVarGet("bosspos"));
      trVectorQuestVarSet("warning2", trVectorQuestVarGet("bosspos"));
      trEventFire(173);
      xsDisableRule("_thunderclap_03_warn");
      trEcho("Trigger disabling rule thunderclap_03_warn");
   }
}

rule _thunderclap_04_w1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("warning1", xsVectorSet(trVectorQuestVarGetX("warning1") + 0.2,trVectorQuestVarGetY("warning1") + 0,trVectorQuestVarGetZ("warning1") + 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("warning1");b = trVectorQuestVarGetY("warning1");c = trVectorQuestVarGetZ("warning1");
      trVectorQuestVarSet("warning1",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("warning2", xsVectorSet(trVectorQuestVarGetX("warning2") - 0.2,trVectorQuestVarGetY("warning2") - 0,trVectorQuestVarGetZ("warning2") - 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("warning2");b = trVectorQuestVarGetY("warning2");c = trVectorQuestVarGetZ("warning2");
      trVectorQuestVarSet("warning2",xsVectorSet(a,b,c));}
      trUnitSelectClear();
      trUnitSelectByID(6018);
      trUnitTeleport(trVectorQuestVarGetX("warning1"),trVectorQuestVarGetY("warning1"),trVectorQuestVarGetZ("warning1"));
      trUnitSelectClear();
      trUnitSelectByID(6019);
      trUnitTeleport(trVectorQuestVarGetX("warning2"),trVectorQuestVarGetY("warning2"),trVectorQuestVarGetZ("warning2"));
      trVectorQuestVarSet("target1", xsVectorSet(trQuestVarGet("warning1x"),0,trVectorQuestVarGetZ("minlaser")));
      trVectorQuestVarSet("target2", xsVectorSet(trQuestVarGet("warning2x"),0,trVectorQuestVarGetZ("minLaser")));
      trUnitSelectClear();
      trUnitSelectByID(6016);
      trUnitTeleport(trVectorQuestVarGetX("target1"),trVectorQuestVarGetY("target1"),trVectorQuestVarGetZ("target1"));
      trUnitSelectClear();
      trUnitSelectByID(6017);
      trUnitTeleport(trVectorQuestVarGetX("target2"),trVectorQuestVarGetY("target2"),trVectorQuestVarGetZ("target2"));
      trEventFire(174);
      xsDisableRule("_thunderclap_04_w1");
      trEcho("Trigger disabling rule thunderclap_04_w1");
   }
}

rule _thunderclap_04_w2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVwarntimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVwarntimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVwarntimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVwarntimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVwarntimer_CompTime")) >= 10) {
   for(Accurate_Timer_QVwarntimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVwarntimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVwarntimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("warningmove", trQuestVarGet("warningmove") - 1);
      if(trQuestVarGet("warningmove") >= 1){
      trEventFire(172);
      }
      xsDisableRule("_thunderclap_04_w2");
      trEcho("Trigger disabling rule thunderclap_04_w2");
   }
}

rule _thunderclap_05
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1200) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSetFromRand("sound", 1, 5, true);
      trSoundPlayFN("lightningstrike"+1*trQuestVarGet("sound")+".wav", "1", -1, "","");
      trQuestVarSetFromRand("angle", 2.641593, 3.641593, false);
      trVectorQuestVarSet("step",xsVectorSet(Math_sin(trQuestVarGet("angle")) * trQuestVarGet("stepSize"), 0, Math_cos(trQuestVarGet("angle")) * trQuestVarGet("stepSize")));
      trQuestVarSetFromRand("stepCount", 6, 12, true);
      trVectorQuestVarSet("start", xsVectorSet(trVectorQuestVarGetX("bosspos"),1.0,trVectorQuestVarGetZ("bosspos")));
      /**/ for(x=trQuestVarGet("stepCount"); >0) {
      trVectorQuestVarSet("start", trVectorQuestVarGet("start") + trVectorQuestVarGet("step"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("start");b = trVectorQuestVarGetY("start");c = trVectorQuestVarGetZ("start");
      trVectorQuestVarSet("start",xsVectorSet(a,b,c));}
      for(bb=2; >0) {
      trQuestVarSet("p4projxp5proj", trQuestVarGet("p4projxp5proj") + 1);
      if (trQuestVarGet("p4projxp5proj") > 1) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trQuestVarSet("p6proj", trQuestVarGet("p4projpointer"));
      trQuestVarSet("p4projxp5proj", 0);
      } else {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projpointer")+1);
      if (trQuestVarGet("p5projpointer") > trQuestVarGet("p5projend")) {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projstart"));
      }
      trQuestVarSet("p5proj", trQuestVarGet("p5projpointer"));
      trQuestVarSet("p6proj", trQuestVarGet("p5projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p6proj"));
      trUnitTeleport(trVectorQuestVarGetX("start"),trVectorQuestVarGetY("start"),trVectorQuestVarGetZ("start"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep6projshootcount");
      trQuestVarSet("zdatalitep6projshootindex"+zdatacount, trQuestVarGet("p6proj"));
      trQuestVarSet("zdatalitep6projshootcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p6proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      /**/ }
      trVectorQuestVarSet("step", xsVectorSet(-1.0 * trQuestVarGet("stepx"),0,trQuestVarGet("stepz")));
      trQuestVarSetFromRand("stepCount", 8, 16, true);
      /**/ for(x=trQuestVarGet("stepCount"); >0) {
      trVectorQuestVarSet("start", trVectorQuestVarGet("start") + trVectorQuestVarGet("step"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("start");b = trVectorQuestVarGetY("start");c = trVectorQuestVarGetZ("start");
      trVectorQuestVarSet("start",xsVectorSet(a,b,c));}
      for(bb=2; >0) {
      trQuestVarSet("p4projxp5proj", trQuestVarGet("p4projxp5proj") + 1);
      if (trQuestVarGet("p4projxp5proj") > 1) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trQuestVarSet("p6proj", trQuestVarGet("p4projpointer"));
      trQuestVarSet("p4projxp5proj", 0);
      } else {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projpointer")+1);
      if (trQuestVarGet("p5projpointer") > trQuestVarGet("p5projend")) {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projstart"));
      }
      trQuestVarSet("p5proj", trQuestVarGet("p5projpointer"));
      trQuestVarSet("p6proj", trQuestVarGet("p5projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p6proj"));
      trUnitTeleport(trVectorQuestVarGetX("start"),trVectorQuestVarGetY("start"),trVectorQuestVarGetZ("start"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep6projshootcount");
      trQuestVarSet("zdatalitep6projshootindex"+zdatacount, trQuestVarGet("p6proj"));
      trQuestVarSet("zdatalitep6projshootcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p6proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      /**/ }
      trVectorQuestVarSet("step", xsVectorSet(-1.0 * trQuestVarGet("stepx"),0,trQuestVarGet("stepz")));
      /**/ while(trQuestVarGet("startz") > trQuestVarGet("minlaserz")) {
      trVectorQuestVarSet("start", trVectorQuestVarGet("start") + trVectorQuestVarGet("step"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("start");b = trVectorQuestVarGetY("start");c = trVectorQuestVarGetZ("start");
      trVectorQuestVarSet("start",xsVectorSet(a,b,c));}
      for(bb=2; >0) {
      trQuestVarSet("p4projxp5proj", trQuestVarGet("p4projxp5proj") + 1);
      if (trQuestVarGet("p4projxp5proj") > 1) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trQuestVarSet("p6proj", trQuestVarGet("p4projpointer"));
      trQuestVarSet("p4projxp5proj", 0);
      } else {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projpointer")+1);
      if (trQuestVarGet("p5projpointer") > trQuestVarGet("p5projend")) {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projstart"));
      }
      trQuestVarSet("p5proj", trQuestVarGet("p5projpointer"));
      trQuestVarSet("p6proj", trQuestVarGet("p5projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p6proj"));
      trUnitTeleport(trVectorQuestVarGetX("start"),trVectorQuestVarGetY("start"),trVectorQuestVarGetZ("start"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep6projshootcount");
      trQuestVarSet("zdatalitep6projshootindex"+zdatacount, trQuestVarGet("p6proj"));
      trQuestVarSet("zdatalitep6projshootcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p6proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      /**/ }
      trQuestVarSet("lightningStrikeCount", trQuestVarGet("zdatalitep6projshootcount") / 2);
      for(bb=trQuestVarGet("waveCount"); >0) {
      trQuestVarSet("p1projxp3proj", trQuestVarGet("p1projxp3proj") + 1);
      if (trQuestVarGet("p1projxp3proj") > 1) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trQuestVarSet("p5proj", trQuestVarGet("p1projpointer"));
      trQuestVarSet("p1projxp3proj", 0);
      } else {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trQuestVarSet("p5proj", trQuestVarGet("p3projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p5proj"));
      trUnitTeleport(trVectorQuestVarGetX("start"),trVectorQuestVarGetY("start"),trVectorQuestVarGetZ("start"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep5projshootcount");
      trQuestVarSet("zdatalitep5projshootindex"+zdatacount, trQuestVarGet("p5proj"));
      trQuestVarSet("zdatalitep5projshootcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p5proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      trEventFire(175);
      trUnitSelectClear();
      trUnitSelect("8582");
      trUnitSelect("8583");
      trUnitTeleport(65.54, 0.00, 96.67);
      trUnitSelectClear();
      trUnitSelect("8584");
      trUnitSelect("8585");
      trUnitTeleport(65.54, 0.00, 96.67);
      trSoundPlayFN("ui\thunder2.wav", "2", -1, "","");
      trVectorQuestVarSet("lightningstart", trVectorQuestVarGet("start"));
      xsDisableRule("_thunderclap_05");
      trEcho("Trigger disabling rule thunderclap_05");
   }
}

rule _thunderclap_06_shoot
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("angle", 1.570796 - trQuestVarGet("waveAngleMod"));
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep5projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep5projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep5projshootpointer", trQuestVarGet("zdatalitep5projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep5projshootpointer")) {
      trQuestVarSet("zdatalitep5projshootpointer", trQuestVarGet("zdatalitep5projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep5projshootpointer");
      trQuestVarSet("p5projshoot", trQuestVarGet("zdatalitep5projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p5projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("start") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("start"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("start"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("start"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      trQuestVarSet("angle", trQuestVarGet("angle") - trQuestVarGet("waveAngleMod"));
      while (trQuestVarGet("angle") > (6.283185)) {
      trQuestVarSet("angle", trQuestVarGet("angle") - (6.283185));
      }
      while (0 > trQuestVarGet("angle")) {
      trQuestVarSet("angle", trQuestVarGet("angle") + 6.283185);
      }
      }
      trQuestVarSet("zdatalitep5projshootcount", 0);
      trQuestVarSet("zdatalitep5projshootpointer", 0);
      trQuestVarSet("p5projshoot", 0);
      trEventFire(176);
      if(trGetWorldDifficulty() >= 2){
      trQuestVarSet("angle", 1.570796 - trQuestVarGet("lightningAngleMod"));
      /**/ for(x=trQuestVarGet("lightningcount"); >0) {
      trVectorQuestVarSet("laserstart"+x+"", trVectorQuestVarGet("lightningstart"));
      trQuestVarCopy("laserangle"+x+"", "angle");
      trQuestVarSet("angle", trQuestVarGet("angle") - trQuestVarGet("lightninganglemod"));
      while (trQuestVarGet("angle") > (6.283185)) {
      trQuestVarSet("angle", trQuestVarGet("angle") - (6.283185));
      }
      while (0 > trQuestVarGet("angle")) {
      trQuestVarSet("angle", trQuestVarGet("angle") + 6.283185);
      }
      /**/ }
      /**/ activateLightningLasers(1*trQuestVarGet("lightningCount"));
      }
      xsDisableRule("_thunderclap_06_shoot");
      trEcho("Trigger disabling rule thunderclap_06_shoot");
   }
}

rule _thunderclap_07_start_scatter
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1000) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(177);
      trSoundPlayFN("suckup2.wav", "2", -1, "","");
      trQuestVarSetFromRand("thunderAngle", 0, 3.141592, false);
      trVectorQuestVarSet("thunderCenter", xsVectorSet(trQuestVarGet("bossposX"),0,0.5 * (trQuestVarGet("bossposZ") - trQuestVarGet("minLaserZ"))));
      trEventFire(178);
      xsDisableRule("_thunderclap_07_start_scatter");
      trEcho("Trigger disabling rule thunderclap_07_start_scatter");
   }
}

rule _thunderclap_08_m1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bomb") == 1){
      trQuestVarSet("lightningStrikeCount", 0);
      /**/ } else {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep6projshootcount") > (2) && (2) > 0) {
      zdatasearch = 2;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep6projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep6projshootpointer", trQuestVarGet("zdatalitep6projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep6projshootpointer")) {
      trQuestVarSet("zdatalitep6projshootpointer", trQuestVarGet("zdatalitep6projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep6projshootpointer");
      trQuestVarSet("p6projshoot", trQuestVarGet("zdatalitep6projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p6projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trQuestVarSet("thunderAngle", trQuestVarGet("thunderAngle") + 2.43);
      while (trQuestVarGet("thunderAngle") > (6.283185)) {
      trQuestVarSet("thunderAngle", trQuestVarGet("thunderAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("thunderAngle")) {
      trQuestVarSet("thunderAngle", trQuestVarGet("thunderAngle") + 6.283185);
      }
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("thunderAngle")) * 1.0, 0, Math_cos(trQuestVarGet("thunderAngle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("thunderCenter") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("thunderCenter"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("thunderCenter"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("thunderCenter"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      }
      trEventFire(179);
      }
      xsDisableRule("_thunderclap_08_m1");
      trEcho("Trigger disabling rule thunderclap_08_m1");
   }
}

rule _thunderclap_08_m2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("lightningStrikeCount", trQuestVarGet("lightningStrikeCount") - 1);
      if(trQuestVarGet("lightningStrikeCount") >= 1){
      trEventFire(177);
      }
      xsDisableRule("_thunderclap_08_m2");
      trEcho("Trigger disabling rule thunderclap_08_m2");
   }
}

rule _thunderclap_09
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("lightningStrikeCount") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("zdatalitep6projshootcount", 0);
      trQuestVarSet("zdatalitep6projshootpointer", 0);
      trQuestVarSet("p6projshoot", 0);
      trEventFire(180);
      xsDisableRule("_thunderclap_09");
      trEcho("Trigger disabling rule thunderclap_09");
   }
}

rule _thunderclap_10_check
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelayTimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelayTimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelayTimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelayTimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelayTimer_CompTime")) >= 1000- 500 * trGetWorldDifficulty()) {
   for(Accurate_Timer_QVdelayTimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelayTimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelayTimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(169);
      /**/ } else {
      trEventFire(181);
      }
      xsDisableRule("_thunderclap_10_check");
      trEcho("Trigger disabling rule thunderclap_10_check");
   }
}

rule _thunderclap_11
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("yeebspell", 0);
      trEventFire(182);
      trQuestVarSet("thunderclap", 0);
      xsDisableRule("_thunderclap_11");
      trEcho("Trigger disabling rule thunderclap_11");
   }
}

rule _electrosurge_00_startup
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("yeebspell", 1);
      trQuestVarSet("electrosurge", 1);
      trOverlayText("Electrosurge", 3.0, 597, 360, 800);
      trQuestVarSet("bossAmmo", 4 + trGetWorldDifficulty());
      trQuestVarSet("bossAmmoMax", 4 + trGetWorldDifficulty());
      trStringQuestVarSet("bossName", "Electrosurge ");
      trQuestVarSet("surgeCount", 12);
      trQuestVarSet("surgeAngleMod", 6.2 / trQuestVarGet("surgeCount"));
      if(trGetWorldDifficulty() < 2){
      trQuestVarSet("waveAngleMod", 3.141592 / trQuestVarGet("surgeCount"));
      /**/ } else {
      trQuestVarSet("waveAngleMod", 0.5 * trQuestVarGet("surgeAngleMod"));
      }
      trEventFire(183);
      trQuestVarSet("surgeAngle1", 0);
      trQuestVarSet("surgeAngle2", 1.4);
      trEventFire(184);
      for(bb=5; >0) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXpointer")+1);
      if (trQuestVarGet("spareSFXpointer") > trQuestVarGet("spareSFXend")) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXstart"));
      }
      trQuestVarSet("spareSFX", trQuestVarGet("spareSFXpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("spareSFX"));
      trUnitChangeProtoUnit("Arkantos God");
      /**/ trSetSelectedScale(0,0,0);
      /**/ trUnitOverrideAnimation(26, 0, 1, 0, -1, 0);
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitearkantosSFXcount");
      trQuestVarSet("zdatalitearkantosSFXindex"+zdatacount, trQuestVarGet("spareSFX"));
      trQuestVarSet("zdatalitearkantosSFXcount", zdatacount+1);
      }
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 6.0 + 2.0 * trGetWorldDifficulty() - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 6.0 + 2.0 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 6.0 + 2.0 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 6.0 + 2.0 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 5, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+5+"p"+zsps+"f1f"));
      trQuestVarSet("p"+5+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 4, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+4+"p"+zsps+"f1f"));
      trQuestVarSet("p"+4+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      xsDisableRule("_electrosurge_00_startup");
      trEcho("Trigger disabling rule electrosurge_00_startup");
   }
}

rule _electrosurge_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1000) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("lightningbirth.wav", "4", -1, "","");
      trEventFire(185);
      trVectorQuestVarSet("arkantos0", xsVectorSet(trQuestVarGet("bossposx"),0,trQuestVarGet("bossposz") + 3.0));
      trVectorQuestVarSet("arkantos1", xsVectorSet(trQuestVarGet("bossposx") + 3.0,0,trQuestVarGet("bossposz")));
      trVectorQuestVarSet("arkantos2", xsVectorSet(trQuestVarGet("bossposx"),0,trQuestVarGet("bossposz") - 3.0));
      trVectorQuestVarSet("arkantos3", xsVectorSet(trQuestVarGet("bossposx") - 3.0,0,trQuestVarGet("bossposz")));
      trVectorQuestVarSet("arkantos4", xsVectorSet(trQuestVarGet("bossposx"),0,trQuestVarGet("bossposz")));
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitearkantosSFXcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitearkantosSFXcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitearkantosSFXpointer", trQuestVarGet("zdatalitearkantosSFXpointer")-1);
      if (0 > trQuestVarGet("zdatalitearkantosSFXpointer")) {
      trQuestVarSet("zdatalitearkantosSFXpointer", trQuestVarGet("zdatalitearkantosSFXcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitearkantosSFXpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitearkantosSFXindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitearkantosSFXcount") - 1;
      zdataremove = trQuestVarGet("zdatalitearkantosSFXpointer");
      trQuestVarSet("zdatalitearkantosSFXindex"+zdataremove, trQuestVarGet("zdatalitearkantosSFXindex"+zdatacount));
      trQuestVarSet("zdatalitearkantosSFXcount", zdatacount);
      trQuestVarSet("zdatalitearkantosSFXpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("arkantosSFX", trQuestVarGet("zdatalitearkantosSFXindex"+zdatapointer));
      UnitID = trQuestVarGet("arkantosSFX");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitTeleport(trVectorQuestVarGetX("arkantos"+zdatapointer+""),trVectorQuestVarGetY("arkantos"+zdatapointer+""),trVectorQuestVarGetZ("arkantos"+zdatapointer+""));
      }
      xsDisableRule("_electrosurge_01");
      trEcho("Trigger disabling rule electrosurge_01");
   }
}

rule _electrosurge_02_fire
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1200) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trUnitSelectClear();
      trUnitSelectByID(6020);
      trUnitTeleport(81.72, 0.00, 89.90);
      trQuestVarSet("electrosurgeShoot", 36 + 12 * trGetWorldDifficulty());
      trEventFire(186);
      trSoundPlayFN("sonofosirisbolt.wav", "2", -1, "","");
      trVectorQuestVarSet("surgeCenter", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossposz")));
      trEventFire(187);
      trQuestVarSet("surgeVary", trQuestVarGet("surgeVary") + 1);
      if(trQuestVarGet("surgeVary") >= 3){
      trQuestVarSet("surgeVary", 1);
      }
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitearkantosSFXcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitearkantosSFXcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitearkantosSFXpointer", trQuestVarGet("zdatalitearkantosSFXpointer")-1);
      if (0 > trQuestVarGet("zdatalitearkantosSFXpointer")) {
      trQuestVarSet("zdatalitearkantosSFXpointer", trQuestVarGet("zdatalitearkantosSFXcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitearkantosSFXpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitearkantosSFXindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitearkantosSFXcount") - 1;
      zdataremove = trQuestVarGet("zdatalitearkantosSFXpointer");
      trQuestVarSet("zdatalitearkantosSFXindex"+zdataremove, trQuestVarGet("zdatalitearkantosSFXindex"+zdatacount));
      trQuestVarSet("zdatalitearkantosSFXcount", zdatacount);
      trQuestVarSet("zdatalitearkantosSFXpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("arkantosSFX", trQuestVarGet("zdatalitearkantosSFXindex"+zdatapointer));
      UnitID = trQuestVarGet("arkantosSFX");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitTeleport(1.07, 0.00, 1.07);
      }
      xsDisableRule("_electrosurge_02_fire");
      trEcho("Trigger disabling rule electrosurge_02_fire");
   }
}

rule _electrosurge_03_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("waveAngle", trQuestVarGet("waveAngle") - trQuestVarGet("waveAngleMod"));
      while (trQuestVarGet("waveAngle") > (6.283185)) {
      trQuestVarSet("waveAngle", trQuestVarGet("waveAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("waveAngle")) {
      trQuestVarSet("waveAngle", trQuestVarGet("waveAngle") + 6.283185);
      }
      trQuestVarSet("surgeAngle1", trQuestVarGet("surgeAngle1") + trQuestVarGet("surgeAngleMod"));
      while (trQuestVarGet("surgeAngle1") > (6.283185)) {
      trQuestVarSet("surgeAngle1", trQuestVarGet("surgeAngle1") - (6.283185));
      }
      while (0 > trQuestVarGet("surgeAngle1")) {
      trQuestVarSet("surgeAngle1", trQuestVarGet("surgeAngle1") + 6.283185);
      }
      trQuestVarSet("surgeAngle2", trQuestVarGet("surgeAngle2") + trQuestVarGet("surgeAngleMod"));
      while (trQuestVarGet("surgeAngle2") > (6.283185)) {
      trQuestVarSet("surgeAngle2", trQuestVarGet("surgeAngle2") - (6.283185));
      }
      while (0 > trQuestVarGet("surgeAngle2")) {
      trQuestVarSet("surgeAngle2", trQuestVarGet("surgeAngle2") + 6.283185);
      }
      for(bb=3; >0) {
      trQuestVarSet("p1projxp3proj", trQuestVarGet("p1projxp3proj") + 1);
      if (trQuestVarGet("p1projxp3proj") > 1) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trQuestVarSet("p5proj", trQuestVarGet("p1projpointer"));
      trQuestVarSet("p1projxp3proj", 0);
      } else {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trQuestVarSet("p5proj", trQuestVarGet("p3projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p5proj"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitesurgeProjcount");
      trQuestVarSet("zdatalitesurgeProjindex"+zdatacount, trQuestVarGet("p5proj"));
      trQuestVarSet("zdatalitesurgeProjcount", zdatacount+1);
      trVectorQuestVarSet("surgeProj"+zdatacount+"move1",xsVectorSet(Math_sin(trQuestVarGet("surgeAngle1")) * 6.0, 0, Math_cos(trQuestVarGet("surgeAngle1")) * 6.0));
      trVectorQuestVarSet("surgeProj"+zdatacount+"move2",xsVectorSet(Math_sin(trQuestVarGet("surgeAngle2")) * 6.0, 0, Math_cos(trQuestVarGet("surgeAngle2")) * 6.0));
      trVectorQuestVarSet("surgeProj"+zdatacount+"pos", trVectorQuestVarGet("surgeCenter"));
      trQuestVarSet("surgeAngle1", trQuestVarGet("surgeAngle1") + 2.094395);
      while (trQuestVarGet("surgeAngle1") > (6.283185)) {
      trQuestVarSet("surgeAngle1", trQuestVarGet("surgeAngle1") - (6.283185));
      }
      while (0 > trQuestVarGet("surgeAngle1")) {
      trQuestVarSet("surgeAngle1", trQuestVarGet("surgeAngle1") + 6.283185);
      }
      trQuestVarSet("surgeAngle2", trQuestVarGet("surgeAngle2") + 2.094395);
      while (trQuestVarGet("surgeAngle2") > (6.283185)) {
      trQuestVarSet("surgeAngle2", trQuestVarGet("surgeAngle2") - (6.283185));
      }
      while (0 > trQuestVarGet("surgeAngle2")) {
      trQuestVarSet("surgeAngle2", trQuestVarGet("surgeAngle2") + 6.283185);
      }
      trUnitTeleport(trVectorQuestVarGetX("surgeCenter"),trVectorQuestVarGetY("surgeCenter"),trVectorQuestVarGetZ("surgeCenter"));
      trQuestVarCopy("surgeProj"+zdatacount+"vary", "surgeVary");
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojIncomingcount");
      trQuestVarSet("zdataliteprojIncomingindex"+zdatacount, trQuestVarGet("p5proj"));
      trQuestVarSet("zdataliteprojIncomingcount", zdatacount+1);
      }
      for(bb=3; >0) {
      trQuestVarSet("p45projpointer", trQuestVarGet("p45projpointer")+1);
      if (trQuestVarGet("p45projpointer") > trQuestVarGet("p45projend")) {
      trQuestVarSet("p45projpointer", trQuestVarGet("p45projstart"));
      }
      trQuestVarSet("p45proj", trQuestVarGet("p45projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p45proj"));
      trUnitTeleport(trVectorQuestVarGetX("surgeCenter"),trVectorQuestVarGetY("surgeCenter"),trVectorQuestVarGetZ("surgeCenter"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojIncomingcount");
      trQuestVarSet("zdataliteprojIncomingindex"+zdatacount, trQuestVarGet("p45proj"));
      trQuestVarSet("zdataliteprojIncomingcount", zdatacount+1);
      }
      trEventFire(188);
      xsDisableRule("_electrosurge_03_s1");
      trEcho("Trigger disabling rule electrosurge_03_s1");
   }
}

rule _electrosurge_03_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      for(bbb=0; >1) {}
      bbb = trQuestVarGet("p45projpointer");
      for(bb=3; >0) {
      trUnitSelectClear();
      trUnitSelectByID(bbb);
      bbb = bbb - 1;
      if (trQuestVarGet("p45projstart") > bbb) {
      bbb = trQuestVarGet("p45projend");
      }
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("waveAngle")) * 1.0, 0, Math_cos(trQuestVarGet("waveAngle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("surgeCenter") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("surgeCenter"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("surgeCenter"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("surgeCenter"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      trQuestVarSet("waveAngle", trQuestVarGet("waveAngle") + 2.094395);
      while (trQuestVarGet("waveAngle") > (6.283185)) {
      trQuestVarSet("waveAngle", trQuestVarGet("waveAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("waveAngle")) {
      trQuestVarSet("waveAngle", trQuestVarGet("waveAngle") + 6.283185);
      }
      }
      trQuestVarSet("electrosurgeShoot", trQuestVarGet("electrosurgeShoot") - 1);
      if(trQuestVarGet("electrosurgeShoot") >= 1){
      trEventFire(186);
      }
      xsDisableRule("_electrosurge_03_s2");
      trEcho("Trigger disabling rule electrosurge_03_s2");
   }
}

rule _electrosurge_04
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("electrosurgeShoot") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(145);
      trEventFire(189);
      /**/ } else {
      trEventFire(190);
      }
      xsDisableRule("_electrosurge_04");
      trEcho("Trigger disabling rule electrosurge_04");
   }
}

rule _electrosurge_05_done_moving
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(6003);
   bool bVar0 = (trUnitDistanceToPoint(trVectorQuestVarGetX("bossmove"),trVectorQuestVarGetY("bossmove"),trVectorQuestVarGetZ("bossmove")) == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(183);
      xsDisableRule("_electrosurge_05_done_moving");
      trEcho("Trigger disabling rule electrosurge_05_done_moving");
   }
}

rule _electrosurge_06_m1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("electrosurge") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitesurgeProjcount") > (30) && (30) > 0) {
      zdatasearch = 30;
      } else {
      zdatasearch = trQuestVarGet("zdatalitesurgeProjcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitesurgeProjpointer", trQuestVarGet("zdatalitesurgeProjpointer")-1);
      if (0 > trQuestVarGet("zdatalitesurgeProjpointer")) {
      trQuestVarSet("zdatalitesurgeProjpointer", trQuestVarGet("zdatalitesurgeProjcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitesurgeProjpointer");
      trQuestVarSet("surgeProj", trQuestVarGet("zdatalitesurgeProjindex"+zdatapointer));
      UnitID = trQuestVarGet("surgeProj");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      if ((trVectorQuestVarGetX("maxBound") > trVectorQuestVarGetX("surgeProj"+zdatapointer+"pos") &&
      trVectorQuestVarGetZ("maxBound") > trVectorQuestVarGetZ("surgeProj"+zdatapointer+"pos") &&
      trVectorQuestVarGetX("surgeProj"+zdatapointer+"pos") > trVectorQuestVarGetX("minBound") &&
      trVectorQuestVarGetZ("surgeProj"+zdatapointer+"pos") > trVectorQuestVarGetZ("minBound")) == false) {
      trUnitMoveToPoint(trVectorQuestVarGetX("surgeProj"+zdatapointer+"pos"),trVectorQuestVarGetY("surgeProj"+zdatapointer+"pos"),trVectorQuestVarGetZ("surgeProj"+zdatapointer+"pos"), -1, false);
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdatalitesurgeProjcount") - 1;
      zdataremove = trQuestVarGet("zdatalitesurgeProjpointer");
      trQuestVarSet("zdatalitesurgeProjindex"+zdataremove, trQuestVarGet("zdatalitesurgeProjindex"+zdatacount));
      trQuestVarSet("zdatalitesurgeProjcount", zdatacount);
      if (trQuestVarGet("zdatalitesurgeProjpointer") >= trQuestVarGet("zdatalitesurgeProjcount")) {
      trQuestVarSet("zdatalitesurgeProjpointer", trQuestVarGet("zdatalitesurgeProjcount")-1);
      }
      trVectorQuestVarSet("surgeProj"+zdatapointer+"pos", trVectorQuestVarGet("surgeProj"+zdatacount+"pos"));
      trVectorQuestVarSet("surgeProj"+zdatapointer+"move1", trVectorQuestVarGet("surgeProj"+zdatacount+"move1"));
      trVectorQuestVarSet("surgeProj"+zdatapointer+"move2", trVectorQuestVarGet("surgeProj"+zdatacount+"move2"));
      trQuestVarCopy("surgeProj"+zdatapointer+"vary", "surgeProj"+zdatacount+"vary");
      /**/ } else {
      if (trUnitDistanceToPoint(trVectorQuestVarGetX("surgeProj"+zdatapointer+"pos"),trVectorQuestVarGetY("surgeProj"+zdatapointer+"pos"),trVectorQuestVarGetZ("surgeProj"+zdatapointer+"pos")) <= 1.0){
      trQuestVarSet("surgeProj"+zdatapointer+"vary", trQuestVarGet("surgeProj"+zdatapointer+"vary") + 1);
      if(trQuestVarGet("surgeProj"+zdatapointer+"vary") >= 3){
      trQuestVarSet("surgeProj"+zdatapointer+"vary", 1);
      }
      /**/ int v = trQuestVarGet("surgeProj"+zdatapointer+"vary");
      trVectorQuestVarSet("surgeProj"+zdatapointer+"pos", trVectorQuestVarGet("surgeProj"+zdatapointer+"pos") + trVectorQuestVarGet("surgeProj"+zdatapointer+"move"+v+""));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("surgeProj"+zdatapointer+"pos");b = trVectorQuestVarGetY("surgeProj"+zdatapointer+"pos");c = trVectorQuestVarGetZ("surgeProj"+zdatapointer+"pos");
      trVectorQuestVarSet("surgeProj"+zdatapointer+"pos",xsVectorSet(a,b,c));}
      trUnitMoveToPoint(trVectorQuestVarGetX("surgeProj"+zdatapointer+"pos"),trVectorQuestVarGetY("surgeProj"+zdatapointer+"pos"),trVectorQuestVarGetZ("surgeProj"+zdatapointer+"pos"), -1, false);
      }
      }
      }
      trEventFire(191);
      }
      xsDisableRule("_electrosurge_06_m1");
      trEcho("Trigger disabling rule electrosurge_06_m1");
   }
}

rule _electrosurge_06_m2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("electrosurge") == 1){
      trEventFire(184);
      }
      xsDisableRule("_electrosurge_06_m2");
      trEcho("Trigger disabling rule electrosurge_06_m2");
   }
}

rule _electrosurge_07_end
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("yeebspell", 0);
      trQuestVarSet("electrosurge", 0);
      trEventFire(147);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitearkantosSFXcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitearkantosSFXcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitearkantosSFXpointer", trQuestVarGet("zdatalitearkantosSFXpointer")-1);
      if (0 > trQuestVarGet("zdatalitearkantosSFXpointer")) {
      trQuestVarSet("zdatalitearkantosSFXpointer", trQuestVarGet("zdatalitearkantosSFXcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitearkantosSFXpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitearkantosSFXindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitearkantosSFXcount") - 1;
      zdataremove = trQuestVarGet("zdatalitearkantosSFXpointer");
      trQuestVarSet("zdatalitearkantosSFXindex"+zdataremove, trQuestVarGet("zdatalitearkantosSFXindex"+zdatacount));
      trQuestVarSet("zdatalitearkantosSFXcount", zdatacount);
      trQuestVarSet("zdatalitearkantosSFXpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("arkantosSFX", trQuestVarGet("zdatalitearkantosSFXindex"+zdatapointer));
      UnitID = trQuestVarGet("arkantosSFX");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitChangeProtoUnit("Victory Marker");
      }
      trQuestVarSet("zdatalitearkantosSFXcount", 0);
      trQuestVarSet("zdatalitearkantosSFXpointer", 0);
      trQuestVarSet("arkantosSFX", 0);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 4, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+4+"p"+zsps+"f1f"));
      trQuestVarSet("p"+4+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 5, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+5+"p"+zsps+"f1f"));
      trQuestVarSet("p"+5+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      for(bb=256; >0) {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projpointer")+1);
      if (trQuestVarGet("p5projpointer") > trQuestVarGet("p5projend")) {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projstart"));
      }
      trQuestVarSet("p5proj", trQuestVarGet("p5projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p5proj"));
      trUnitTeleport(2.89, 0.00, 3.08);
      }
      for(bb=256; >0) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p4proj"));
      trUnitTeleport(2.89, 0.00, 3.08);
      }
      xsDisableRule("_electrosurge_07_end");
      trEcho("Trigger disabling rule electrosurge_07_end");
   }
}

rule _Stage_B_41
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      xsDisableRule("_yeeb_music1");
      xsDisableRule("_yeeb_music2");
      trFadeOutMusic(3.0);
      trSoundPlayFN("default", "1", -1, "Yeebaagooon: Well, this is awkward.","Zenophobia\SFA\Yeebaagooon");
      trEventFire(192);
      trQuestVarSet("boss", 0);
      trQuestVarSet("play", 0);
      trQuestVarSet("ceasefire", 0);
      trEventFire(-1);
      xsDisableRule("_Stage_B_41");
      trEcho("Trigger disabling rule Stage_B_41");
   }
}

rule _Stage_B_42
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Yeebaagooon: I've uh... run out of bullets...","Zenophobia\SFA\Yeebaagooon");
      trEventFire(193);
      xsDisableRule("_Stage_B_42");
      trEcho("Trigger disabling rule Stage_B_42");
   }
}

rule _Stage_B_44
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("vortexstart.wav", "3", -1, "Yeebaagooon: Cheery ho!","Zenophobia\SFA\Yeebaagooon");
      trEventFire(194);
      if(false) { trVectorQuestVarSet("bossmove", xsVectorSet(54.66, 0.00, 97.92));
      for(a=0; >1){}for(b=0; >1){}for(c=0; >1){} a = xsVectorGetX(trVectorQuestVarGet("bossmove"));b = xsVectorGetY(trVectorQuestVarGet("bossmove"));c = xsVectorGetZ(trVectorQuestVarGet("bossmove"));
      trVectorQuestVarSet("bossmove",xsVectorSet(a,b,c));}
      else {trVectorQuestVarSet("bossmove", xsVectorSet(54.66, 0.00, 97.92));}
      xsDisableRule("_Stage_B_44");
      trEcho("Trigger disabling rule Stage_B_44");
   }
}

rule _Stage_B_45
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Oliver: Hey! Get back here!","Zenophobia\SFA\Oliver");
      trEventFire(195);
      /**/ int k = kbGetProtoUnitID("Victory Marker");
      xsDisableRule("_Stage_B_45");
      trEcho("Trigger disabling rule Stage_B_45");
   }
}

rule _Stage_B_43
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Yeebaagooon: Well then, you two stay right here while I go get more bullets.","Zenophobia\SFA\Yeebaagooon");
      trEventFire(196);
      xsDisableRule("_Stage_B_43");
      trEcho("Trigger disabling rule Stage_B_43");
   }
}

rule _Stage_A_01_Start
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trUIFadeToColor(0,0,0,1000,0,false);
      trOverlayText("Stage 1: Capture Captain Crush", 3.0, 400, 150, 800);
      trBlockAllSounds(true);
      trQuestVarSet("stage", 1);
      trVectorQuestVarSet("bosspos", kbGetBlockPosition("5946"));
      trVectorQuestVarSet("bossmove", kbGetBlockPosition("5946"));
      trQuestVarSet("play", 1);
      trMusicPlay("Zenophobia\Rainbow Tylenol.mp3", "1", 0.0);
      trEventFire(197);
      /**/ trCameraCut(vector(50.0,130.0,50.0), vector(0.0,-1.000000,0.0), vector(0.0,0.0,1.0), vector(1.0,0.0,0.0));
      trStringQuestVarSet("bossHealthBar", "Stage 1: Capture Captain Crush");
      trSoundPlayFN("default", "1", -1, "Lives "+1*trQuestVarGet("lives")+" Bombs "+1*trQuestVarGet("bombs")+": "+trStringQuestVarGet("bossHealthBar")+"","");
      /* BACKDOOR */
      if(true) {
      trEventFire(198);
      /**/ } else {
      trEventFire(199);
      }
      trEventFire(200);
      trEventFire(201);
      /**/ projectileConvert(2, "Petosuchus Projectile", "Invisible Target", 0.3, 1, 3600);
      /**/ projectileConvert(5, "Outpost", "Victory Marker", 0.6, 0);
      /**/ projectileConvert(3, "Petosuchus Projectile", "Invisible Target", 0.3, 1, 3600);
      /**/ projectileConvert(1, "Catapult Shot", "Einheriar Boost SFX");
      /**/ projectileConvert(4, "Tower Mirror", "Victory Marker", 0.8, 0);
      /**/ 
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 6.0 + 2.0 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 6.0 + 2.0 * trGetWorldDifficulty());
      trQuestVarSet("clearName", trGetNextUnitScenarioNameNumber());
      xsDisableRule("_Stage_A_01_Start");
      trEcho("Trigger disabling rule Stage_A_01_Start");
   }
}

rule _Stage_A_music1
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 108);

   bool bVar1 = (trQuestVarGet("play") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("play") == 1){
      trMusicPlay("Zenophobia\Rainbow Tylenol.mp3", "223", 0.5);
      trEventFire(202);
      }
      xsDisableRule("_Stage_A_music1");
      trEcho("Trigger disabling rule Stage_A_music1");
   }
}

rule _Stage_A_music2
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 108);

   bool bVar1 = (trQuestVarGet("play") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("play") == 1){
      trMusicPlay("Zenophobia\Rainbow Tylenol.mp3", "223", 0.5);
      trEventFire(197);
      }
      xsDisableRule("_Stage_A_music2");
      trEcho("Trigger disabling rule Stage_A_music2");
   }
}

rule _Stage_A_02
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("minExitZ")));
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(2.0,0.0,0.0));
      trQuestVarSet("enemyRow1", 18);
      trEventFire(203);
      xsDisableRule("_Stage_A_02");
      trEcho("Trigger disabling rule Stage_A_02");
   }
}

rule _Stage_A_03
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 12);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(-2.0,0.0,0.0));
      trQuestVarSet("enemyRow1", 18);
      trEventFire(204);
      trVectorQuestVarSet("enemyKebenit1Start", xsVectorSet(trQuestVarGet("middlespawn"),0,trQuestVarGet("upperspawn")));
      trVectorQuestVarSet("enemyKebenit1End", xsVectorSet(trQuestVarGet("middlespawn"),0,trQuestVarGet("upperspawn") - 20));
      trQuestVarSet("enemyKebenit1", 1);
      xsDisableRule("_Stage_A_03");
      trEcho("Trigger disabling rule Stage_A_03");
   }
}

rule _Stage_A_04
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyLine1start", xsVectorSet(trQuestVarGet("maxExitx"),0,trQuestVarGet("maxExitz")));
      trVectorQuestVarSet("enemyLine1end", xsVectorSet(trQuestVarGet("minExitx"),0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyLine1", 10);
      trEventFire(205);
      xsDisableRule("_Stage_A_04");
      trEcho("Trigger disabling rule Stage_A_04");
   }
}

rule _Stage_A_05
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);

   bool bVar2 = (trQuestVarGet("enemyLine1") == 0);


   bool tempExp = (bVar0 && bVar1 && bVar2);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyLine1start", xsVectorSet(trQuestVarGet("minExitx"),0,trQuestVarGet("maxExitz")));
      trVectorQuestVarSet("enemyLine1end", xsVectorSet(trQuestVarGet("maxExitx"),0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyLine1", 10);
      trEventFire(206);
      xsDisableRule("_Stage_A_05");
      trEcho("Trigger disabling rule Stage_A_05");
   }
}

rule _Stage_A_06
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemyline1") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar2 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1 && bVar2);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("minExitZ")));
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(-2.0,0.0,0.0));
      trQuestVarSet("enemyRow1", 18);
      trEventFire(207);
      xsDisableRule("_Stage_A_06");
      trEcho("Trigger disabling rule Stage_A_06");
   }
}

rule _Stage_A_07
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 12);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(2.0,0.0,0.0));
      trQuestVarSet("enemyRow1", 18);
      trEventFire(208);
      trVectorQuestVarSet("enemyKebenit1Start", xsVectorSet(trQuestVarGet("middlespawn") + 5.0,0,trQuestVarGet("upperspawn")));
      trVectorQuestVarSet("enemyKebenit1End", xsVectorSet(trQuestVarGet("middlespawn") + 5.0,0,trQuestVarGet("upperspawn") - 20));
      trQuestVarSet("enemyKebenit1", 1);
      trVectorQuestVarSet("enemyKebenit2Start", xsVectorSet(trQuestVarGet("middlespawn") - 5.0,0,trQuestVarGet("upperspawn")));
      trVectorQuestVarSet("enemyKebenit2End", xsVectorSet(trQuestVarGet("middlespawn") - 5.0,0,trQuestVarGet("upperspawn") - 20));
      trQuestVarSet("enemyKebenit2", 1);
      xsDisableRule("_Stage_A_07");
      trEcho("Trigger disabling rule Stage_A_07");
   }
}

rule _Stage_A_08_midboss
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trEventFire(209);
      xsDisableRule("_Stage_A_08_midboss");
      trEcho("Trigger disabling rule Stage_A_08_midboss");
   }
}

rule _Stage_A_09_midboss_2
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("boss", 1);
      if(false) { trVectorQuestVarSet("bossmove", xsVectorSet(51.55, 0.00, 57.30));
      for(a=0; >1){}for(b=0; >1){}for(c=0; >1){} a = xsVectorGetX(trVectorQuestVarGet("bossmove"));b = xsVectorGetY(trVectorQuestVarGet("bossmove"));c = xsVectorGetZ(trVectorQuestVarGet("bossmove"));
      trVectorQuestVarSet("bossmove",xsVectorSet(a,b,c));}
      else {trVectorQuestVarSet("bossmove", xsVectorSet(51.55, 0.00, 57.30));}
      for(id=0;>1) {}
      for(count=0;>1) {}
      for(zdatacount=0;>1) {}
      id=kbGetBlockID("5946");
      count = count+1; trQuestVarSet("zenoLoop"+id+"unit"+count, 5946);
      for(add=count; >0){
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdatacount, trQuestVarGet("zenoLoop"+id+"unit"+add));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount+1);
      }
      trQuestVarSet("bossID", 5946);
      trQuestVarSet("bossHP", 30 + 10 * trGetWorldDifficulty());
      trStringQuestVarSet("bossName", "Captain Crush ");
      trEventFire(210);
      trSoundPlayFN("vortexstart.wav", "3", -1, "","");
      if(trGetWorldDifficulty() >= 2){
      trQuestVarSet("spells", 1);
      trEventFire(135);
      }
      xsDisableRule("_Stage_A_09_midboss_2");
      trEcho("Trigger disabling rule Stage_A_09_midboss_2");
   }
}

rule _stage_A_boss_m1
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(5946);
   bool bVar0 = (trUnitDistanceToPoint(trVectorQuestVarGetX("bossmove"),trVectorQuestVarGetY("bossmove"),trVectorQuestVarGetZ("bossmove")) > 1);

   trUnitSelectClear();
   trUnitSelectByID(5946);
   bool bVar1 = (trUnitDead()==true);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      trUnitSelectClear();
      trUnitSelectByID(5946);
      if(trUnitAlive()==true){
      if(trQuestVarGet("bouncingBoss") == 0){
      trEventFire(211);
      /**/ 
      trVectorQuestVarSet("bosspos", trVectorQuestVarGet("bosspos") - trVectorQuestVarGet("bossmove"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("bosspos");b = trVectorQuestVarGetY("bosspos");c = trVectorQuestVarGetZ("bosspos");
      trVectorQuestVarSet("bosspos",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("bosspos", xsVectorSet(trVectorQuestVarGetX("bosspos") * 0.95,trVectorQuestVarGetY("bosspos") * 0,trVectorQuestVarGetZ("bosspos") * 0.95));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("bosspos");b = trVectorQuestVarGetY("bosspos");c = trVectorQuestVarGetZ("bosspos");
      trVectorQuestVarSet("bosspos",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("bosspos", trVectorQuestVarGet("bosspos") + trVectorQuestVarGet("bossmove"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("bosspos");b = trVectorQuestVarGetY("bosspos");c = trVectorQuestVarGetZ("bosspos");
      trVectorQuestVarSet("bosspos",xsVectorSet(a,b,c));}
      trUnitSelectClear();
      trUnitSelectByID(5946);
      trUnitTeleport(trVectorQuestVarGetX("bosspos"),trVectorQuestVarGetY("bosspos"),trVectorQuestVarGetZ("bosspos"));
      trUnitSelectClear();
      trUnitSelectByID(5950);
      trUnitSelectByID(5947);
      trUnitSelectByID(5949);
      trUnitSelectByID(5948);
      trUnitTeleport(trVectorQuestVarGetX("bosspos"),trVectorQuestVarGetY("bosspos"),trVectorQuestVarGetZ("bosspos"));
      }
      }
      xsDisableRule("_stage_A_boss_m1");
      trEcho("Trigger disabling rule stage_A_boss_m1");
   }
}

rule _Stage_A_boss_m2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVstageabossm2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVstageabossm2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVstageabossm2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVstageabossm2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVstageabossm2timer_CompTime")) >= 10) {
   for(Accurate_Timer_QVstageabossm2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVstageabossm2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVstageabossm2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trUnitSelectClear();
      trUnitSelectByID(5946);
      if(trUnitAlive()==true){
      if(trQuestVarGet("bouncingBoss") == 0){
      trEventFire(200);
      }
      }
      xsDisableRule("_Stage_A_boss_m2");
      trEcho("Trigger disabling rule Stage_A_boss_m2");
   }
}

rule _crush_a0_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("crusha", 1);
      trQuestVarSet("sprayCount", 3 + trGetWorldDifficulty());
      trEventFire(212);
      trEventFire(213);
      xsDisableRule("_crush_a0_00_startup");
      trEcho("Trigger disabling rule crush_a0_00_startup");
   }
}

rule _crush_a0_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1000) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("crusha") == 1){
      trQuestVarSet("shootCount", 18 + 6 * trGetWorldDifficulty());
      trQuestVarSetFromRand("crushAngle", 0, 3.141592, false);
      trEventFire(214);
      trEventFire(215);
      trSoundPlayFN("catapultattack.wav", "1", -1, "","");
      }
      xsDisableRule("_crush_a0_01");
      trEcho("Trigger disabling rule crush_a0_01");
   }
}

rule _crush_a0_02_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= 100) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("crusha") == 1){
      trQuestVarSet("crushAngle", trQuestVarGet("crushAngle") + 2.43);
      while (trQuestVarGet("crushAngle") > (6.283185)) {
      trQuestVarSet("crushAngle", trQuestVarGet("crushAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("crushAngle")) {
      trQuestVarSet("crushAngle", trQuestVarGet("crushAngle") + 6.283185);
      }
      trQuestVarCopy("angle", "crushAngle");
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("bossposx"),1.5,trQuestVarGet("bossposz")));
      for(bb=trQuestVarGet("sprayCount"); >0) {
      trQuestVarSet("p2projxp3proj", trQuestVarGet("p2projxp3proj") + 1);
      if (trQuestVarGet("p2projxp3proj") > 1) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projpointer")+1);
      if (trQuestVarGet("p2projpointer") > trQuestVarGet("p2projend")) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projstart"));
      }
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trQuestVarSet("p2projxp3proj", 0);
      } else {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trQuestVarSet("p2proj", trQuestVarGet("p3projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p2proj"));
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep2projshootcount");
      trQuestVarSet("zdatalitep2projshootindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdatalitep2projshootcount", zdatacount+1);
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p2proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p2proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      /**/ trUnitSetHeading(57.295779 * trQuestVarGet("angle"));
      trQuestVarSet("angle", trQuestVarGet("angle") - 0.13);
      while (trQuestVarGet("angle") > (6.283185)) {
      trQuestVarSet("angle", trQuestVarGet("angle") - (6.283185));
      }
      while (0 > trQuestVarGet("angle")) {
      trQuestVarSet("angle", trQuestVarGet("angle") + 6.283185);
      }
      }
      trEventFire(216);
      trSoundPlayFN("titanfall.wav", "1", -1, "","");
      }
      xsDisableRule("_crush_a0_02_s1");
      trEcho("Trigger disabling rule crush_a0_02_s1");
   }
}

rule _crush_a0_02_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("crusha") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep2projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep2projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep2projshootpointer", trQuestVarGet("zdatalitep2projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep2projshootpointer")) {
      trQuestVarSet("zdatalitep2projshootpointer", trQuestVarGet("zdatalitep2projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep2projshootpointer");
      trQuestVarSet("p2projshoot", trQuestVarGet("zdatalitep2projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p2projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p2proj"+zdatapointer+"target"),trVectorQuestVarGetY("p2proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p2proj"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep2projshootcount", 0);
      trQuestVarSet("zdatalitep2projshootpointer", 0);
      trQuestVarSet("p2projshoot", 0);
      trQuestVarSet("shootCount", trQuestVarGet("shootCount") - 1);
      if(trQuestVarGet("shootCount") >= 1){
      trEventFire(214);
      }
      }
      xsDisableRule("_crush_a0_02_s2");
      trEcho("Trigger disabling rule crush_a0_02_s2");
   }
}

rule _crush_a0_03
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("shootCount") == 0);

   bool bVar1 = (trQuestVarGet("crusha") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("crusha") == 1){
      trEventFire(217);
      }
      xsDisableRule("_crush_a0_03");
      trEcho("Trigger disabling rule crush_a0_03");
   }
}

rule _crush_move
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSetFromRand("xpos", 12.0 + trVectorQuestVarGetX("minBound"), trVectorQuestVarGetX("maxBound") - 12.0, false);
      trQuestVarSetFromRand("zpos", trVectorQuestVarGetZ("maxBound") - 12.0, trVectorQuestVarGetZ("maxBound") - 6.0, false);
      /**/ trVectorQuestVarSet("bossMove", xsVectorSet(trQuestVarGet("xpos"), 0, trQuestVarGet("zpos")));
      xsDisableRule("_crush_move");
      trEcho("Trigger disabling rule crush_move");
   }
}

rule _crush_a0_04
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1000) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("crusha") == 1){
      trEventFire(218);
      trEventFire(212);
      }
      xsDisableRule("_crush_a0_04");
      trEcho("Trigger disabling rule crush_a0_04");
   }
}

rule _meteor_00_start
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("crushSpell", 1);
      trOverlayText("Crushing Meteor", 3.0, 572, 360, 800);
      trQuestVarSet("meteor", 1);
      trStringQuestVarSet("bossName", "Crushing Meteor ");
      trEventFire(219);
      trQuestVarSet("stepSize", 2.0 - 0.4 * trGetWorldDifficulty());
      trQuestVarSet("waveCount", 12 + 4 * trGetWorldDifficulty());
      trQuestVarSet("waveAngleMod", 3.141592 / (trQuestVarGet("waveCount") + 1));
      trQuestVarSet("bossHP", 30 + 5 * trGetWorldDifficulty());
      trEventFire(220);
      trEventFire(26);
      xsDisableRule("_meteor_00_start");
      trEcho("Trigger disabling rule meteor_00_start");
   }
}

rule _crush_a0_05_end
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(5946);
   bool bVar0 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));

   bool bVar1 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("crusha", 0);
      if(trGetWorldDifficulty() >= 2){
      trEventFire(221);
      /**/ } else {
      trEventFire(222);
      trEventFire(17);
      }
      xsDisableRule("_crush_a0_05_end");
      trEcho("Trigger disabling rule crush_a0_05_end");
   }
}

rule _Stage_A_10_leave
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVhavocleave01timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVhavocleave01timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVhavocleave01timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVhavocleave01timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVhavocleave01timer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVhavocleave01timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVhavocleave01timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVhavocleave01timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("boss", 0);
      if(false) { trVectorQuestVarSet("bossmove", xsVectorSet(27.040001, 6.280000, 95.680000));
      for(a=0; >1){}for(b=0; >1){}for(c=0; >1){} a = xsVectorGetX(trVectorQuestVarGet("bossmove"));b = xsVectorGetY(trVectorQuestVarGet("bossmove"));c = xsVectorGetZ(trVectorQuestVarGet("bossmove"));
      trVectorQuestVarSet("bossmove",xsVectorSet(a,b,c));}
      else {trVectorQuestVarSet("bossmove", xsVectorSet(27.040001, 6.280000, 95.680000));}
      trUnitSelectClear();
      trUnitSelectByID(5946);
      trDamageUnitPercent(-100);
      trStringQuestVarSet("bossHealthBar", "Stage 1: Capture Captain Crush ");
      trSoundPlayFN("default", "1", -1, "Lives "+1*trQuestVarGet("lives")+" Bombs "+1*trQuestVarGet("bombs")+": "+trStringQuestVarGet("bossHealthBar")+"","");
      trEventFire(223);
      trSoundPlayFN("vortexstart.wav", "3", -1, "","");
      trQuestVarSet("zdataliteenemiescount", 0);
      trQuestVarSet("zdataliteenemiespointer", 0);
      trQuestVarSet("enemies", 0);
      xsDisableRule("_Stage_A_10_leave");
      trEcho("Trigger disabling rule Stage_A_10_leave");
   }
}

rule _crush_spell_01_s1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("crushspell") == 1){
      /**/ if (trGetTerrainCombinedType(trQuestVarGet("maxTerrainx"), trQuestVarGet("maxTerrainz")) == trQuestVarGet("blackval") ||
      /**/ trGetTerrainCombinedType(trQuestVarGet("maxTerrainx"), trQuestVarGet("minTerrainz")) == trQuestVarGet("blackval") ||
      /**/ trGetTerrainCombinedType(trQuestVarGet("minTerrainx"), trQuestVarGet("maxTerrainz")) == trQuestVarGet("blackval") ||
      /**/ trGetTerrainCombinedType(trQuestVarGet("minTerrainx"), trQuestVarGet("minTerrainz")) == trQuestVarGet("blackval")) {
      /**/ 
      /**/ 
      trQuestVarSet("rockxval", trQuestVarGet("rockxval") + 1);
      trQuestVarSet("radius", trQuestVarGet("rockxval") * trQuestVarGet("rockxval"));
      /**/ for(z=0; <= trQuestVarGet("rockxval") + 1) {
      /**/ for(x=trQuestVarGet("rockxval") + 1; >=0) {
      /**/ if (x*x + z*z <= trQuestVarGet("radius")) {
      for(tempX0 = 0; > 1){}
      for(tempZ0 = 0; > 1){}
      for(tempX1 = 0; > 1){}
      for(tempZ1 = 0; > 1){}
      tempX0 = xsMin(xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("rockCenterx") - x), xsMin(trQuestVarGet("maxTerrainx"), trQuestVarGet("rockCenterx") + x));
      tempZ0 = xsMin(xsMax(trQuestVarGet("minTerrainz"), trQuestVarGet("rockCenterz") - z), xsMin(trQuestVarGet("maxTerrainz"), trQuestVarGet("rockCenterz") + z));
      tempX1 = xsMax(xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("rockCenterx") - x), xsMin(trQuestVarGet("maxTerrainx"), trQuestVarGet("rockCenterx") + x));
      tempZ1 = xsMax(xsMax(trQuestVarGet("minTerrainz"), trQuestVarGet("rockCenterz") - z), xsMin(trQuestVarGet("maxTerrainz"), trQuestVarGet("rockCenterz") + z));
      trPaintTerrain(tempX0, tempZ0, tempX1, tempZ1, trQuestVarGet("coral1type"), trQuestVarGet("coral1subtype"), false);
      /**/ break; }}}
      trEventFire(224);
      /**/ } else {
      trEventFire(225);
      }
      }
      xsDisableRule("_crush_spell_01_s1");
      trEcho("Trigger disabling rule crush_spell_01_s1");
   }
}

rule _crush_spell_00_start
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("crushspell") == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("cinematics\15_in\gong.wav", "4", -1, "","");
      trSoundPlayFN("godpower.wav", "6", -1, "","");
      trEventFire(226);
      trVectorQuestVarSet("rockCenter", xsVectorSet(trQuestVarGet("bossposx") / 2,0,trQuestVarGet("bossposz") / 2));
      trQuestVarSet("rockxval", 1);
      sunColor(60,30,0);
      ambientColor(40,40,40);
      trUnitSelectClear();
      trUnitSelectByID(5946);
      trDamageUnitPercent(-100);
      trEventFire(17);
      xsDisableRule("_crush_spell_00_start");
      trEcho("Trigger disabling rule crush_spell_00_start");
   }
}

rule _crush_spell_01_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVspellstimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVspellstimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVspellstimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVspellstimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVspellstimer_CompTime")) >= 25) {
   for(Accurate_Timer_QVspellstimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVspellstimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVspellstimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("crushspell") == 1){
      trEventFire(226);
      }
      xsDisableRule("_crush_spell_01_s2");
      trEcho("Trigger disabling rule crush_spell_01_s2");
   }
}

rule _crush_spell_02_end
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("crushspell") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      for(tempX0 = 0; > 1){}
      for(tempZ0 = 0; > 1){}
      for(tempX1 = 0; > 1){}
      for(tempZ1 = 0; > 1){}
      tempX0 = xsMin(trQuestVarGet("minTerrainx"), trQuestVarGet("maxTerrainx"));
      tempZ0 = xsMin(trQuestVarGet("minTerrainz"), trQuestVarGet("maxTerrainz"));
      tempX1 = xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("maxTerrainx"));
      tempZ1 = xsMax(trQuestVarGet("minTerrainz"), trQuestVarGet("maxTerrainz"));
      trPaintTerrain(tempX0, tempZ0, tempX1, tempZ1, trQuestVarGet("blacktype"), trQuestVarGet("blacksubtype"), false);
      trEventFire(17);
      trSoundPlayFN("godpowerfailed.wav", "2", -1, "","");
      trSetLighting("default",0.0);
      trUnitSelectClear();
      trUnitSelectByID(5946);
      trDamageUnitPercent(-100);
      trEventFire(201);
      trEventFire(151);
      trQuestVarSet("spells", trQuestVarGet("spells") - 1);
      trStringQuestVarSet("bossName", "Captain Crush ");
      trQuestVarSet("bossHP", 0);
      xsDisableRule("_crush_spell_02_end");
      trEcho("Trigger disabling rule crush_spell_02_end");
   }
}

rule _meteor_01_move
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 500) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("meteor") == 1){
      trVectorQuestVarSet("bossmove", xsVectorSet(trQuestVarGet("playerposx"),0,trQuestVarGet("maxExitz") - 10));
      trSoundPlayFN("suckup1.wav", "1", -1, "","");
      trEventFire(227);
      }
      xsDisableRule("_meteor_01_move");
      trEcho("Trigger disabling rule meteor_01_move");
   }
}

rule _meteor_02_drop
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 2000) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("meteor") == 1){
      trVectorQuestVarSet("bossmove", kbGetBlockPosition("5946"));
      trSoundPlayFN("attackwarning.wav", "2", -1, "","");
      trQuestVarSet("meteorStep", 1.0);
      trQuestVarSet("meteorfall", 1);
      trEventFire(228);
      trEventFire(229);
      trEventFire(230);
      }
      xsDisableRule("_meteor_02_drop");
      trEcho("Trigger disabling rule meteor_02_drop");
   }
}

rule _meteor_03_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("meteor") == 1){
      if(trQuestVarGet("meteorfall") == 1){
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossposz")));
      for(bb=1; >0) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p1proj"));
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      trQuestVarCopy("p3projshoot", "p1proj");
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p1proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      trEventFire(231);
      }
      }
      xsDisableRule("_meteor_03_s1");
      trEcho("Trigger disabling rule meteor_03_s1");
   }
}

rule _meteor_03_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("meteor") == 1){
      /**/ trUnitSelectClear(); trUnitSelectByID(1*trQuestVarGet("p3projshoot"));
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("meteorAngle")) * 1.0, 0, Math_cos(trQuestVarGet("meteorAngle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      trEventFire(228);
      trQuestVarSet("meteorAngle", trQuestVarGet("meteorAngle") + 2.43);
      while (trQuestVarGet("meteorAngle") > (6.283185)) {
      trQuestVarSet("meteorAngle", trQuestVarGet("meteorAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("meteorAngle")) {
      trQuestVarSet("meteorAngle", trQuestVarGet("meteorAngle") + 6.283185);
      }
      }
      xsDisableRule("_meteor_03_s2");
      trEcho("Trigger disabling rule meteor_03_s2");
   }
}

rule _meteor_04_m1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVmeteormovetimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVmeteormovetimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVmeteormovetimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVmeteormovetimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVmeteormovetimer_CompTime")) >= 10) {
   for(Accurate_Timer_QVmeteormovetimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVmeteormovetimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVmeteormovetimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("meteor") == 1){
      if(trQuestVarGet("meteorfall") == 1){
      trVectorQuestVarSet("bossmove", xsVectorSet(trQuestVarGet("bossposx"),0,trQuestVarGet("bossposz") - trQuestVarGet("meteorStep")));
      trQuestVarSet("meteorStep", trQuestVarGet("meteorStep") + 0.15);
      trEventFire(232);
      }
      }
      xsDisableRule("_meteor_04_m1");
      trEcho("Trigger disabling rule meteor_04_m1");
   }
}

rule _meteor_04_m2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("meteor") == 1){
      if(trQuestVarGet("meteorfall") == 1){
      trEventFire(229);
      }
      }
      xsDisableRule("_meteor_04_m2");
      trEcho("Trigger disabling rule meteor_04_m2");
   }
}

rule _meteor_05
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("meteor") == 0);

   bool bVar1 = (trQuestVarGet("bossposz") <= trQuestVarGet("minBoundz") + 10.0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("meteor") == 1){
      trVectorQuestVarSet("bosspos", kbGetBlockPosition("5946"));
      trQuestVarSet("meteorfall", 0);
      trSoundPlayFN("meteorbighit.wav", "5", -1, "","");
      trEventFire(219);
      }
      xsDisableRule("_meteor_05");
      trEcho("Trigger disabling rule meteor_05");
   }
}

rule _meteor_06_end
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(5946);
   bool bVar0 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));

   bool bVar1 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("meteor", 0);
      trQuestVarSet("crushspell", 0);
      trEventFire(222);
      xsDisableRule("_meteor_06_end");
      trEcho("Trigger disabling rule meteor_06_end");
   }
}

rule _Stage_A_11
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(233);
      trVectorQuestVarSet("enemyKebenit1Start", xsVectorSet(trQuestVarGet("middlespawn") + 10.0,0,trQuestVarGet("upperspawn")));
      trVectorQuestVarSet("enemyKebenit1End", xsVectorSet(trQuestVarGet("middlespawn") + 10.0,0,trQuestVarGet("upperspawn") - 20));
      trQuestVarSet("enemyKebenit1", 1);
      trVectorQuestVarSet("enemyKebenit2Start", xsVectorSet(trQuestVarGet("middlespawn") - 10.0,0,trQuestVarGet("upperspawn")));
      trVectorQuestVarSet("enemyKebenit2End", xsVectorSet(trQuestVarGet("middlespawn") - 10.0,0,trQuestVarGet("upperspawn") - 20));
      trQuestVarSet("enemyKebenit2", 1);
      xsDisableRule("_Stage_A_11");
      trEcho("Trigger disabling rule Stage_A_11");
   }
}

rule _Stage_A_12
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("minExitZ")));
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(2.0,0.0,0.0));
      trQuestVarSet("enemyRow1", 18);
      trEventFire(234);
      xsDisableRule("_Stage_A_12");
      trEcho("Trigger disabling rule Stage_A_12");
   }
}

rule _Stage_A_13
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 12);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(-2.0,0.0,0.0));
      trQuestVarSet("enemyRow1", 18);
      trEventFire(235);
      trVectorQuestVarSet("enemyKebenit1Start", xsVectorSet(trQuestVarGet("middlespawn") + 5,0,trQuestVarGet("upperspawn")));
      trVectorQuestVarSet("enemyKebenit1End", xsVectorSet(trQuestVarGet("middlespawn") + 5,0,trQuestVarGet("upperspawn") - 20));
      trQuestVarSet("enemyKebenit1", 1);
      trVectorQuestVarSet("enemyKebenit2Start", xsVectorSet(trQuestVarGet("middlespawn") - 5,0,trQuestVarGet("upperspawn")));
      trVectorQuestVarSet("enemyKebenit2End", xsVectorSet(trQuestVarGet("middlespawn") - 5,0,trQuestVarGet("upperspawn") - 20));
      trQuestVarSet("enemyKebenit2", 1);
      xsDisableRule("_Stage_A_13");
      trEcho("Trigger disabling rule Stage_A_13");
   }
}

rule _Stage_A_14
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trEventFire(236);
      trVectorQuestVarSet("enemyKebenit1Start", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxEnterz") - 10));
      trQuestVarSet("enemyKebenit1", 2);
      trVectorQuestVarSet("enemyKebenit1End", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxEnterz") - 10));
      trVectorQuestVarSet("enemyKebenit2Start", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxEnterz") - 15));
      trVectorQuestVarSet("enemyKebenit2end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxEnterz") - 15));
      trQuestVarSet("enemyKebenit2", 2);
      xsDisableRule("_Stage_A_14");
      trEcho("Trigger disabling rule Stage_A_14");
   }
}

rule _Stage_A_15_lines
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyLine1start", xsVectorSet(trQuestVarGet("maxExitx"),0,trQuestVarGet("maxExitz")));
      trVectorQuestVarSet("enemyLine1end", xsVectorSet(trQuestVarGet("minExitx"),0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyLine1", 10);
      trEventFire(237);
      xsDisableRule("_Stage_A_15_lines");
      trEcho("Trigger disabling rule Stage_A_15_lines");
   }
}

rule _Stage_A_16
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);

   bool bVar2 = (trQuestVarGet("enemyLine1") == 0);


   bool tempExp = (bVar0 && bVar1 && bVar2);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyLine1start", xsVectorSet(trQuestVarGet("minExitx"),0,trQuestVarGet("maxExitz")));
      trVectorQuestVarSet("enemyLine1end", xsVectorSet(trQuestVarGet("maxExitx"),0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyLine1", 10);
      trEventFire(238);
      xsDisableRule("_Stage_A_16");
      trEcho("Trigger disabling rule Stage_A_16");
   }
}

rule _Stage_A_17
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(2.0,0.0,0.0));
      trQuestVarSet("enemyRow1", 18);
      trEventFire(239);
      xsDisableRule("_Stage_A_17");
      trEcho("Trigger disabling rule Stage_A_17");
   }
}

rule _Stage_A_18
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 12);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(-2.0,0.0,0.0));
      trQuestVarSet("enemyRow1", 18);
      trEventFire(199);
      trVectorQuestVarSet("enemyKebenit1Start", xsVectorSet(trQuestVarGet("middlespawn") + 10,0,trQuestVarGet("upperspawn")));
      trVectorQuestVarSet("enemyKebenit1End", xsVectorSet(trQuestVarGet("middlespawn") + 10,0,trQuestVarGet("upperspawn") - 20));
      trQuestVarSet("enemyKebenit1", 1);
      trVectorQuestVarSet("enemyKebenit2Start", xsVectorSet(trQuestVarGet("middlespawn") - 10,0,trQuestVarGet("upperspawn")));
      trVectorQuestVarSet("enemyKebenit2End", xsVectorSet(trQuestVarGet("middlespawn") - 10,0,trQuestVarGet("upperspawn") - 20));
      trQuestVarSet("enemyKebenit2", 1);
      trVectorQuestVarSet("enemyKebenit3Start", xsVectorSet(trQuestVarGet("middlespawn"),0,trQuestVarGet("upperspawn")));
      trVectorQuestVarSet("enemyKebenit3End", xsVectorSet(trQuestVarGet("middlespawn"),0,trQuestVarGet("upperspawn") - 20));
      trQuestVarSet("enemyKebenit3", 1);
      xsDisableRule("_Stage_A_18");
      trEcho("Trigger disabling rule Stage_A_18");
   }
}

rule _Stage_A_19_stop
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trSoundPlayFN("vortexstart.wav", "3", -1, "","");
      trEventFire(17);
      trQuestVarSet("play", 0);
      if(false) { trVectorQuestVarSet("bossmove", xsVectorSet(51.540001, 0.000000, 57.459999));
      for(a=0; >1){}for(b=0; >1){}for(c=0; >1){} a = xsVectorGetX(trVectorQuestVarGet("bossmove"));b = xsVectorGetY(trVectorQuestVarGet("bossmove"));c = xsVectorGetZ(trVectorQuestVarGet("bossmove"));
      trVectorQuestVarSet("bossmove",xsVectorSet(a,b,c));}
      else {trVectorQuestVarSet("bossmove", xsVectorSet(51.540001, 0.000000, 57.459999));}
      trEventFire(240);
      trModifyProtounit("Petrobolos Shot", 2, 1, -1.999);
      for(id=0;>1) {}
      for(count=0;>1) {}
      for(zdatacount=0;>1) {}
      id=kbGetBlockID("5946");
      count = count+1; trQuestVarSet("zenoLoop"+id+"unit"+count, 5946);
      for(add=count; >0){
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdatacount, trQuestVarGet("zenoLoop"+id+"unit"+add));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount+1);
      }
      trQuestVarSet("movement", 1);
      xsDisableRule("_Stage_A_music1");
      xsDisableRule("_Stage_A_music2");
      trFadeOutMusic(3.0);
      xsDisableRule("_Stage_A_19_stop");
      trEcho("Trigger disabling rule Stage_A_19_stop");
   }
}

rule _Stage_A_20_hi
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Captain Crush: Dammit, stop chasing me!","Zenophobia\SFA\Crush");
      trEventFire(241);
      trEventFire(-1);
      xsDisableRule("_Stage_A_20_hi");
      trEcho("Trigger disabling rule Stage_A_20_hi");
   }
}

rule _Stage_A_21
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("pilot") == 1){
      trSoundPlayFN("default", "1", -1, "Oliver: No way! You're going down!","Zenophobia\SFA\Oliver");
      /**/ } else {
      trSoundPlayFN("default", "1", -1, "Ace: Sorry buddy, but you've got a bounty on your head.","Zenophobia\SFA\Ace");
      }
      trEventFire(242);
      for(UnitID=0; >1) {}
      for(type=0; >1) {}
      for(ySearchTarget = 0; > 1){}
      ySearchTarget = trGetNextUnitScenarioNameNumber();
      while(ySearchTarget > trQuestVarGet("clearName")){
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("clearName"));
      if (kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("clearName"))) != -1){
      UnitID = kbGetBlockID(""+1*trQuestVarGet("clearName"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitDestroy();
      }
      trQuestVarSet("clearName", trQuestVarGet("clearName")+1);}
      xsDisableRule("_Stage_A_21");
      trEcho("Trigger disabling rule Stage_A_21");
   }
}

rule _Stage_A_22
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Captain Crush: Just try me! I'll crush you into a pancake!","Zenophobia\SFA\Crush");
      trEventFire(243);
      xsDisableRule("_Stage_A_22");
      trEcho("Trigger disabling rule Stage_A_22");
   }
}

rule _Stage_A_23_start_boss
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("boss", 1);
      trQuestVarSet("bossHP", 30 + 10 * trGetWorldDifficulty());
      trStringQuestVarSet("bossName", "Captain Crush ");
      trMusicPlay("Zenophobia\Crimson Bloom.mp3", "258", 0.0);
      trEventFire(244);
      trQuestVarSet("play", 1);
      trQuestVarSet("bossID", 5946);
      trQuestVarSet("spells", 3);
      trEventFire(135);
      /* BACKDOOR */
      if(true) {
      trEventFire(245);
      /**/ } else {
      trEventFire(246);
      }
      xsDisableRule("_Stage_A_23_start_boss");
      trEcho("Trigger disabling rule Stage_A_23_start_boss");
   }
}

rule _crush_music1
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 240);

   bool bVar1 = (trQuestVarGet("boss") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boss") == 1){
      trMusicPlay("Zenophobia\Crimson Bloom.mp3", "258", 0.5);
      trEventFire(247);
      }
      xsDisableRule("_crush_music1");
      trEcho("Trigger disabling rule crush_music1");
   }
}

rule _crush_music2
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 240);

   bool bVar1 = (trQuestVarGet("boss") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boss") == 1){
      trMusicPlay("Zenophobia\Crimson Bloom.mp3", "258", 0.5);
      trEventFire(244);
      }
      xsDisableRule("_crush_music2");
      trEcho("Trigger disabling rule crush_music2");
   }
}

rule _crush_a1_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("crusha", 1);
      trQuestVarSet("sprayCount", 5 + trGetWorldDifficulty());
      trEventFire(212);
      trEventFire(248);
      trUnitSelectClear();
      trUnitSelectByID(5946);
      trDamageUnitPercent(-100);
      xsDisableRule("_crush_a1_00_startup");
      trEcho("Trigger disabling rule crush_a1_00_startup");
   }
}

rule _crush_a1_05_end
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(5946);
   bool bVar0 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));

   bool bVar1 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("crusha", 0);
      trEventFire(249);
      xsDisableRule("_crush_a1_05_end");
      trEcho("Trigger disabling rule crush_a1_05_end");
   }
}

rule _bbullets_00_start
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("crushSpell", 1);
      trOverlayText("Bouncing Bullets", 3.0, 570, 360, 800);
      trQuestVarSet("bouncing", 1);
      trStringQuestVarSet("bossName", "Bouncing Bullets ");
      trQuestVarSet("bossHP", 30 + 10 * trGetWorldDifficulty());
      trEventFire(250);
      trQuestVarSet("sprayCount", 3 + trGetWorldDifficulty());
      trEventFire(251);
      trEventFire(252);
      xsDisableRule("_bbullets_00_start");
      trEcho("Trigger disabling rule bbullets_00_start");
   }
}

rule _bbullets_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bouncing") == 1){
      trQuestVarSet("shootCount", 9 + 3 * trGetWorldDifficulty());
      trQuestVarSetFromRand("crushAngle", 0, 3.141592, false);
      trEventFire(253);
      trEventFire(254);
      trSoundPlayFN("catapultattack.wav", "1", -1, "","");
      }
      xsDisableRule("_bbullets_01");
      trEcho("Trigger disabling rule bbullets_01");
   }
}

rule _bbullets_02_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bouncing") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep2projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep2projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep2projshootpointer", trQuestVarGet("zdatalitep2projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep2projshootpointer")) {
      trQuestVarSet("zdatalitep2projshootpointer", trQuestVarGet("zdatalitep2projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep2projshootpointer");
      trQuestVarSet("p2projshoot", trQuestVarGet("zdatalitep2projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p2projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p2proj"+zdatapointer+"target"),trVectorQuestVarGetY("p2proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p2proj"+zdatapointer+"target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep2projbouncecount");
      trQuestVarSet("zdatalitep2projbounceindex"+zdatacount, trQuestVarGet("p2projshoot"));
      trQuestVarSet("zdatalitep2projbouncecount", zdatacount+1);
      trVectorQuestVarSet("p2projbounce"+zdatacount+"dir", trVectorQuestVarGet("p2proj"+zdatapointer+"dir"));
      }
      trQuestVarSet("zdatalitep2projshootcount", 0);
      trQuestVarSet("zdatalitep2projshootpointer", 0);
      trQuestVarSet("p2projshoot", 0);
      trQuestVarSet("shootCount", trQuestVarGet("shootCount") - 1);
      if(trQuestVarGet("shootCount") >= 1){
      trEventFire(253);
      }
      }
      xsDisableRule("_bbullets_02_s2");
      trEcho("Trigger disabling rule bbullets_02_s2");
   }
}

rule _bbullets_02_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= 100) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("bouncing") == 1){
      trQuestVarSet("crushAngle", trQuestVarGet("crushAngle") + 2.43);
      while (trQuestVarGet("crushAngle") > (6.283185)) {
      trQuestVarSet("crushAngle", trQuestVarGet("crushAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("crushAngle")) {
      trQuestVarSet("crushAngle", trQuestVarGet("crushAngle") + 6.283185);
      }
      trQuestVarCopy("angle", "crushAngle");
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("bossposx"),1.5,trQuestVarGet("bossposz")));
      for(bb=trQuestVarGet("sprayCount"); >0) {
      trQuestVarSet("p2projxp3proj", trQuestVarGet("p2projxp3proj") + 1);
      if (trQuestVarGet("p2projxp3proj") > 1) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projpointer")+1);
      if (trQuestVarGet("p2projpointer") > trQuestVarGet("p2projend")) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projstart"));
      }
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trQuestVarSet("p2projxp3proj", 0);
      } else {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trQuestVarSet("p2proj", trQuestVarGet("p3projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p2proj"));
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep2projshootcount");
      trQuestVarSet("zdatalitep2projshootindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdatalitep2projshootcount", zdatacount+1);
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p2proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p2proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      /**/ trUnitSetHeading(57.295779 * trQuestVarGet("angle"));
      trVectorQuestVarSet("p2proj"+zdatacount+"dir", trVectorQuestVarGet("dir"));
      trQuestVarSet("angle", trQuestVarGet("angle") - 0.13);
      while (trQuestVarGet("angle") > (6.283185)) {
      trQuestVarSet("angle", trQuestVarGet("angle") - (6.283185));
      }
      while (0 > trQuestVarGet("angle")) {
      trQuestVarSet("angle", trQuestVarGet("angle") + 6.283185);
      }
      }
      trEventFire(255);
      trSoundPlayFN("titanfall.wav", "1", -1, "","");
      }
      xsDisableRule("_bbullets_02_s1");
      trEcho("Trigger disabling rule bbullets_02_s1");
   }
}

rule _bbullets_03_m1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bouncing") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep2projbouncecount") > (10) && (10) > 0) {
      zdatasearch = 10;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep2projbouncecount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep2projbouncepointer", trQuestVarGet("zdatalitep2projbouncepointer")-1);
      if (0 > trQuestVarGet("zdatalitep2projbouncepointer")) {
      trQuestVarSet("zdatalitep2projbouncepointer", trQuestVarGet("zdatalitep2projbouncecount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep2projbouncepointer");
      trQuestVarSet("p2projbounce", trQuestVarGet("zdatalitep2projbounceindex"+zdatapointer));
      UnitID = trQuestVarGet("p2projbounce");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("p2projbounce")));
      if ((trVectorQuestVarGetX("maxBounce") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxBounce") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minBounce") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minBounce")) == false) {
      /**/ if (trQuestVarGet("V1z") >= trQuestVarGet("maxBouncez")) {
      /**/ trUnitSetHeading(180);
      trVectorQuestVarSet("dir", xsVectorSet(trQuestVarGet("p2projbounce"+zdatapointer+"dirx"),0.0,0.0 - trQuestVarGet("p2projbounce"+zdatapointer+"dirz")));
      /**/ } else if (trQuestVarGet("V1z") <= trQuestVarGet("minBouncez")) {
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("dir", xsVectorSet(trQuestVarGet("p2projbounce"+zdatapointer+"dirx"),0.0,0.0 - trQuestVarGet("p2projbounce"+zdatapointer+"dirz")));
      /**/ trUnitSetHeading(0);
      /**/ } else {
      trVectorQuestVarSet("dir", xsVectorSet(trQuestVarGet("p2projbounce"+zdatapointer+"dirx"),0.0,trQuestVarGet("p2projbounce"+zdatapointer+"dirz")));
      }
      /**/ } else if (trQuestVarGet("V1x") >= trQuestVarGet("maxBouncex")) {
      /**/ trUnitSetHeading(270);
      trVectorQuestVarSet("dir", xsVectorSet(0.0 - trQuestVarGet("p2projbounce"+zdatapointer+"dirx"),0.0,trQuestVarGet("p2projbounce"+zdatapointer+"dirz")));
      /**/ } else if (trQuestVarGet("V1x") <= trQuestVarGet("minBouncex")) {
      /**/ trUnitSetHeading(90);
      trVectorQuestVarSet("dir", xsVectorSet(0.0 - trQuestVarGet("p2projbounce"+zdatapointer+"dirx"),0.0,trQuestVarGet("p2projbounce"+zdatapointer+"dirz")));
      /**/ }
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep2projbouncecount") - 1;
      zdataremove = trQuestVarGet("zdatalitep2projbouncepointer");
      trQuestVarSet("zdatalitep2projbounceindex"+zdataremove, trQuestVarGet("zdatalitep2projbounceindex"+zdatacount));
      trQuestVarSet("zdatalitep2projbouncecount", zdatacount);
      if (trQuestVarGet("zdatalitep2projbouncepointer") >= trQuestVarGet("zdatalitep2projbouncecount")) {
      trQuestVarSet("zdatalitep2projbouncepointer", trQuestVarGet("zdatalitep2projbouncecount")-1);
      }
      trVectorQuestVarSet("p2projbounce"+zdatapointer+"dir", trVectorQuestVarGet("p2projbounce"+zdatacount+"dir"));
      }
      }
      trEventFire(256);
      }
      xsDisableRule("_bbullets_03_m1");
      trEcho("Trigger disabling rule bbullets_03_m1");
   }
}

rule _bbullets_03_m2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(251);
      xsDisableRule("_bbullets_03_m2");
      trEcho("Trigger disabling rule bbullets_03_m2");
   }
}

rule _bbullets_04
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("shootCount") == 0);

   bool bVar1 = (trQuestVarGet("bouncing") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("bouncing") == 1){
      trEventFire(257);
      }
      xsDisableRule("_bbullets_04");
      trEcho("Trigger disabling rule bbullets_04");
   }
}

rule _bbullets_05
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bouncing") == 1){
      trEventFire(218);
      trEventFire(250);
      }
      xsDisableRule("_bbullets_05");
      trEcho("Trigger disabling rule bbullets_05");
   }
}

rule _bbullets_06_end
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(5946);
   bool bVar0 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));

   bool bVar1 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("bouncing", 0);
      trQuestVarSet("crushspell", 0);
      trEventFire(258);
      xsDisableRule("_bbullets_06_end");
      trEcho("Trigger disabling rule bbullets_06_end");
   }
}

rule _crush_a2_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("crusha", 1);
      trQuestVarSet("sprayCount", 3 + trGetWorldDifficulty());
      trEventFire(259);
      trEventFire(260);
      trQuestVarSet("bossHP", 30 + 10 * trGetWorldDifficulty());
      trUnitSelectClear();
      trUnitSelectByID(5946);
      trDamageUnitPercent(-100);
      xsDisableRule("_crush_a2_00_startup");
      trEcho("Trigger disabling rule crush_a2_00_startup");
   }
}

rule _crush_a2_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 500) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("crusha") == 1){
      trQuestVarSet("shootCount", 18 + 6 * trGetWorldDifficulty());
      trQuestVarSetFromRand("crushAngle", 0, 3.141592, false);
      trEventFire(261);
      trEventFire(262);
      trSoundPlayFN("catapultattack.wav", "1", -1, "","");
      }
      xsDisableRule("_crush_a2_01");
      trEcho("Trigger disabling rule crush_a2_01");
   }
}

rule _crush_a2_02_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= 100) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("crusha") == 1){
      trQuestVarSet("crushAngle", trQuestVarGet("crushAngle") + 2.43);
      while (trQuestVarGet("crushAngle") > (6.283185)) {
      trQuestVarSet("crushAngle", trQuestVarGet("crushAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("crushAngle")) {
      trQuestVarSet("crushAngle", trQuestVarGet("crushAngle") + 6.283185);
      }
      trQuestVarCopy("angle", "crushAngle");
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossposz")));
      for(bb=trQuestVarGet("sprayCount"); >0) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p4proj"));
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep2projshootcount");
      trQuestVarSet("zdatalitep2projshootindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdatalitep2projshootcount", zdatacount+1);
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p2proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p2proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      /**/ trUnitSetHeading(57.295779 * trQuestVarGet("angle"));
      trQuestVarSet("angle", trQuestVarGet("angle") - 0.13);
      while (trQuestVarGet("angle") > (6.283185)) {
      trQuestVarSet("angle", trQuestVarGet("angle") - (6.283185));
      }
      while (0 > trQuestVarGet("angle")) {
      trQuestVarSet("angle", trQuestVarGet("angle") + 6.283185);
      }
      }
      trEventFire(263);
      trSoundPlayFN("titanfall.wav", "1", -1, "","");
      }
      xsDisableRule("_crush_a2_02_s1");
      trEcho("Trigger disabling rule crush_a2_02_s1");
   }
}

rule _crush_a2_02_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("crusha") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep2projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep2projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep2projshootpointer", trQuestVarGet("zdatalitep2projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep2projshootpointer")) {
      trQuestVarSet("zdatalitep2projshootpointer", trQuestVarGet("zdatalitep2projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep2projshootpointer");
      trQuestVarSet("p2projshoot", trQuestVarGet("zdatalitep2projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p2projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p2proj"+zdatapointer+"target"),trVectorQuestVarGetY("p2proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p2proj"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep2projshootcount", 0);
      trQuestVarSet("zdatalitep2projshootpointer", 0);
      trQuestVarSet("p2projshoot", 0);
      trQuestVarSet("shootCount", trQuestVarGet("shootCount") - 1);
      if(trQuestVarGet("shootCount") >= 1){
      trEventFire(261);
      }
      }
      xsDisableRule("_crush_a2_02_s2");
      trEcho("Trigger disabling rule crush_a2_02_s2");
   }
}

rule _crush_a2_03
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("shootCount") == 0);

   bool bVar1 = (trQuestVarGet("crusha") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("crusha") == 1){
      trEventFire(264);
      }
      xsDisableRule("_crush_a2_03");
      trEcho("Trigger disabling rule crush_a2_03");
   }
}

rule _crush_a2_04
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("crusha") == 1){
      trEventFire(218);
      trEventFire(259);
      }
      xsDisableRule("_crush_a2_04");
      trEcho("Trigger disabling rule crush_a2_04");
   }
}

rule _crush_a2_05_end
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(5946);
   bool bVar0 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));

   bool bVar1 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("crusha", 0);
      trEventFire(265);
      xsDisableRule("_crush_a2_05_end");
      trEcho("Trigger disabling rule crush_a2_05_end");
   }
}

rule _bbombs_00_start
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("crushSpell", 1);
      trOverlayText("Bouncing Bombs", 3.0, 572, 360, 800);
      trQuestVarSet("bouncing", 1);
      trStringQuestVarSet("bossName", "Bouncing Bombs ");
      trQuestVarSet("bossHP", 30 + 10 * trGetWorldDifficulty());
      trQuestVarSet("sprayCount", 3 + trGetWorldDifficulty());
      trQuestVarSet("sprayAngle", 3.141592 / trQuestVarGet("sprayCount"));
      trQuestVarSet("sprayAngleMod", 3.283185 / trQuestVarGet("sprayCount"));
      trEventFire(266);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 4, 1, 6.0 + 2.0 * trGetWorldDifficulty() - trQuestVarGet("p"+4+"p"+zsps+"f1f"));
      trQuestVarSet("p"+4+"p"+zsps+"f1f", 6.0 + 2.0 * trGetWorldDifficulty());
      trQuestVarSet("waveCount", 5 + trGetWorldDifficulty());
      trQuestVarSet("waveAngleMod", 3.141592 / (1.0 + trQuestVarGet("waveCount")));
      trEventFire(267);
      trEventFire(268);
      trEventFire(269);
      xsDisableRule("_bbombs_00_start");
      trEcho("Trigger disabling rule bbombs_00_start");
   }
}

rule _bbombs_01_f1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("bouncing") == 1){
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossposz")));
      for(bb=trQuestVarGet("sprayCount"); >0) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p4proj"));
      trUnitTeleport(trVectorQuestVarGetX("shootstart"),trVectorQuestVarGetY("shootstart"),trVectorQuestVarGetZ("shootstart"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep7projshootcount");
      trQuestVarSet("zdatalitep7projshootindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdatalitep7projshootcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      trEventFire(270);
      trSoundPlayFN("catapultattack.wav", "1", -1, "","");
      }
      xsDisableRule("_bbombs_01_f1");
      trEcho("Trigger disabling rule bbombs_01_f1");
   }
}

rule _bbombs_01_f2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bouncing") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep7projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep7projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep7projshootpointer", trQuestVarGet("zdatalitep7projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep7projshootpointer")) {
      trQuestVarSet("zdatalitep7projshootpointer", trQuestVarGet("zdatalitep7projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep7projshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep7projshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep7projshootcount") - 1;
      zdataremove = trQuestVarGet("zdatalitep7projshootpointer");
      trQuestVarSet("zdatalitep7projshootindex"+zdataremove, trQuestVarGet("zdatalitep7projshootindex"+zdatacount));
      trQuestVarSet("zdatalitep7projshootcount", zdatacount);
      trQuestVarSet("zdatalitep7projshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p7projshoot", trQuestVarGet("zdatalitep7projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p7projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep7projbouncecount");
      trQuestVarSet("zdatalitep7projbounceindex"+zdatacount, trQuestVarGet("p7projshoot"));
      trQuestVarSet("zdatalitep7projbouncecount", zdatacount+1);
      trVectorQuestVarSet("p7projbounce"+zdatacount+"dir",xsVectorSet(Math_sin(trQuestVarGet("sprayAngle")) * 1.0, 0, Math_cos(trQuestVarGet("sprayAngle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("p7projbounce"+zdatacount+"dir") / trVectorQuestVarGetX("p7projbounce"+zdatacount+"dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("p7projbounce"+zdatacount+"dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("p7projbounce"+zdatacount+"dir") > -0.01 && trVectorQuestVarGetZ("p7projbounce"+zdatacount+"dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("p7projbounce"+zdatacount+"dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("p7projbounce"+zdatacount+"dir") > -0.01 && trVectorQuestVarGetX("p7projbounce"+zdatacount+"dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      trQuestVarSet("sprayAngle", trQuestVarGet("sprayAngle") + 2.0 * trQuestVarGet("sprayAngleMod"));
      while (trQuestVarGet("sprayAngle") > (6.283185)) {
      trQuestVarSet("sprayAngle", trQuestVarGet("sprayAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("sprayAngle")) {
      trQuestVarSet("sprayAngle", trQuestVarGet("sprayAngle") + 6.283185);
      }
      }
      trQuestVarSet("zdatalitep7projshootcount", 0);
      trQuestVarSet("zdatalitep7projshootpointer", 0);
      trQuestVarSet("p7projshoot", 0);
      trEventFire(271);
      }
      xsDisableRule("_bbombs_01_f2");
      trEcho("Trigger disabling rule bbombs_01_f2");
   }
}

rule _bbombs_02_cleared
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("bomb") == 1);

   bool bVar1 = (trQuestVarGet("bouncing") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      trQuestVarSet("zdatalitep7projbouncecount", 0);
      trQuestVarSet("zdatalitep7projbouncepointer", 0);
      trQuestVarSet("p7projbounce", 0);
      if(trQuestVarGet("bouncing") == 1){
      trEventFire(266);
      }
      xsDisableRule("_bbombs_02_cleared");
      trEcho("Trigger disabling rule bbombs_02_cleared");
   }
}

rule _bbombs_03_b1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bouncing") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep7projbouncecount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep7projbouncecount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep7projbouncepointer", trQuestVarGet("zdatalitep7projbouncepointer")-1);
      if (0 > trQuestVarGet("zdatalitep7projbouncepointer")) {
      trQuestVarSet("zdatalitep7projbouncepointer", trQuestVarGet("zdatalitep7projbouncecount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep7projbouncepointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep7projbounceindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep7projbouncecount") - 1;
      zdataremove = trQuestVarGet("zdatalitep7projbouncepointer");
      trQuestVarSet("zdatalitep7projbounceindex"+zdataremove, trQuestVarGet("zdatalitep7projbounceindex"+zdatacount));
      trQuestVarSet("zdatalitep7projbouncecount", zdatacount);
      trQuestVarSet("zdatalitep7projbouncepointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p7projbounce", trQuestVarGet("zdatalitep7projbounceindex"+zdatapointer));
      UnitID = trQuestVarGet("p7projbounce");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("p7projbounce"), true));
      trQuestVarSet("bounce", 0);
      /**/ if (trQuestVarGet("V1z") >= trQuestVarGet("maxBouncez") && trQuestVarGet("p7projbounce"+zdatapointer+"dirz") > 0) {
      trVectorQuestVarSet("p7projbounce"+zdatapointer+"dir", xsVectorSet(trQuestVarGet("p7projbounce"+zdatapointer+"dirx"),0,0.0 - trQuestVarGet("p7projbounce"+zdatapointer+"dirz")));
      trQuestVarSet("bounce", 1);
      trQuestVarSet("angle", 1.570796);
      /**/ } else if (trQuestVarGet("V1z") <= trQuestVarGet("minBouncez") && trQuestVarGet("p7projbounce"+zdatapointer+"dirz") < 0) {
      trVectorQuestVarSet("p7projbounce"+zdatapointer+"dir", xsVectorSet(trQuestVarGet("p7projbounce"+zdatapointer+"dirx"),0,0.0 - trQuestVarGet("p7projbounce"+zdatapointer+"dirz")));
      trQuestVarSet("bounce", 1);
      trQuestVarSet("angle", 4.712389);
      /**/ } else if (trQuestVarGet("V1x") >= trQuestVarGet("maxBouncex") && trQuestVarGet("p7projbounce"+zdatapointer+"dirx") > 0) {
      trVectorQuestVarSet("p7projbounce"+zdatapointer+"dir", xsVectorSet(0.0 - trQuestVarGet("p7projbounce"+zdatapointer+"dirx"),0,trQuestVarGet("p7projbounce"+zdatapointer+"dirz")));
      trQuestVarSet("bounce", 1);
      trQuestVarSet("angle", 3.141592);
      /**/ } else if (trQuestVarGet("V1x") <= trQuestVarGet("minBouncex") && trQuestVarGet("p7projbounce"+zdatapointer+"dirx") < 0) {
      trVectorQuestVarSet("p7projbounce"+zdatapointer+"dir", xsVectorSet(0.0 - trQuestVarGet("p7projbounce"+zdatapointer+"dirx"),0,trQuestVarGet("p7projbounce"+zdatapointer+"dirz")));
      trQuestVarSet("bounce", 1);
      trQuestVarSet("angle", 0.0);
      /**/ }
      if(trQuestVarGet("bounce") == 1){
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("p7projbounce"+zdatapointer+"dir") / trVectorQuestVarGetX("p7projbounce"+zdatapointer+"dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("p7projbounce"+zdatapointer+"dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("p7projbounce"+zdatapointer+"dir") > -0.01 && trVectorQuestVarGetZ("p7projbounce"+zdatapointer+"dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("p7projbounce"+zdatapointer+"dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("p7projbounce"+zdatapointer+"dir") > -0.01 && trVectorQuestVarGetX("p7projbounce"+zdatapointer+"dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      for(bb=trQuestVarGet("waveCount"); >0) {
      trQuestVarSet("p2projxp3proj", trQuestVarGet("p2projxp3proj") + 1);
      if (trQuestVarGet("p2projxp3proj") > 1) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projpointer")+1);
      if (trQuestVarGet("p2projpointer") > trQuestVarGet("p2projend")) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projstart"));
      }
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trQuestVarSet("p2projxp3proj", 0);
      } else {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trQuestVarSet("p2proj", trQuestVarGet("p3projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p2proj"));
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      trQuestVarSet("angle", trQuestVarGet("angle") + trQuestVarGet("waveAngleMod"));
      while (trQuestVarGet("angle") > (6.283185)) {
      trQuestVarSet("angle", trQuestVarGet("angle") - (6.283185));
      }
      while (0 > trQuestVarGet("angle")) {
      trQuestVarSet("angle", trQuestVarGet("angle") + 6.283185);
      }
      /**/ trUnitSetHeading(57.295779 * trQuestVarGet("angle"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep2projshootcount");
      trQuestVarSet("zdatalitep2projshootindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdatalitep2projshootcount", zdatacount+1);
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p2proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p2proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      trSoundPlayFN("implode start.wav", "3", -1, "","");
      trSoundPlayFN("titanfall.wav", "1", -1, "","");
      }
      }
      trEventFire(272);
      }
      xsDisableRule("_bbombs_03_b1");
      trEcho("Trigger disabling rule bbombs_03_b1");
   }
}

rule _bbombs_03_b2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bouncing") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep2projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep2projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep2projshootpointer", trQuestVarGet("zdatalitep2projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep2projshootpointer")) {
      trQuestVarSet("zdatalitep2projshootpointer", trQuestVarGet("zdatalitep2projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep2projshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep2projshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep2projshootcount") - 1;
      zdataremove = trQuestVarGet("zdatalitep2projshootpointer");
      trQuestVarSet("zdatalitep2projshootindex"+zdataremove, trQuestVarGet("zdatalitep2projshootindex"+zdatacount));
      trQuestVarSet("zdatalitep2projshootcount", zdatacount);
      trQuestVarSet("zdatalitep2projshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p2projshoot", trQuestVarGet("zdatalitep2projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p2projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p2proj"+zdatapointer+"target"),trVectorQuestVarGetY("p2proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p2proj"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep2projshootcount", 0);
      trQuestVarSet("zdatalitep2projshootpointer", 0);
      trQuestVarSet("p2projshoot", 0);
      trEventFire(267);
      }
      xsDisableRule("_bbombs_03_b2");
      trEcho("Trigger disabling rule bbombs_03_b2");
   }
}

rule _bbombs_05_end
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(5946);
   bool bVar0 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));

   bool bVar1 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("bouncing", 0);
      trQuestVarSet("crushspell", 0);
      trEventFire(273);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 4, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+4+"p"+zsps+"f1f"));
      trQuestVarSet("p"+4+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      xsDisableRule("_bbombs_05_end");
      trEcho("Trigger disabling rule bbombs_05_end");
   }
}

rule _bbombs_04_m1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 4000) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bouncing") == 1){
      trEventFire(218);
      trEventFire(274);
      }
      xsDisableRule("_bbombs_04_m1");
      trEcho("Trigger disabling rule bbombs_04_m1");
   }
}

rule _bbombs_04_m2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(269);
      xsDisableRule("_bbombs_04_m2");
      trEcho("Trigger disabling rule bbombs_04_m2");
   }
}

rule _crush_a3_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("crusha", 1);
      trQuestVarSet("sprayCount", 6 + 2 * trGetWorldDifficulty());
      trEventFire(212);
      trEventFire(275);
      trUnitSelectClear();
      trUnitSelectByID(6008);
      trDamageUnitPercent(-100);
      trQuestVarSet("bossHP", 30 + 10 * trGetWorldDifficulty());
      xsDisableRule("_crush_a3_00_startup");
      trEcho("Trigger disabling rule crush_a3_00_startup");
   }
}

rule _crush_a3_05_end
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(5946);
   bool bVar0 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("crusha", 0);
      trEventFire(246);
      xsDisableRule("_crush_a3_05_end");
      trEcho("Trigger disabling rule crush_a3_05_end");
   }
}

rule _bboss_00_start
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("crushSpell", 1);
      trOverlayText("Bouncing Boss", 3.0, 572, 360, 800);
      trQuestVarSet("bouncingBoss", 0);
      trStringQuestVarSet("bossName", "Bouncing Boss ");
      trQuestVarSet("bossHP", 40 + 5 * trGetWorldDifficulty());
      trQuestVarSet("waveCount", 9 + 3 * trGetWorldDifficulty());
      trQuestVarSet("waveAngleMod", 3.141592 / (1.0 + trQuestVarGet("waveCount")));
      trQuestVarSet("stepSize", 3.0 - 0.5 * trGetWorldDifficulty());
      trEventFire(276);
      trVectorQuestVarSet("bossmove", xsVectorSet(trQuestVarGet("playCenterx"),0.0,trQuestVarGet("maxBoundz") - 7.0));
      trEventFire(277);
      trEventFire(26);
      xsDisableRule("_bboss_00_start");
      trEcho("Trigger disabling rule bboss_00_start");
   }
}

rule _bboss_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 2000) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("bosspos", kbGetBlockPosition("5946"));
      trVectorQuestVarSet("bossmove", trVectorQuestVarGet("bosspos"));
      trQuestVarCopy("bossprevz", "bossposz");
      trVectorQuestVarSet("bossStep", xsVectorSet(0.15,0,0.0));
      trEventFire(278);
      trSoundPlayFN("attackwarning.wav", "2", -1, "","");
      trEventFire(279);
      trQuestVarSet("bouncingBoss", 1);
      xsDisableRule("_bboss_01");
      trEcho("Trigger disabling rule bboss_01");
   }
}

rule _bboss_02_m1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVbossmovetimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVbossmovetimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVbossmovetimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVbossmovetimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVbossmovetimer_CompTime")) >= 10) {
   for(Accurate_Timer_QVbossmovetimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVbossmovetimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVbossmovetimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bouncingBoss") == 1){
      trVectorQuestVarSet("bosspos", xsVectorSet(trQuestVarGet("bossposx") + trQuestVarGet("bossStepx"),0.0,xsMax(trQuestVarGet("minEnterz") + 2.0, trQuestVarGet("bossposz") + trQuestVarGet("bossStepz"))));
      trVectorQuestVarSet("bossmove", trVectorQuestVarGet("bosspos"));
      trUnitSelectClear();
      trUnitSelectByID(5946);
      trUnitTeleport(trVectorQuestVarGetX("bossPos"),trVectorQuestVarGetY("bossPos"),trVectorQuestVarGetZ("bossPos"));
      trUnitSelectClear();
      trUnitSelectByID(5950);
      trUnitSelectByID(5949);
      trUnitSelectByID(5947);
      trUnitSelectByID(5948);
      trUnitTeleport(trVectorQuestVarGetX("bossPos"),trVectorQuestVarGetY("bossPos"),trVectorQuestVarGetZ("bossPos"));
      /**/ if(trQuestVarGet("bossposx")>trQuestVarGet("maxenterx")-2.0||trQuestVarGet("bossposx")<trQuestVarGet("minEnterx")+2.0){
      trQuestVarSet("bossStepx", 0.0 - trQuestVarGet("bossStepx"));
      /**/ }
      trEventFire(280);
      /**/ if (trQuestVarGet("bossposz") <= trQuestVarGet("minEnterz") + 2.5 && trQuestVarGet("bossStepz") < 0) {
      trQuestVarSet("bossStepz", 0.0 - trQuestVarGet("bossStepz"));
      trSoundPlayFN("shockwave.wav", "2", -1, "","");
      trQuestVarSet("angle", 4.712389);
      trVectorQuestVarSet("start", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("minBouncez")));
      for(bb=trQuestVarGet("waveCount"); >0) {
      trQuestVarSet("p2projxp3proj", trQuestVarGet("p2projxp3proj") + 1);
      if (trQuestVarGet("p2projxp3proj") > 1) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projpointer")+1);
      if (trQuestVarGet("p2projpointer") > trQuestVarGet("p2projend")) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projstart"));
      }
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trQuestVarSet("p2projxp3proj", 0);
      } else {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trQuestVarSet("p2proj", trQuestVarGet("p3projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p2proj"));
      trQuestVarSet("angle", trQuestVarGet("angle") + trQuestVarGet("waveAngleMod"));
      while (trQuestVarGet("angle") > (6.283185)) {
      trQuestVarSet("angle", trQuestVarGet("angle") - (6.283185));
      }
      while (0 > trQuestVarGet("angle")) {
      trQuestVarSet("angle", trQuestVarGet("angle") + 6.283185);
      }
      /**/ trUnitSetHeading(0);
      trUnitTeleport(trVectorQuestVarGetX("start"),trVectorQuestVarGetY("start"),trVectorQuestVarGetZ("start"));
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep2projshootcount");
      trQuestVarSet("zdatalitep2projshootindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdatalitep2projshootcount", zdatacount+1);
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("start") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("start"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("start"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("start"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p2proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p2proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      /**/ } else {
      trQuestVarSet("bossStepz", trQuestVarGet("bossStepz") - (0.009 + 0.003 * trGetWorldDifficulty()));
      }
      }
      xsDisableRule("_bboss_02_m1");
      trEcho("Trigger disabling rule bboss_02_m1");
   }
}

rule _bboss_02_m2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVmovedelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVmovedelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVmovedelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVmovedelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVmovedelaytimer_CompTime")) >= 1) {
   for(Accurate_Timer_QVmovedelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVmovedelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVmovedelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bouncingBoss") == 1){
      trEventFire(278);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep2projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep2projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep2projshootpointer", trQuestVarGet("zdatalitep2projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep2projshootpointer")) {
      trQuestVarSet("zdatalitep2projshootpointer", trQuestVarGet("zdatalitep2projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep2projshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep2projshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep2projshootcount") - 1;
      zdataremove = trQuestVarGet("zdatalitep2projshootpointer");
      trQuestVarSet("zdatalitep2projshootindex"+zdataremove, trQuestVarGet("zdatalitep2projshootindex"+zdatacount));
      trQuestVarSet("zdatalitep2projshootcount", zdatacount);
      trQuestVarSet("zdatalitep2projshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p2projshoot", trQuestVarGet("zdatalitep2projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p2projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p2proj"+zdatapointer+"target"),trVectorQuestVarGetY("p2proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p2proj"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep2projshootcount", 0);
      trQuestVarSet("zdatalitep2projshootpointer", 0);
      trQuestVarSet("p2projshoot", 0);
      }
      xsDisableRule("_bboss_02_m2");
      trEcho("Trigger disabling rule bboss_02_m2");
   }
}

rule _bboss_03_s1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bouncingBoss") == 1){
      if(trQuestVarGet("bossposz") < trQuestVarGet("bossprevz")){
      /**/ while(trQuestVarGet("bossprevz") - trQuestVarGet("stepSize") > trQuestVarGet("bossposz")) {
      trVectorQuestVarSet("start", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossprevz")));
      trQuestVarSet("shootAngle", trQuestVarGet("shootAngle") + 0.21);
      while (trQuestVarGet("shootAngle") > (6.283185)) {
      trQuestVarSet("shootAngle", trQuestVarGet("shootAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("shootAngle")) {
      trQuestVarSet("shootAngle", trQuestVarGet("shootAngle") + 6.283185);
      }
      if(trQuestVarGet("bomb") == 0){
      for(bb=1; >0) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p1proj"));
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("shootAngle")) * 1.0, 0, Math_cos(trQuestVarGet("shootAngle")) * 1.0));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p1proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep3projshootcount");
      trQuestVarSet("zdatalitep3projshootindex"+zdatacount, trQuestVarGet("p1proj"));
      trQuestVarSet("zdatalitep3projshootcount", zdatacount+1);
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("start") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("start"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("start"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("start"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p3proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p3proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitTeleport(trVectorQuestVarGetX("start"),trVectorQuestVarGetY("start"),trVectorQuestVarGetZ("start"));
      }
      }
      trQuestVarSet("bossprevz", trQuestVarGet("bossprevz") - trQuestVarGet("stepSize"));
      /**/ }} else {
      /**/ while(trQuestVarGet("bossprevz") + trQuestVarGet("stepSize") < trQuestVarGet("bossposz")) {
      trVectorQuestVarSet("start", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossprevz")));
      trQuestVarSet("shootAngle", trQuestVarGet("shootAngle") + 0.21);
      while (trQuestVarGet("shootAngle") > (6.283185)) {
      trQuestVarSet("shootAngle", trQuestVarGet("shootAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("shootAngle")) {
      trQuestVarSet("shootAngle", trQuestVarGet("shootAngle") + 6.283185);
      }
      if(trQuestVarGet("bomb") == 0){
      for(bb=1; >0) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p1proj"));
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("shootAngle")) * 1.0, 0, Math_cos(trQuestVarGet("shootAngle")) * 1.0));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p1proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep3projshootcount");
      trQuestVarSet("zdatalitep3projshootindex"+zdatacount, trQuestVarGet("p1proj"));
      trQuestVarSet("zdatalitep3projshootcount", zdatacount+1);
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("start") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("start"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("start"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("start"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p3proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p3proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitTeleport(trVectorQuestVarGetX("start"),trVectorQuestVarGetY("start"),trVectorQuestVarGetZ("start"));
      }
      }
      trQuestVarSet("bossprevz", trQuestVarGet("bossprevz") + trQuestVarGet("stepSize"));
      /**/ }}
      trEventFire(281);
      }
      xsDisableRule("_bboss_03_s1");
      trEcho("Trigger disabling rule bboss_03_s1");
   }
}

rule _bboss_03_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bouncingBoss") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep3projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep3projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep3projshootpointer", trQuestVarGet("zdatalitep3projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep3projshootpointer")) {
      trQuestVarSet("zdatalitep3projshootpointer", trQuestVarGet("zdatalitep3projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep3projshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep3projshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep3projshootcount") - 1;
      zdataremove = trQuestVarGet("zdatalitep3projshootpointer");
      trQuestVarSet("zdatalitep3projshootindex"+zdataremove, trQuestVarGet("zdatalitep3projshootindex"+zdatacount));
      trQuestVarSet("zdatalitep3projshootcount", zdatacount);
      trQuestVarSet("zdatalitep3projshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p3projshoot", trQuestVarGet("zdatalitep3projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p3projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p3proj"+zdatapointer+"target"),trVectorQuestVarGetY("p3proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p3proj"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep3projshootcount", 0);
      trQuestVarSet("zdatalitep3projshootpointer", 0);
      trQuestVarSet("p3projshoot", 0);
      trEventFire(279);
      }
      xsDisableRule("_bboss_03_s2");
      trEcho("Trigger disabling rule bboss_03_s2");
   }
}

rule _crush_die_01
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(5946);
   bool bVar0 = (trUnitPercentDamaged() > trQuestVarGet("bossHP"));


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("Zenophobia\Psynergy1.wav", "1", -1, "","");
      trQuestVarSet("boss", 0);
      trQuestVarSet("boom", 5);
      trEventFire(282);
      trEventFire(283);
      xsDisableRule("_crush_die_01");
      trEcho("Trigger disabling rule crush_die_01");
   }
}

rule _crush_die_02_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVboomertimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVboomertimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVboomertimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVboomertimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVboomertimer_CompTime")) >= 250) {
   for(Accurate_Timer_QVboomertimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVboomertimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVboomertimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("shockwave.wav", "2", -1, "","");
      trArmyDispatch("2,10", "Dwarf", 1, 87.139999, 6.580000, 59.779999, 0, true);
      trVectorQuestVarSet("V1", kbGetBlockPosition("5946"));
      trQuestVarSetFromRand("modx", -3, 3, false);
      trQuestVarSetFromRand("modz", -3, 3, false);
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("V1") + trQuestVarGet("modx"),trVectorQuestVarGetY("V1") + 0,trVectorQuestVarGetZ("V1") + trQuestVarGet("modz")));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("V1");b = trVectorQuestVarGetY("V1");c = trVectorQuestVarGetZ("V1");
      trVectorQuestVarSet("V1",xsVectorSet(a,b,c));}
      trArmySelect("2,10");
      trUnitTeleport(trVectorQuestVarGetX("V1"), trVectorQuestVarGetY("V1"), trVectorQuestVarGetZ("V1"));
      trEventFire(284);
      xsDisableRule("_crush_die_02_s1");
      trEcho("Trigger disabling rule crush_die_02_s1");
   }
}

rule _crush_die_02_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVhavocdie02s2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVhavocdie02s2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVhavocdie02s2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVhavocdie02s2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVhavocdie02s2timer_CompTime")) >= 1) {
   for(Accurate_Timer_QVhavocdie02s2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVhavocdie02s2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVhavocdie02s2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trArmySelect("2,10");
      trDamageUnitPercent(100);
      trArmySelect("2,10");
      trUnitChangeProtoUnit("Meteorite");
      trQuestVarSet("boom", trQuestVarGet("boom") - 1);
      if(trQuestVarGet("boom") > 0){
      trEventFire(282);
      }
      xsDisableRule("_crush_die_02_s2");
      trEcho("Trigger disabling rule crush_die_02_s2");
   }
}

rule _crush_die_03
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("boom") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("crushspell", 0);
      trQuestVarSet("bouncingBoss", 0);
      trSoundPlayFN("implode explode.wav", "3", -1, "","");
      trUIFadeToColor(255,255,255,1000,0,false);
      trFadeOutMusic(3.0);
      trUnitSelectClear();
      trUnitSelectByID(5946);
      trUnitChangeProtoUnit("Meteor Impact Ground");
      trUnitSelectClear();
      trUnitSelectByID(5950);
      trUnitSelectByID(5949);
      trUnitSelectByID(5947);
      trUnitSelectByID(5948);
      trUnitChangeProtoUnit("Ball of fire impact");
      trQuestVarSet("movement", 1);
      trQuestVarSet("zdataliteenemiescount", 0);
      trQuestVarSet("zdataliteenemiespointer", 0);
      trQuestVarSet("enemies", 0);
      trStringQuestVarSet("bossName", "");
      trStringQuestVarSet("bossHealthBar", "");
      trEventFire(285);
      xsDisableRule("_crush_die_03");
      trEcho("Trigger disabling rule crush_die_03");
   }
}

rule _crush_die_04_yay
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(195);
      if(trQuestVarGet("pilot") == 0){
      trSoundPlayFN("default", "1", -1, "Ace: Piece of cake.","Zenophobia/SFA/Ace");
      /**/ } else {
      trSoundPlayFN("default", "1", -1, "Oliver: Alrght! 20,000 credits!","Zenophobia\SFA\Oliver");
      }
      xsDisableRule("_crush_die_04_yay");
      trEcho("Trigger disabling rule crush_die_04_yay");
   }
}

rule _Stage_C_01_Start
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trUIFadeToColor(0,0,0,1000,0,false);
      trOverlayText("Stage 3: Capture Nick", 3.0, 400, 150, 800);
      trBlockAllSounds(true);
      trQuestVarSet("stage", 3);
      trVectorQuestVarSet("bosspos", kbGetBlockPosition("6008"));
      trVectorQuestVarSet("bossmove", kbGetBlockPosition("6008"));
      trQuestVarSet("play", 1);
      trMusicPlay("Zenophobia\Clockwork Sky.mp3", "1", 0.0);
      trEventFire(286);
      /**/ trCameraCut(vector(50.0,130.0,50.0), vector(0.0,-1.000000,0.0), vector(0.0,0.0,1.0), vector(1.0,0.0,0.0));
      trStringQuestVarSet("bossHealthBar", "Stage 3: Capture Nick");
      trSoundPlayFN("default", "1", -1, "Lives "+1*trQuestVarGet("lives")+" Bombs "+1*trQuestVarGet("bombs")+": "+trStringQuestVarGet("bossHealthBar")+"","");
      trEventFire(287);
      trEventFire(288);
      trEventFire(289);
      for(bb=16; >0) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidspointer")+1);
      if (trQuestVarGet("asteroidspointer") > trQuestVarGet("asteroidsend")) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidsstart"));
      }
      trQuestVarSet("asteroids", trQuestVarGet("asteroidspointer"));
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("asteroids"));
      trUnitTeleport(2.96, 0.00, 2.87);
      }
      trQuestVarSet("nickHPTotal", 55 + 10 * trGetWorldDifficulty());
      trEventFire(290);
      trStringQuestVarSet("oliver1", "Oliver: He's getting away!");
      trStringQuestVarSet("Ace1", "Ace: After him!");
      trStringQuestVarSet("oliver2", "Oliver: He used a portal!");
      trStringQuestVarSet("Ace2", "Ace: Dammit!");
      trStringQuestVarSet("oliver3", "Oliver: He escaped again!");
      trStringQuestVarSet("Ace3", "Ace: We need to interrupt his channel!");
      trModifyProtounit("Petrobolos Shot", 2, 1, 2.0);
      if(true) {
      trEventFire(291);
      /**/ } else {
      trEventFire(292);
      trQuestVarSet("nickHPTotal", 20);
      if(false) { trVectorQuestVarSet("bossmove", xsVectorSet(49.26, 0.00, 58.56));
      for(a=0; >1){}for(b=0; >1){}for(c=0; >1){} a = xsVectorGetX(trVectorQuestVarGet("bossmove"));b = xsVectorGetY(trVectorQuestVarGet("bossmove"));c = xsVectorGetZ(trVectorQuestVarGet("bossmove"));
      trVectorQuestVarSet("bossmove",xsVectorSet(a,b,c));}
      else {trVectorQuestVarSet("bossmove", xsVectorSet(49.26, 0.00, 58.56));}
      for(id=0;>1) {}
      for(count=0;>1) {}
      for(zdatacount=0;>1) {}
      id=kbGetBlockID("6008");
      count = count+1; trQuestVarSet("zenoLoop"+id+"unit"+count, 6008);
      for(add=count; >0){
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdatacount, trQuestVarGet("zenoLoop"+id+"unit"+add));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount+1);
      }
      }
      trSetLighting("default",0.0);
      /**/ projectileConvert(4, "Tower Mirror", "Victory Marker", 0.8, 0);
      /**/ projectileConvert(3, "Catapult Shot", "Einheriar Boost SFX");
      /**/ projectileConvert(1, "Catapult Shot", "Einheriar Boost SFX");
      /**/ 
      /**/ 
      /**/ 
      trQuestVarSet("clearName", trGetNextUnitScenarioNameNumber());
      xsDisableRule("_Stage_C_01_Start");
      trEcho("Trigger disabling rule Stage_C_01_Start");
   }
}

rule _Stage_C_music1
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 66);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trMusicPlay("Zenophobia\Clockwork Sky.mp3", "85", 0.5);
      trEventFire(293);
      xsDisableRule("_Stage_C_music1");
      trEcho("Trigger disabling rule Stage_C_music1");
   }
}

rule _Stage_C_music2
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 66);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trMusicPlay("Zenophobia\Clockwork Sky.mp3", "85", 0.5);
      trEventFire(286);
      xsDisableRule("_Stage_C_music2");
      trEcho("Trigger disabling rule Stage_C_music2");
   }
}

rule _Stage_C_02
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyBarge1start", xsVectorSet(trQuestVarGet("middleSpawn"),0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge1end", xsVectorSet(trQuestVarGet("middleSpawn"),0.0,trQuestVarGet("upperSpawn") - 20));
      trQuestVarSet("enemyBarge1", 1);
      trEventFire(294);
      xsDisableRule("_Stage_C_02");
      trEcho("Trigger disabling rule Stage_C_02");
   }
}

rule _Stage_C_boss_m1
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(6008);
   bool bVar0 = (trUnitDistanceToPoint(trVectorQuestVarGetX("bossmove"),trVectorQuestVarGetY("bossmove"),trVectorQuestVarGetZ("bossmove")) > 1);

   trUnitSelectClear();
   trUnitSelectByID(6008);
   bool bVar1 = (trUnitDead()==true);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      trUnitSelectClear();
      trUnitSelectByID(6008);
      if(trUnitAlive()==true){
      trEventFire(295);
      if(trQuestVarGet("dive") <= 1){
      /**/ 
      trVectorQuestVarSet("bosspos", trVectorQuestVarGet("bosspos") - trVectorQuestVarGet("bossmove"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("bosspos");b = trVectorQuestVarGetY("bosspos");c = trVectorQuestVarGetZ("bosspos");
      trVectorQuestVarSet("bosspos",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("bosspos", xsVectorSet(trVectorQuestVarGetX("bosspos") * 0.93,trVectorQuestVarGetY("bosspos") * 0,trVectorQuestVarGetZ("bosspos") * 0.93));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("bosspos");b = trVectorQuestVarGetY("bosspos");c = trVectorQuestVarGetZ("bosspos");
      trVectorQuestVarSet("bosspos",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("bosspos", trVectorQuestVarGet("bosspos") + trVectorQuestVarGet("bossmove"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("bosspos");b = trVectorQuestVarGetY("bosspos");c = trVectorQuestVarGetZ("bosspos");
      trVectorQuestVarSet("bosspos",xsVectorSet(a,b,c));}
      trUnitSelectClear();
      trUnitSelectByID(6008);
      trUnitTeleport(trVectorQuestVarGetX("bosspos"),trVectorQuestVarGetY("bosspos"),trVectorQuestVarGetZ("bosspos"));
      trUnitSelectClear();
      trUnitSelectByID(6009);
      trUnitTeleport(trVectorQuestVarGetX("bosspos"),trVectorQuestVarGetY("bosspos"),trVectorQuestVarGetZ("bosspos"));
      trVectorQuestVarSet("rightWing", xsVectorSet(trQuestVarGet("bossposx") + 3.0,0.8,trQuestVarGet("bossposz") + 0.0));
      trVectorQuestVarSet("leftWing", xsVectorSet(trQuestVarGet("bossposx") - 3.0,0.8,trQuestVarGet("bossposz") + 0.0));
      /**/ for(x = 0; <=2) {
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(6013 + x);
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(trVectorQuestVarGetX("leftWing"),trVectorQuestVarGetY("leftWing"),trVectorQuestVarGetZ("leftWing"));
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(6010 + x);
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(trVectorQuestVarGetX("rightWing"),trVectorQuestVarGetY("rightWing"),trVectorQuestVarGetZ("rightWing"));
      trVectorQuestVarSet("rightWing", xsVectorSet(trQuestVarGet("rightwingx") + 0.5,trQuestVarGet("rightwingy")-0.1,trQuestVarGet("rightwingz") + 1.0));
      trVectorQuestVarSet("leftWing", xsVectorSet(trQuestVarGet("leftwingx") - 0.5,trQuestVarGet("leftwingy")-0.1,trQuestVarGet("leftwingz") + 1.0));
      }
      /**/ }
      }
      xsDisableRule("_Stage_C_boss_m1");
      trEcho("Trigger disabling rule Stage_C_boss_m1");
   }
}

rule _Stage_C_boss_m2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVstageabossm2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVstageabossm2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVstageabossm2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVstageabossm2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVstageabossm2timer_CompTime")) >= 10) {
   for(Accurate_Timer_QVstageabossm2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVstageabossm2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVstageabossm2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trUnitSelectClear();
      trUnitSelectByID(6008);
      if(trUnitAlive()==true){
      trEventFire(287);
      }
      xsDisableRule("_Stage_C_boss_m2");
      trEcho("Trigger disabling rule Stage_C_boss_m2");
   }
}

rule _enemy_barge_s_01
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("enemybarge1") >= 1);

   bool bVar1 = (trQuestVarGet("enemybarge2") >= 1);

   bool bVar2 = (trQuestVarGet("enemybarge3") >= 1);


   bool tempExp = (bVar0 || bVar1 || bVar2);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemybarge"+x+"") >= 1){
      trQuestVarSet("enemybarge"+x+"name", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Ajax Older", 1, 4.79, 0.00, 5.09, 180, true);
      trQuestVarSet("cow", trGetNextUnitScenarioNameNumber());
      trArmyDispatch("6,10", "Dwarf", 1, 3.240000, 6.280000, 21.330000, 0, true);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("cow"), true);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesBargecount");
      trQuestVarSet("zdataliteenemiesBargeindex"+zdatacount, trQuestVarGet("cow"));
      trQuestVarSet("zdataliteenemiesBargecount", zdatacount+1);
      trUnitChangeProtoUnit("Relic");
      /**/ trImmediateUnitGarrison(""+1*trQuestVarGet("enemyBarge"+x+"name"));
      unitTransform("Relic","Siege Ship Egyptian");
      unitTransform("Ajax Older","Priest Projectile");
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemyBarge"+x+"name"), true);
      trQuestVarSet("enemybarge"+x+"starty", 0.3);
      trUnitTeleport(trVectorQuestVarGetX("enemyBarge"+x+"start"),trVectorQuestVarGetY("enemyBarge"+x+"start"),trVectorQuestVarGetZ("enemyBarge"+x+"start"));
      trQuestVarSet("enemiesBarge"+zdatacount+"cooldown", 0);
      /**/ }}
      trEventFire(296);
      xsDisableRule("_enemy_barge_s_01");
      trEcho("Trigger disabling rule enemy_barge_s_01");
   }
}

rule _enemy_barge_s_02
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemybargespawn02timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemybargespawn02timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemybargespawn02timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemybargespawn02timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemybargespawn02timer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVenemybargespawn02timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemybargespawn02timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemybargespawn02timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      if(trQuestVarGet("enemyBarge"+x+"") >= 1){
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemyBarge"+x+"name"), true);
      trUnitMoveToPoint(trVectorQuestVarGetX("enemyBarge"+x+"end"),trVectorQuestVarGetY("enemyBarge"+x+"end"),trVectorQuestVarGetZ("enemyBarge"+x+"end"), -1, false);
      trQuestVarSet("enemyBarge"+x+"", trQuestVarGet("enemyBarge"+x+"") - 1);
      /**/ }}
      trEventFire(288);
      xsDisableRule("_enemy_barge_s_02");
      trEcho("Trigger disabling rule enemy_barge_s_02");
   }
}

rule _enemy_barge_s1
highFrequency
active
{
   bool bVar0 = (trQuestVarGet("play") == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);

   bool bVar2 = (trQuestVarGet("zdataliteenemiesBargeCount") >= 1);

   if(trQuestVarGet("Accurate_Timer_QVenemybarges1timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemybarges1timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemybarges1timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemybarges1timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemybarges1timer_CompTime")) >= 200) {
   for(Accurate_Timer_QVenemybarges1timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemybarges1timer_DidFirstPass", 0);}
   bool bVar3 = (Accurate_Timer_QVenemybarges1timer_IsTrue == 1);


   bool tempExp = (bVar0 && bVar1 && bVar2 && bVar3);
   if (tempExp)
   {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteenemiesBargecount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteenemiesBargecount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteenemiesBargepointer", trQuestVarGet("zdataliteenemiesBargepointer")-1);
      if (0 > trQuestVarGet("zdataliteenemiesBargepointer")) {
      trQuestVarSet("zdataliteenemiesBargepointer", trQuestVarGet("zdataliteenemiesBargecount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteenemiesBargepointer");
      trQuestVarSet("enemiesBarge", trQuestVarGet("zdataliteenemiesBargeindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("enemiesBarge"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("enemiesBarge"), true);
      if(trUnitDead()==true){
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteenemiesBargecount") - 1;
      zdataremove = trQuestVarGet("zdataliteenemiesBargepointer");
      trQuestVarSet("zdataliteenemiesBargeindex"+zdataremove, trQuestVarGet("zdataliteenemiesBargeindex"+zdatacount));
      trQuestVarSet("zdataliteenemiesBargecount", zdatacount);
      if (trQuestVarGet("zdataliteenemiesBargepointer") >= trQuestVarGet("zdataliteenemiesBargecount")) {
      trQuestVarSet("zdataliteenemiesBargepointer", trQuestVarGet("zdataliteenemiesBargecount")-1);
      }
      trQuestVarCopy("enemiesBarge"+zdatapointer+"cooldown", "enemiesBarge"+zdatacount+"cooldown");
      /**/ continue;
      }
      trQuestVarSet("enemiesBarge"+zdatapointer+"cooldown", trQuestVarGet("enemiesBarge"+zdatapointer+"cooldown") + 1);
      if(trQuestVarGet("enemiesBarge"+zdatapointer+"cooldown") >= 15){
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("enemiesBarge"), true));
      if ((trVectorQuestVarGetX("maxEnter") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxEnter") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minEnter") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minEnter")) == true) {
      trQuestVarSet("enemiesBarge"+zdatapointer+"cooldown", 0);
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("V1") + 0,trVectorQuestVarGetY("V1") + 1.5,trVectorQuestVarGetZ("V1") + 0));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("V1");b = trVectorQuestVarGetY("V1");c = trVectorQuestVarGetZ("V1");
      trVectorQuestVarSet("V1",xsVectorSet(a,b,c));}
      trSoundPlayFN("titanfall.wav", "1", -1, "","");
      trSoundPlayFN("ui\lightning1.wav", "3", -1, "","");
      trQuestVarSetFromRand("angle", 0, trQuestVarGet("bargeAngleMod"), false);
      /**/ for(x=trQuestVarGet("zdatalitep7projshootcount")+trQuestVarGet("bargeCount")-1;>=trQuestVarGet("zdatalitep7projshootcount")){
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p4proj"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      trQuestVarCopy("zdatalitep7projshootindex"+x+"", "p4proj");
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p7proj"+x+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p7proj"+x+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      trQuestVarSet("angle", trQuestVarGet("angle") + trQuestVarGet("bargeAngleMod"));
      while (trQuestVarGet("angle") > (6.283185)) {
      trQuestVarSet("angle", trQuestVarGet("angle") - (6.283185));
      }
      while (0 > trQuestVarGet("angle")) {
      trQuestVarSet("angle", trQuestVarGet("angle") + 6.283185);
      }
      /**/ }
      trQuestVarSet("zdatalitep7projshootcount", trQuestVarGet("zdatalitep7projshootcount") + trQuestVarGet("bargeCount"));
      }
      }
      }
      trEventFire(297);
      xsDisableRule("_enemy_barge_s1");
      trEcho("Trigger disabling rule enemy_barge_s1");
   }
}

rule _enemy_barge_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVenemybarges2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVenemybarges2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVenemybarges2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemybarges2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVenemybarges2timer_CompTime")) >= 1) {
   for(Accurate_Timer_QVenemybarges2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVenemybarges2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVenemybarges2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("zdatalitep7projshootcount") >= 1){
      trQuestVarCopy("zdatalitep7projshootpointer", "zdatalitep7projshootcount");
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep7projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep7projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep7projshootpointer", trQuestVarGet("zdatalitep7projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep7projshootpointer")) {
      trQuestVarSet("zdatalitep7projshootpointer", trQuestVarGet("zdatalitep7projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep7projshootpointer");
      trQuestVarSet("p7projshoot", trQuestVarGet("zdatalitep7projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p7projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p7proj"+zdatapointer+"target"),trVectorQuestVarGetY("p7proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p7proj"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep7projshootcount", 0);
      trQuestVarSet("zdatalitep7projshootpointer", 0);
      trQuestVarSet("p7projshoot", 0);
      }
      trEventFire(289);
      xsDisableRule("_enemy_barge_s2");
      trEcho("Trigger disabling rule enemy_barge_s2");
   }
}

rule _Stage_C_09_midboss
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("boss", 1);
      if(false) { trVectorQuestVarSet("bossmove", xsVectorSet(51.55, 0.00, 57.30));
      for(a=0; >1){}for(b=0; >1){}for(c=0; >1){} a = xsVectorGetX(trVectorQuestVarGet("bossmove"));b = xsVectorGetY(trVectorQuestVarGet("bossmove"));c = xsVectorGetZ(trVectorQuestVarGet("bossmove"));
      trVectorQuestVarSet("bossmove",xsVectorSet(a,b,c));}
      else {trVectorQuestVarSet("bossmove", xsVectorSet(51.55, 0.00, 57.30));}
      for(id=0;>1) {}
      for(count=0;>1) {}
      for(zdatacount=0;>1) {}
      id=kbGetBlockID("6008");
      count = count+1; trQuestVarSet("zenoLoop"+id+"unit"+count, 6008);
      for(add=count; >0){
      zdatacount = trQuestVarGet("zdataliteenemiesIncomingcount");
      trQuestVarSet("zdataliteenemiesIncomingindex"+zdatacount, trQuestVarGet("zenoLoop"+id+"unit"+add));
      trQuestVarSet("zdataliteenemiesIncomingcount", zdatacount+1);
      }
      trQuestVarSet("bossID", 6008);
      trQuestVarSet("bossHP", 30 + 5 * (trGetWorldDifficulty() + trQuestVarGet("power")));
      trStringQuestVarSet("bossName", "Nick ");
      trEventFire(17);
      trSoundPlayFN("vortexstart.wav", "3", -1, "","");
      trEventFire(298);
      trQuestVarSet("spells", 1);
      trEventFire(135);
      xsDisableRule("_Stage_C_09_midboss");
      trEcho("Trigger disabling rule Stage_C_09_midboss");
   }
}

rule _Stage_C_03
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyBarge1start", xsVectorSet(trQuestVarGet("middlespawn") + 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge1end", xsVectorSet(trQuestVarGet("middlespawn") + 10,0,trQuestVarGet("upperSpawn") - 20));
      trQuestVarSet("enemyBarge1", 1);
      trVectorQuestVarSet("enemyBarge2start", xsVectorSet(trQuestVarGet("middlespawn") - 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge2end", xsVectorSet(trQuestVarGet("middlespawn") - 10,0,trQuestVarGet("upperSpawn") - 20));
      trQuestVarSet("enemyBarge2", 1);
      trEventFire(299);
      xsDisableRule("_Stage_C_03");
      trEcho("Trigger disabling rule Stage_C_03");
   }
}

rule _Stage_C_04
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("rightspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("leftspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(0,0,-2.0));
      trQuestVarSet("enemyRow1", 10);
      trVectorQuestVarSet("enemyRow2start", xsVectorSet(trQuestVarGet("leftspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow2end", xsVectorSet(trQuestVarGet("rightspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow2shift", xsVectorSet(0,0,-2.0));
      trQuestVarSet("enemyRow2", 10);
      trEventFire(300);
      xsDisableRule("_Stage_C_04");
      trEcho("Trigger disabling rule Stage_C_04");
   }
}

rule _Stage_C_05
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 10);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyKebenit1start", xsVectorSet(trQuestVarGet("rightspawn"),0,trQuestVarGet("maxBoundz") - 15));
      trVectorQuestVarSet("enemyKebenit1end", xsVectorSet(trQuestVarGet("leftspawn"),0,trQuestVarGet("maxBoundz") - 15));
      trQuestVarSet("enemyKebenit1", 3);
      trEventFire(301);
      xsDisableRule("_Stage_C_05");
      trEcho("Trigger disabling rule Stage_C_05");
   }
}

rule _Stage_C_06
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 10);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyKebenit1start", xsVectorSet(trQuestVarGet("leftspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyKebenit1end", xsVectorSet(trQuestVarGet("rightspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trQuestVarSet("enemyKebenit1", 3);
      trEventFire(302);
      xsDisableRule("_Stage_C_06");
      trEcho("Trigger disabling rule Stage_C_06");
   }
}

rule _Stage_C_07
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyBarge1start", xsVectorSet(trQuestVarGet("middlespawn") + 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge1end", xsVectorSet(trQuestVarGet("middlespawn") + 10,0,trQuestVarGet("upperSpawn") - 20));
      trQuestVarSet("enemyBarge1", 1);
      trVectorQuestVarSet("enemyBarge2start", xsVectorSet(trQuestVarGet("middlespawn") - 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge2end", xsVectorSet(trQuestVarGet("middlespawn") - 10,0,trQuestVarGet("upperSpawn") - 20));
      trQuestVarSet("enemyBarge2", 1);
      trEventFire(303);
      xsDisableRule("_Stage_C_07");
      trEcho("Trigger disabling rule Stage_C_07");
   }
}

rule _Stage_C_08_cleared
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trEventFire(304);
      xsDisableRule("_Stage_C_08_cleared");
      trEcho("Trigger disabling rule Stage_C_08_cleared");
   }
}

rule _nick_a0_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("nicka", 1);
      trQuestVarSet("waveCount", 12 + 4 * trGetWorldDifficulty());
      trQuestVarSet("waveAngleMod", 3.141592 / trQuestVarGet("waveCount"));
      trEventFire(305);
      trQuestVarSet("shoot", trQuestVarGet("waveCount"));
      trQuestVarSetFromRand("nickAngle", 0, trQuestVarGet("waveAngleMod"), false);
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + 1.570796);
      trEventFire(306);
      trEventFire(307);
      trQuestVarSet("nickVary", 1);
      for(bb=256; >0) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p4proj"));
      trUnitTeleport(1.21, 0.00, 1.45);
      }
      xsDisableRule("_nick_a0_00_startup");
      trEcho("Trigger disabling rule nick_a0_00_startup");
   }
}

rule _nick_a0_01_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("nicka") == 1){
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("bossposx"),1.5,trQuestVarGet("bossposz")));
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("nickAngle")) * 1.0, 0, Math_cos(trQuestVarGet("nickAngle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p2projtarget", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p2projtarget", trVectorQuestVarGet("ziwrposs2"));
      }
      for(bb=1; >0) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projpointer")+1);
      if (trQuestVarGet("p2projpointer") > trQuestVarGet("p2projend")) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projstart"));
      }
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p2proj"));
      /**/ trUnitSetHeading(180);
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      }
      trEventFire(308);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      xsDisableRule("_nick_a0_01_s1");
      trEcho("Trigger disabling rule nick_a0_01_s1");
   }
}

rule _nick_a0_01_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("nicka") == 1){
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p2proj"));
      trUnitMoveToPoint(trVectorQuestVarGetX("p2projtarget"),trVectorQuestVarGetY("p2projtarget"),trVectorQuestVarGetZ("p2projtarget"), -1, false);
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + trQuestVarGet("waveAngleMod"));
      while (trQuestVarGet("nickAngle") > (6.283185)) {
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("nickAngle")) {
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + 6.283185);
      }
      trQuestVarSet("shoot", trQuestVarGet("shoot") - 1);
      if(trQuestVarGet("shoot") <= 0){
      trQuestVarSetFromRand("nickAngle", 0, trQuestVarGet("waveAngleMod"), false);
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + 1.570796);
      trQuestVarSet("shoot", trQuestVarGet("waveCount"));
      trQuestVarSet("waveAngleMod", trQuestVarGet("waveAngleMod") * -1.0);
      trQuestVarSet("nickVary", 0 - trQuestVarGet("nickVary"));
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") * trQuestVarGet("nickVary"));
      while (trQuestVarGet("nickAngle") > (6.283185)) {
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("nickAngle")) {
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + 6.283185);
      }
      trSoundPlayFN("mirrortowerfire.wav", "2", -1, "","");
      }
      trEventFire(305);
      }
      xsDisableRule("_nick_a0_01_s2");
      trEcho("Trigger disabling rule nick_a0_01_s2");
   }
}

rule _nick_a0_02_m1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 3000) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("nicka") == 1){
      trEventFire(309);
      trEventFire(310);
      }
      xsDisableRule("_nick_a0_02_m1");
      trEcho("Trigger disabling rule nick_a0_02_m1");
   }
}

rule _nick_move
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSetFromRand("xpos", 8.0 + trVectorQuestVarGetX("minBound"), trVectorQuestVarGetX("maxBound") - 8.0, false);
      trQuestVarSetFromRand("zpos", trVectorQuestVarGetZ("maxBound") - 16.0, trVectorQuestVarGetZ("maxBound") - 8.0, false);
      /**/ trVectorQuestVarSet("bossMove", xsVectorSet(trQuestVarGet("xpos"), 0, trQuestVarGet("zpos")));
      xsDisableRule("_nick_move");
      trEcho("Trigger disabling rule nick_move");
   }
}

rule _nick_a0_02_m2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(306);
      xsDisableRule("_nick_a0_02_m2");
      trEcho("Trigger disabling rule nick_a0_02_m2");
   }
}

rule _nick_a0_03_end
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(6008);
   bool bVar0 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("nicka", 0);
      trEventFire(311);
      xsDisableRule("_nick_a0_03_end");
      trEcho("Trigger disabling rule nick_a0_03_end");
   }
}

rule _nick_spell_00_start
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("nickspell") == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("cinematics\15_in\gong.wav", "4", -1, "","");
      trSoundPlayFN("godpower.wav", "6", -1, "","");
      trEventFire(312);
      trVectorQuestVarSet("rockCenter", xsVectorSet(trQuestVarGet("bossposx") / 2,0,trQuestVarGet("bossposz") / 2));
      trQuestVarSet("rockxval", 1);
      sunColor(0,30,90);
      ambientColor(40,40,80);
      trUnitSelectClear();
      trUnitSelectByID(6008);
      trDamageUnitPercent(-100);
      trEventFire(17);
      xsDisableRule("_nick_spell_00_start");
      trEcho("Trigger disabling rule nick_spell_00_start");
   }
}

rule _nick_spell_01_s1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("nickspell") == 1){
      /**/ if (trGetTerrainCombinedType(trQuestVarGet("maxTerrainx"), trQuestVarGet("maxTerrainz")) == trQuestVarGet("blackval") ||
      /**/ trGetTerrainCombinedType(trQuestVarGet("maxTerrainx"), trQuestVarGet("minTerrainz")) == trQuestVarGet("blackval") ||
      /**/ trGetTerrainCombinedType(trQuestVarGet("minTerrainx"), trQuestVarGet("maxTerrainz")) == trQuestVarGet("blackval") ||
      /**/ trGetTerrainCombinedType(trQuestVarGet("minTerrainx"), trQuestVarGet("minTerrainz")) == trQuestVarGet("blackval")) {
      /**/ 
      /**/ 
      trQuestVarSet("rockxval", trQuestVarGet("rockxval") + 1);
      trQuestVarSet("radius", trQuestVarGet("rockxval") * trQuestVarGet("rockxval"));
      /**/ for(z=0; <= trQuestVarGet("rockxval") + 1) {
      /**/ for(x=trQuestVarGet("rockxval") + 1; >=0) {
      /**/ if (x*x + z*z <= trQuestVarGet("radius")) {
      for(tempX0 = 0; > 1){}
      for(tempZ0 = 0; > 1){}
      for(tempX1 = 0; > 1){}
      for(tempZ1 = 0; > 1){}
      tempX0 = xsMin(xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("rockCenterx") - x), xsMin(trQuestVarGet("maxTerrainx"), trQuestVarGet("rockCenterx") + x));
      tempZ0 = xsMin(xsMax(trQuestVarGet("minTerrainz"), trQuestVarGet("rockCenterz") - z), xsMin(trQuestVarGet("maxTerrainz"), trQuestVarGet("rockCenterz") + z));
      tempX1 = xsMax(xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("rockCenterx") - x), xsMin(trQuestVarGet("maxTerrainx"), trQuestVarGet("rockCenterx") + x));
      tempZ1 = xsMax(xsMax(trQuestVarGet("minTerrainz"), trQuestVarGet("rockCenterz") - z), xsMin(trQuestVarGet("maxTerrainz"), trQuestVarGet("rockCenterz") + z));
      trPaintTerrain(tempX0, tempZ0, tempX1, tempZ1, trQuestVarGet("coral2type"), trQuestVarGet("coral2subtype"), false);
      /**/ break; }}}
      trEventFire(313);
      /**/ } else {
      trEventFire(314);
      }
      }
      xsDisableRule("_nick_spell_01_s1");
      trEcho("Trigger disabling rule nick_spell_01_s1");
   }
}

rule _nick_spell_01_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVspellstimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVspellstimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVspellstimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVspellstimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVspellstimer_CompTime")) >= 25) {
   for(Accurate_Timer_QVspellstimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVspellstimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVspellstimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("nickspell") == 1){
      trEventFire(312);
      }
      xsDisableRule("_nick_spell_01_s2");
      trEcho("Trigger disabling rule nick_spell_01_s2");
   }
}

rule _nick_spell_02_end
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("nickspell") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      for(tempX0 = 0; > 1){}
      for(tempZ0 = 0; > 1){}
      for(tempX1 = 0; > 1){}
      for(tempZ1 = 0; > 1){}
      tempX0 = xsMin(trQuestVarGet("minTerrainx"), trQuestVarGet("maxTerrainx"));
      tempZ0 = xsMin(trQuestVarGet("minTerrainz"), trQuestVarGet("maxTerrainz"));
      tempX1 = xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("maxTerrainx"));
      tempZ1 = xsMax(trQuestVarGet("minTerrainz"), trQuestVarGet("maxTerrainz"));
      trPaintTerrain(tempX0, tempZ0, tempX1, tempZ1, trQuestVarGet("blacktype"), trQuestVarGet("blacksubtype"), false);
      trEventFire(17);
      trSoundPlayFN("godpowerfailed.wav", "2", -1, "","");
      trSetLighting("default",0.0);
      trUnitSelectClear();
      trUnitSelectByID(6008);
      trDamageUnitPercent(-100);
      trEventFire(290);
      trEventFire(151);
      trQuestVarSet("spells", trQuestVarGet("spells") - 1);
      trStringQuestVarSet("bossName", "Nick ");
      trQuestVarSet("bossHP", 0);
      xsDisableRule("_nick_spell_02_end");
      trEcho("Trigger disabling rule nick_spell_02_end");
   }
}

rule _escape_00_startup
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("nickspell", 1);
      trOverlayText("Portal Escape", 3.0, 592, 360, 800);
      trVectorQuestVarSet("bossmove", xsVectorSet(trQuestVarGet("playCenterx"),0,trQuestVarGet("playCenterz") + 10));
      trEventFire(315);
      trQuestVarCopy("bossHP", "nickHPTotal");
      trEventFire(316);
      trQuestVarSet("escape", 1);
      /**/ projectileConvert(1, "Lampades Bolt", "Victory Marker");
      /**/ projectileConvert(3, "Lampades Bolt", "Victory Marker");
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      xsDisableRule("_escape_00_startup");
      trEcho("Trigger disabling rule escape_00_startup");
   }
}

rule _escape_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 2500) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);

   bool bVar1 = (trGetTerrainType(trQuestVarGet("minTerrainX"), trQuestVarGet("minTerrainZ")) == trQuestVarGet("coral2type"));

   bool bVar2 = (trGetTerrainType(trQuestVarGet("maxTerrainX"), trQuestVarGet("minTerrainZ")) == trQuestVarGet("coral2type"));

   bool bVar3 = (trGetTerrainSubType(trQuestVarGet("minTerrainx"), trQuestVarGet("minTerrainz")) == trQuestVarGet("coral2subtype"));

   bool bVar4 = (trGetTerrainSubType(trQuestVarGet("maxTerrainx"), trQuestVarGet("minTerrainz")) == trQuestVarGet("coral2subtype"));


   bool tempExp = (bVar0 && bVar1 && bVar2 && bVar3 && bVar4);
   if (tempExp)
   {
      if(trQuestVarGet("escape") == 1){
      trSoundPlayFN("lapadesconvert.wav", "2", -1, "","");
      trQuestVarSet("waveCount", 24 + 4 * trGetWorldDifficulty());
      trQuestVarSet("waveAngleMod", 6.283185 / trQuestVarGet("waveCount"));
      trQuestVarSet("portalRadius", 40);
      trEventFire(317);
      trEventFire(318);
      trQuestVarSet("shootAngleMod", 0);
      trQuestVarCopy("nickAngle1", "nickAngle");
      trQuestVarCopy("nickAngle2", "nickAngle");
      trQuestVarSet("nickAngle1", trQuestVarGet("nickAngle1") + 3.141592);
      while (trQuestVarGet("nickAngle1") > (6.283185)) {
      trQuestVarSet("nickAngle1", trQuestVarGet("nickAngle1") - (6.283185));
      }
      while (0 > trQuestVarGet("nickAngle1")) {
      trQuestVarSet("nickAngle1", trQuestVarGet("nickAngle1") + 6.283185);
      }
      trVectorQuestVarSet("rockCenter", trVectorQuestVarGet("bossmove"));
      trQuestVarSet("rockCenterx", trQuestVarGet("rockCenterx") / 2);
      trQuestVarSet("rockCenterz", trQuestVarGet("rockCenterz") / 2);
      }
      xsDisableRule("_escape_01");
      trEcho("Trigger disabling rule escape_01");
   }
}

rule _escape_02_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("escape") == 1){
      trQuestVarSet("nickAngle1", trQuestVarGet("nickAngle1") + trQuestVarGet("waveAngleMod"));
      while (trQuestVarGet("nickAngle1") > (6.283185)) {
      trQuestVarSet("nickAngle1", trQuestVarGet("nickAngle1") - (6.283185));
      }
      while (0 > trQuestVarGet("nickAngle1")) {
      trQuestVarSet("nickAngle1", trQuestVarGet("nickAngle1") + 6.283185);
      }
      trQuestVarSet("nickAngle2", trQuestVarGet("nickAngle2") + trQuestVarGet("waveAngleMod"));
      while (trQuestVarGet("nickAngle2") > (6.283185)) {
      trQuestVarSet("nickAngle2", trQuestVarGet("nickAngle2") - (6.283185));
      }
      while (0 > trQuestVarGet("nickAngle2")) {
      trQuestVarSet("nickAngle2", trQuestVarGet("nickAngle2") + 6.283185);
      }
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + trQuestVarGet("waveAngleMod"));
      while (trQuestVarGet("nickAngle") > (6.283185)) {
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("nickAngle")) {
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + 6.283185);
      }
      trVectorQuestVarSet("startOffset",xsVectorSet(Math_sin(trQuestVarGet("nickAngle")) * 8.0, 0, Math_cos(trQuestVarGet("nickAngle")) * 8.0));
      trVectorQuestVarSet("start1", xsVectorSet(trQuestVarGet("startOffsetx") + trQuestVarGet("bossposx"),1.5,trQuestVarGet("startOffsetz") + trQuestVarGet("bossposz")));
      trVectorQuestVarSet("start2", xsVectorSet(trQuestVarGet("bossposx") - trQuestVarGet("startOffsetx"),1.5,trQuestVarGet("bossposz") - trQuestVarGet("startOffsetz")));
      /**/ for(x=2; >0) {
      for(bb=1; >0) {
      trQuestVarSet("p1projxp3proj", trQuestVarGet("p1projxp3proj") + 1);
      if (trQuestVarGet("p1projxp3proj") > 1) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trQuestVarSet("p5proj", trQuestVarGet("p1projpointer"));
      trQuestVarSet("p1projxp3proj", 0);
      } else {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trQuestVarSet("p5proj", trQuestVarGet("p3projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p5proj"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p5proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep5projshootcount");
      trQuestVarSet("zdatalitep5projshootindex"+zdatacount, trQuestVarGet("p5proj"));
      trQuestVarSet("zdatalitep5projshootcount", zdatacount+1);
      trUnitTeleport(trVectorQuestVarGetX("start"+x+""),trVectorQuestVarGetY("start"+x+""),trVectorQuestVarGetZ("start"+x+""));
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("nickAngle"+x)) * 1.0, 0, Math_cos(trQuestVarGet("nickAngle"+x)) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("start"+x+"") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("start"+x+""));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("start"+x+""), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("start"+x+""), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p5proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p5proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      /**/ }
      trEventFire(319);
      }
      xsDisableRule("_escape_02_s1");
      trEcho("Trigger disabling rule escape_02_s1");
   }
}

rule _escape_02_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("escape") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep5projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep5projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep5projshootpointer", trQuestVarGet("zdatalitep5projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep5projshootpointer")) {
      trQuestVarSet("zdatalitep5projshootpointer", trQuestVarGet("zdatalitep5projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep5projshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep5projshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep5projshootcount") - 1;
      zdataremove = trQuestVarGet("zdatalitep5projshootpointer");
      trQuestVarSet("zdatalitep5projshootindex"+zdataremove, trQuestVarGet("zdatalitep5projshootindex"+zdatacount));
      trQuestVarSet("zdatalitep5projshootcount", zdatacount);
      trQuestVarSet("zdatalitep5projshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p5projshoot", trQuestVarGet("zdatalitep5projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p5projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p5proj"+zdatapointer+"target"),trVectorQuestVarGetY("p5proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p5proj"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep5projshootcount", 0);
      trQuestVarSet("zdatalitep5projshootpointer", 0);
      trQuestVarSet("p5projshoot", 0);
      trEventFire(317);
      }
      xsDisableRule("_escape_02_s2");
      trEcho("Trigger disabling rule escape_02_s2");
   }
}

rule _escape_03_s1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("nickspell") == 1){
      if(trQuestVarGet("portalRadius") >= 1){
      for(tempX0 = 0; > 1){}
      for(tempZ0 = 0; > 1){}
      for(tempX1 = 0; > 1){}
      for(tempZ1 = 0; > 1){}
      tempX0 = xsMin(trQuestVarGet("minTerrainx"), trQuestVarGet("maxTerrainx"));
      tempZ0 = xsMin(trQuestVarGet("minTerrainz"), trQuestVarGet("maxTerrainz"));
      tempX1 = xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("maxTerrainx"));
      tempZ1 = xsMax(trQuestVarGet("minTerrainz"), trQuestVarGet("maxTerrainz"));
      trPaintTerrain(tempX0, tempZ0, tempX1, tempZ1, trQuestVarGet("blacktype"), trQuestVarGet("blacksubtype"), false);
      trQuestVarSet("portalRadius", trQuestVarGet("portalRadius") - 1);
      trQuestVarSet("radius", trQuestVarGet("portalRadius") * trQuestVarGet("portalRadius"));
      /**/ for(z=0; <= trQuestVarGet("portalRadius") + 1) {
      /**/ for(x=trQuestVarGet("portalRadius") + 1; >=0) {
      /**/ if (x*x + z*z <= trQuestVarGet("radius")) {
      for(tempX0 = 0; > 1){}
      for(tempZ0 = 0; > 1){}
      for(tempX1 = 0; > 1){}
      for(tempZ1 = 0; > 1){}
      tempX0 = xsMin(xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("rockCenterx") - x), xsMin(trQuestVarGet("maxTerrainx"), trQuestVarGet("rockCenterx") + x));
      tempZ0 = xsMin(xsMax(trQuestVarGet("minTerrainz"), trQuestVarGet("rockCenterz") - z), xsMin(trQuestVarGet("maxTerrainz"), trQuestVarGet("rockCenterz") + z));
      tempX1 = xsMax(xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("rockCenterx") - x), xsMin(trQuestVarGet("maxTerrainx"), trQuestVarGet("rockCenterx") + x));
      tempZ1 = xsMax(xsMax(trQuestVarGet("minTerrainz"), trQuestVarGet("rockCenterz") - z), xsMin(trQuestVarGet("maxTerrainz"), trQuestVarGet("rockCenterz") + z));
      trPaintTerrain(tempX0, tempZ0, tempX1, tempZ1, trQuestVarGet("coral2type"), trQuestVarGet("coral2subtype"), false);
      /**/ break; }}}
      trEventFire(320);
      /**/ } else {
      trEventFire(321);
      }
      }
      xsDisableRule("_escape_03_s1");
      trEcho("Trigger disabling rule escape_03_s1");
   }
}

rule _escape_03_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVportalescapedelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVportalescapedelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVportalescapedelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVportalescapedelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVportalescapedelay_CompTime")) >= 250) {
   for(Accurate_Timer_QVportalescapedelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVportalescapedelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVportalescapedelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("escape") == 1){
      trQuestVarSet("nickAngle1", trQuestVarGet("nickAngle1") + 0.04);
      while (trQuestVarGet("nickAngle1") > (6.283185)) {
      trQuestVarSet("nickAngle1", trQuestVarGet("nickAngle1") - (6.283185));
      }
      while (0 > trQuestVarGet("nickAngle1")) {
      trQuestVarSet("nickAngle1", trQuestVarGet("nickAngle1") + 6.283185);
      }
      trQuestVarSet("nickAngle2", trQuestVarGet("nickAngle2") + 0.04);
      while (trQuestVarGet("nickAngle2") > (6.283185)) {
      trQuestVarSet("nickAngle2", trQuestVarGet("nickAngle2") - (6.283185));
      }
      while (0 > trQuestVarGet("nickAngle2")) {
      trQuestVarSet("nickAngle2", trQuestVarGet("nickAngle2") + 6.283185);
      }
      trEventFire(318);
      trQuestVarSet("soundplay", trQuestVarGet("soundplay") + 1);
      if(trQuestVarGet("soundplay") >= 4){
      trSoundPlayFN("lapadesconvert.wav", "2", -1, "","");
      trQuestVarSet("soundplay", 0);
      }
      }
      xsDisableRule("_escape_03_s2");
      trEcho("Trigger disabling rule escape_03_s2");
   }
}

rule _escape_04_success
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("escape") == 1){
      trQuestVarSet("escape", 0);
      trSoundPlayFN("arkantosarrive.wav", "3", -1, "","");
      trQuestVarSet("nickspell", 0);
      trEventFire(322);
      trUIFadeToColor(0,100,200,200,200,false);
      if(false) { trVectorQuestVarSet("bossmove", xsVectorSet(44.94, -0.00, 83.29));
      for(a=0; >1){}for(b=0; >1){}for(c=0; >1){} a = xsVectorGetX(trVectorQuestVarGet("bossmove"));b = xsVectorGetY(trVectorQuestVarGet("bossmove"));c = xsVectorGetZ(trVectorQuestVarGet("bossmove"));
      trVectorQuestVarSet("bossmove",xsVectorSet(a,b,c));}
      else {trVectorQuestVarSet("bossmove", xsVectorSet(44.94, -0.00, 83.29));}
      trQuestVarSet("bossHP", 0);
      trUnitSelectClear();
      trUnitSelectByID(6008);
      trUnitTeleport(trVectorQuestVarGetX("bossmove"),trVectorQuestVarGetY("bossmove"),trVectorQuestVarGetZ("bossmove"));
      trQuestVarSet("nickHPTotal", trQuestVarGet("nickHPTotal") - trUnitPercentDamaged());
      trQuestVarSet("zdataliteenemiescount", 0);
      trQuestVarSet("zdataliteenemiespointer", 0);
      trQuestVarSet("enemies", 0);
      trUnitSelectClear();
      trUnitSelectByID(6015);
      trUnitSelectByID(6014);
      trUnitSelectByID(6013);
      trUnitSelectByID(6009);
      trUnitSelectByID(6012);
      trUnitSelectByID(6011);
      trUnitSelectByID(6010);
      trUnitTeleport(trVectorQuestVarGetX("bossmove"),trVectorQuestVarGetY("bossmove"),trVectorQuestVarGetZ("bossmove"));
      trQuestVarSet("speech", trQuestVarGet("speech") + 1);
      if(trQuestVarGet("speech") >= 4){
      trQuestVarSet("speech", 0);
      }
      if(false) { trVectorQuestVarSet("bosspos", xsVectorSet(41.61, 0.00, 97.93));
      for(a=0; >1){}for(b=0; >1){}for(c=0; >1){} a = xsVectorGetX(trVectorQuestVarGet("bosspos"));b = xsVectorGetY(trVectorQuestVarGet("bosspos"));c = xsVectorGetZ(trVectorQuestVarGet("bosspos"));
      trVectorQuestVarSet("bosspos",xsVectorSet(a,b,c));}
      else {trVectorQuestVarSet("bosspos", xsVectorSet(41.61, 0.00, 97.93));}
      /**/ projectileConvert(1, "Catapult Shot", "Einheriar Boost SFX");
      /**/ projectileConvert(3, "Catapult Shot", "Einheriar Boost SFX");
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 3.0 + 1.0 * trGetWorldDifficulty() - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 3.0 + 1.0 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 3.0 + 1.0 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 3.0 + 1.0 * trGetWorldDifficulty());
      }
      xsDisableRule("_escape_04_success");
      trEcho("Trigger disabling rule escape_04_success");
   }
}

rule _escape_05_fail
highFrequency
inactive
{
   trUnitSelectClear();
   trUnitSelectByID(6008);
   bool bVar0 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));

   bool bVar1 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("escape") == 1){
      trQuestVarSet("escape", 0);
      trQuestVarSet("nickspell", 0);
      trEventFire(292);
      /**/ projectileConvert(1, "Catapult Shot", "Einheriar Boost SFX");
      /**/ projectileConvert(3, "Catapult Shot", "Einheriar Boost SFX");
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 3.0 + 1.0 * trGetWorldDifficulty() - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 3.0 + 1.0 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 3.0 + 1.0 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 3.0 + 1.0 * trGetWorldDifficulty());
      }
      xsDisableRule("_escape_05_fail");
      trEcho("Trigger disabling rule escape_05_fail");
   }
}

rule _Stage_C_10
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("boss", 0);
      trQuestVarSet("play", 0);
      trSoundPlayFN("default", "1", -1, ""+trStringQuestVarGet("oliver"+1*trQuestVarGet("speech"))+"","Zenophobia\SFA\Oliver");
      trEventFire(323);
      xsDisableRule("_Stage_C_10");
      trEcho("Trigger disabling rule Stage_C_10");
   }
}

rule _Stage_C_11
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, ""+trStringQuestVarGet("ace"+1*trQuestVarGet("speech"))+"","Zenophobia\SFA\Ace");
      trEventFire(324);
      xsDisableRule("_Stage_C_11");
      trEcho("Trigger disabling rule Stage_C_11");
   }
}

rule _Stage_C_12
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trStringQuestVarSet("bossHealthBar", "Stage 3: Capture Nick");
      trQuestVarSet("play", 1);
      trEventFire(325);
      trSoundPlayFN("default", "1", -1, "Lives "+1*trQuestVarGet("lives")+" Bombs "+1*trQuestVarGet("bombs")+": "+trStringQuestVarGet("bossHealthBar")+"","");
      xsDisableRule("_Stage_C_12");
      trEcho("Trigger disabling rule Stage_C_12");
   }
}

rule _Stage_C_13_rows
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("rightspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("leftspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(0,0,-2.0));
      trQuestVarSet("enemyRow1", 10);
      trVectorQuestVarSet("enemyRow2start", xsVectorSet(trQuestVarGet("leftspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow2end", xsVectorSet(trQuestVarGet("rightspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow2shift", xsVectorSet(0,0,-2.0));
      trQuestVarSet("enemyRow2", 10);
      trEventFire(326);
      xsDisableRule("_Stage_C_13_rows");
      trEcho("Trigger disabling rule Stage_C_13_rows");
   }
}

rule _Stage_C_14
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyBarge1start", xsVectorSet(trQuestVarGet("middlespawn") + 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge1end", xsVectorSet(trQuestVarGet("middlespawn") + 10,0,trQuestVarGet("upperSpawn") - 20));
      trQuestVarSet("enemyBarge1", 1);
      trVectorQuestVarSet("enemyBarge2start", xsVectorSet(trQuestVarGet("middlespawn") - 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge2end", xsVectorSet(trQuestVarGet("middlespawn") - 10,0,trQuestVarGet("upperSpawn") - 20));
      trQuestVarSet("enemyBarge2", 1);
      trEventFire(327);
      xsDisableRule("_Stage_C_14");
      trEcho("Trigger disabling rule Stage_C_14");
   }
}

rule _Stage_C_15_rows
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("rightspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("leftspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(0,0,-2.0));
      trQuestVarSet("enemyRow1", 10);
      trVectorQuestVarSet("enemyRow2start", xsVectorSet(trQuestVarGet("leftspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow2end", xsVectorSet(trQuestVarGet("rightspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow2shift", xsVectorSet(0,0,-2.0));
      trQuestVarSet("enemyRow2", 10);
      trEventFire(328);
      xsDisableRule("_Stage_C_15_rows");
      trEcho("Trigger disabling rule Stage_C_15_rows");
   }
}

rule _Stage_C_17
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middlespawn") + 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middlespawn") + 10,0,trVectorQuestVarGetZ("minExit")));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middlespawn") - 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middlespawn") - 10,0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemySpray2", 1);
      trEventFire(329);
      trVectorQuestVarSet("enemyBarge1start", xsVectorSet(trQuestVarGet("middlespawn"),0,trQuestVarGet("upperSpawn")));
      trQuestVarSet("enemyBarge1", 1);
      trVectorQuestVarSet("enemyBarge1end", xsVectorSet(trQuestVarGet("middlespawn"),0,trQuestVarGet("upperSpawn") - 20));
      xsDisableRule("_Stage_C_17");
      trEcho("Trigger disabling rule Stage_C_17");
   }
}

rule _Stage_C_16_rows
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("rightspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("leftspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(0,0,-2.0));
      trQuestVarSet("enemyRow1", 10);
      trVectorQuestVarSet("enemyRow2start", xsVectorSet(trQuestVarGet("leftspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow2end", xsVectorSet(trQuestVarGet("rightspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow2shift", xsVectorSet(0,0,-2.0));
      trQuestVarSet("enemyRow2", 10);
      trEventFire(330);
      xsDisableRule("_Stage_C_16_rows");
      trEcho("Trigger disabling rule Stage_C_16_rows");
   }
}

rule _Stage_C_18_stop
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("boss", 0);
      trQuestVarSet("play", 0);
      trSoundPlayFN("default", "1", -1, "Nick: Curses! Zeno sent you, didn't he?!","Zenophobia\SFA\Nick");
      trEventFire(331);
      xsDisableRule("_Stage_C_music1");
      xsDisableRule("_Stage_C_music2");
      trModifyProtounit("Petrobolos Shot", 2, 1, -3.999);
      trFadeOutMusic(3.0);
      xsDisableRule("_Stage_C_18_stop");
      trEcho("Trigger disabling rule Stage_C_18_stop");
   }
}

rule _Stage_C_19
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Oliver: Wow, he really can talk! This is so cool!","Zenophobia\SFA\Oliver");
      trEventFire(332);
      for(UnitID=0; >1) {}
      for(type=0; >1) {}
      for(ySearchTarget = 0; > 1){}
      ySearchTarget = trGetNextUnitScenarioNameNumber();
      while(ySearchTarget > trQuestVarGet("clearName")){
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("clearName"));
      if (kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("clearName"))) != -1){
      UnitID = kbGetBlockID(""+1*trQuestVarGet("clearName"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitDestroy();
      }
      trQuestVarSet("clearName", trQuestVarGet("clearName")+1);}
      xsDisableRule("_Stage_C_19");
      trEcho("Trigger disabling rule Stage_C_19");
   }
}

rule _Stage_C_20
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Nick: Heh, of course I'm cool. But anyway, stop chasing me! Tell Zeno I'm never going back there ever again!","Zenophobia\SFA\Nick");
      trEventFire(333);
      xsDisableRule("_Stage_C_20");
      trEcho("Trigger disabling rule Stage_C_20");
   }
}

rule _Stage_C_21
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Ace: Sorry bud. This is just part of the deal.","Zenophobia\SFA\Ace");
      trEventFire(334);
      xsDisableRule("_Stage_C_21");
      trEcho("Trigger disabling rule Stage_C_21");
   }
}

rule _Stage_C_22
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Nick: Fine, then! Zeno has sent hundreds of people after me, and none of them have succeeded. You'll be no different!","Zenophobia\SFA\Nick");
      trEventFire(335);
      xsDisableRule("_Stage_C_22");
      trEcho("Trigger disabling rule Stage_C_22");
   }
}

rule _Stage_C_23_start_boss
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 6);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("boss", 1);
      trQuestVarSet("bossHP", 30 + 5 * (trGetWorldDifficulty() + trQuestVarGet("power")));
      trStringQuestVarSet("bossName", "Nick ");
      trMusicPlay("Zenophobia\Storm Bringer.mp3", "221", 0.0);
      trEventFire(336);
      trQuestVarSet("play", 1);
      trQuestVarSet("bossID", 6008);
      trQuestVarSet("spells", 4);
      trEventFire(135);
      if(true) {
      trEventFire(337);
      /**/ } else {
      trEventFire(338);
      }
      if(trGetWorldDifficulty() >= 2){
      trQuestVarSet("spells", 5);
      }
      trUnitSelectClear();
      trUnitSelect("8599");
      trDamageUnitPercent(-100);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 4, 1, 6.0 + 2.0 * trGetWorldDifficulty() - trQuestVarGet("p"+4+"p"+zsps+"f1f"));
      trQuestVarSet("p"+4+"p"+zsps+"f1f", 6.0 + 2.0 * trGetWorldDifficulty());
      xsDisableRule("_Stage_C_23_start_boss");
      trEcho("Trigger disabling rule Stage_C_23_start_boss");
   }
}

rule _nick_music1
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 86);

   bool bVar1 = (trQuestVarGet("boss") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boss") == 1){
      trMusicPlay("Zenophobia\Storm Bringer.mp3", "221", 0.5);
      trEventFire(339);
      }
      xsDisableRule("_nick_music1");
      trEcho("Trigger disabling rule nick_music1");
   }
}

rule _nick_music2
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 86);

   bool bVar1 = (trQuestVarGet("boss") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boss") == 1){
      trMusicPlay("Zenophobia\Storm Bringer.mp3", "221", 0.5);
      trEventFire(336);
      }
      xsDisableRule("_nick_music2");
      trEcho("Trigger disabling rule nick_music2");
   }
}

rule _nick_a1_00_startup
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("nicka", 1);
      trQuestVarSet("waveCount", 12 + 4 * trGetWorldDifficulty());
      trQuestVarSet("waveAngleMod", 3.141592 / trQuestVarGet("waveCount"));
      trEventFire(305);
      trQuestVarSet("shoot", trQuestVarGet("waveCount"));
      trQuestVarSetFromRand("nickAngle", 0, trQuestVarGet("waveAngleMod"), false);
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + 1.570796);
      trEventFire(306);
      trEventFire(340);
      trQuestVarSet("nickVary", 1);
      trSoundPlayFN("lapadesconvert.wav", "2", -1, "","");
      for(bb=3 + trGetWorldDifficulty(); >0) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXpointer")+1);
      if (trQuestVarGet("spareSFXpointer") > trQuestVarGet("spareSFXend")) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXstart"));
      }
      trQuestVarSet("spareSFX", trQuestVarGet("spareSFXpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("spareSFX"));
      trUnitChangeProtoUnit("UI Range Indicator Norse SFX");
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteportalscount");
      trQuestVarSet("zdataliteportalsindex"+zdatacount, trQuestVarGet("spareSFX"));
      trQuestVarSet("zdataliteportalscount", zdatacount+1);
      }
      trEventFire(341);
      trQuestVarSet("portalCount", 3 + trGetWorldDifficulty());
      trQuestVarSet("portalAngleMod", 6.283185 / trQuestVarGet("portalCount"));
      trEventFire(342);
      xsDisableRule("_nick_a1_00_startup");
      trEcho("Trigger disabling rule nick_a1_00_startup");
   }
}

rule _nick_a1_01_m1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVportaldelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVportaldelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVportaldelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVportaldelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVportaldelaytimer_CompTime")) >= 10) {
   for(Accurate_Timer_QVportaldelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVportaldelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVportaldelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("nicka") == 1){
      trVectorQuestVarSet("portalCenter", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossposz")));
      trQuestVarSet("portalAngle", trQuestVarGet("portalAngle") - 0.02);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteportalscount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteportalscount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteportalspointer", trQuestVarGet("zdataliteportalspointer")-1);
      if (0 > trQuestVarGet("zdataliteportalspointer")) {
      trQuestVarSet("zdataliteportalspointer", trQuestVarGet("zdataliteportalscount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteportalspointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdataliteportalsindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdataliteportalscount") - 1;
      zdataremove = trQuestVarGet("zdataliteportalspointer");
      trQuestVarSet("zdataliteportalsindex"+zdataremove, trQuestVarGet("zdataliteportalsindex"+zdatacount));
      trQuestVarSet("zdataliteportalscount", zdatacount);
      trQuestVarSet("zdataliteportalspointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("portals", trQuestVarGet("zdataliteportalsindex"+zdatapointer));
      UnitID = trQuestVarGet("portals");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("portalAngle")) * 8.0, 0, Math_cos(trQuestVarGet("portalAngle")) * 8.0));
      trVectorQuestVarSet("dir", trVectorQuestVarGet("dir") + trVectorQuestVarGet("portalCenter"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("dir");b = trVectorQuestVarGetY("dir");c = trVectorQuestVarGetZ("dir");
      trVectorQuestVarSet("dir",xsVectorSet(a,b,c));}
      trUnitTeleport(trVectorQuestVarGetX("dir"),trVectorQuestVarGetY("dir"),trVectorQuestVarGetZ("dir"));
      trQuestVarSet("portalAngle", trQuestVarGet("portalAngle") + trQuestVarGet("portalAngleMod"));
      while (trQuestVarGet("portalAngle") > (6.283185)) {
      trQuestVarSet("portalAngle", trQuestVarGet("portalAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("portalAngle")) {
      trQuestVarSet("portalAngle", trQuestVarGet("portalAngle") + 6.283185);
      }
      }
      trEventFire(343);
      }
      xsDisableRule("_nick_a1_01_m1");
      trEcho("Trigger disabling rule nick_a1_01_m1");
   }
}

rule _nick_a1_01_m2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("nicka") == 1){
      trEventFire(341);
      }
      xsDisableRule("_nick_a1_01_m2");
      trEcho("Trigger disabling rule nick_a1_01_m2");
   }
}

rule _nick_a1_02_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_CompTime")) >= 1500 + 10 * trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer2_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("nicka") == 1){
      for(bb=3 + trGetWorldDifficulty(); >0) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p4proj"));
      for(zdatapointer=0;>1){}
      if (trQuestVarGet("zdataliteportalscount") == 0) {
      trQuestVarSet("portals", -1);
      } else {
      trQuestVarSet("zdataliteportalspointer", trQuestVarGet("zdataliteportalspointer")-1);
      if (0 > trQuestVarGet("zdataliteportalspointer")) {
      trQuestVarSet("zdataliteportalspointer", trQuestVarGet("zdataliteportalscount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteportalspointer");
      trQuestVarSet("portals", trQuestVarGet("zdataliteportalsindex"+zdatapointer));
      }
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("portals"), true));
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep7projshootcount");
      trQuestVarSet("zdatalitep7projshootindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdatalitep7projshootcount", zdatacount+1);
      trVectorQuestVarSet("dir", xsVectorSet(trQuestVarGet("playerposx") - trQuestVarGet("V1x"),0,trQuestVarGet("playerposz") - trQuestVarGet("V1z")));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p7proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p7proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      trEventFire(344);
      trSoundPlayFN("ui\lightning1.wav", "3", -1, "","");
      trSoundPlayFN("titanfall.wav", "1", -1, "","");
      }
      xsDisableRule("_nick_a1_02_s1");
      trEcho("Trigger disabling rule nick_a1_02_s1");
   }
}

rule _nick_a1_02_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("nicka") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep7projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep7projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep7projshootpointer", trQuestVarGet("zdatalitep7projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep7projshootpointer")) {
      trQuestVarSet("zdatalitep7projshootpointer", trQuestVarGet("zdatalitep7projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep7projshootpointer");
      trQuestVarSet("p7projshoot", trQuestVarGet("zdatalitep7projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p7projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p7proj"+zdatapointer+"target"),trVectorQuestVarGetY("p7proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p7proj"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep7projshootcount", 0);
      trQuestVarSet("zdatalitep7projshootpointer", 0);
      trQuestVarSet("p7projshoot", 0);
      trEventFire(340);
      }
      xsDisableRule("_nick_a1_02_s2");
      trEcho("Trigger disabling rule nick_a1_02_s2");
   }
}

rule _nick_a1_03
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);

   trUnitSelectClear();
   trUnitSelectByID(6008);
   bool bVar1 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("nicka", 0);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteportalscount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteportalscount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteportalspointer", trQuestVarGet("zdataliteportalspointer")-1);
      if (0 > trQuestVarGet("zdataliteportalspointer")) {
      trQuestVarSet("zdataliteportalspointer", trQuestVarGet("zdataliteportalscount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteportalspointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdataliteportalsindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdataliteportalscount") - 1;
      zdataremove = trQuestVarGet("zdataliteportalspointer");
      trQuestVarSet("zdataliteportalsindex"+zdataremove, trQuestVarGet("zdataliteportalsindex"+zdatacount));
      trQuestVarSet("zdataliteportalscount", zdatacount);
      trQuestVarSet("zdataliteportalspointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("portals", trQuestVarGet("zdataliteportalsindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("portals"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("portals"));
      trUnitTeleport(4.42, 0.00, 92.33);
      }
      trEventFire(345);
      xsDisableRule("_nick_a1_03");
      trEcho("Trigger disabling rule nick_a1_03");
   }
}

rule _boundary_00_startup
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("nickspell", 1);
      trOverlayText("Boundary Barrage", 3.0, 560, 360, 800);
      trVectorQuestVarSet("bossmove", xsVectorSet(trQuestVarGet("playCenterx"),0,trQuestVarGet("playCenterz") + 3));
      trQuestVarSet("boundary", 1);
      trEventFire(346);
      trQuestVarSet("bossHP", 40 + 7 * (trGetWorldDifficulty() + trQuestVarGet("power")));
      trQuestVarSet("alternate", 1);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 4, 1, 8.0 + 1.0 * trGetWorldDifficulty() - trQuestVarGet("p"+4+"p"+zsps+"f1f"));
      trQuestVarSet("p"+4+"p"+zsps+"f1f", 8.0 + 1.0 * trGetWorldDifficulty());
      trEventFire(347);
      trStringQuestVarSet("bossName", "Boundary Barrage ");
      xsDisableRule("_boundary_00_startup");
      trEcho("Trigger disabling rule boundary_00_startup");
   }
}

rule _boundary_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 2000) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boundary") == 1){
      trQuestVarSet("shoot", 36 + 12 * trGetWorldDifficulty());
      trQuestVarSet("alternate", 0.0 - trQuestVarGet("alternate"));
      trEventFire(348);
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossposz")));
      trSoundPlayFN("mirrortowerfire2.wav", "1", -1, "","");
      trEventFire(349);
      trEventFire(350);
      }
      xsDisableRule("_boundary_01");
      trEcho("Trigger disabling rule boundary_01");
   }
}

rule _boundary_02_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boundary") == 1){
      if(trGetWorldDifficulty() < 2){
      trQuestVarSetFromRand("targetz", trQuestVarGet("minBoundz"), trQuestVarGet("bossposz"), false);
      if(trQuestVarGet("alternate") == 1){
      trVectorQuestVarSet("target", xsVectorSet(trQuestVarGet("maxBoundx"),0,trQuestVarGet("targetz")));
      } else {
      trVectorQuestVarSet("target", xsVectorSet(trQuestVarGet("minBoundx"),0,trQuestVarGet("targetz")));
      }
      } else {
      trQuestVarSetFromRand("targetx", trQuestVarGet("minBoundx"), trQuestVarGet("maxBoundx"), false);
      trVectorQuestVarSet("target", xsVectorSet(trQuestVarGet("targetx"),0,trQuestVarGet("maxBoundz")));
      }
      for(bb=1; >0) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p4proj"));
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep7projshootcount");
      trQuestVarSet("zdatalitep7projshootindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdatalitep7projshootcount", zdatacount+1);
      trVectorQuestVarSet("p7proj"+zdatacount+"target", trVectorQuestVarGet("target"));
      trVectorQuestVarSet("p7proj"+zdatacount+"dir", xsVectorSet(trQuestVarGet("targetx") - trQuestVarGet("shootStartx"),0,trQuestVarGet("targetz") - trQuestVarGet("shootStartz")));
      }
      trEventFire(351);
      }
      xsDisableRule("_boundary_02_s1");
      trEcho("Trigger disabling rule boundary_02_s1");
   }
}

rule _boundary_02_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("boundary") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep7projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep7projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep7projshootpointer", trQuestVarGet("zdatalitep7projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep7projshootpointer")) {
      trQuestVarSet("zdatalitep7projshootpointer", trQuestVarGet("zdatalitep7projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep7projshootpointer");
      trQuestVarSet("p7projshoot", trQuestVarGet("zdatalitep7projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p7projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p7proj"+zdatapointer+"target"),trVectorQuestVarGetY("p7proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p7proj"+zdatapointer+"target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep7projbouncecount");
      trQuestVarSet("zdatalitep7projbounceindex"+zdatacount, trQuestVarGet("p7projshoot"));
      trQuestVarSet("zdatalitep7projbouncecount", zdatacount+1);
      trVectorQuestVarSet("p7projbounce"+zdatacount+"dir", trVectorQuestVarGet("p7proj"+zdatapointer+"dir"));
      }
      trQuestVarSet("zdatalitep7projshootcount", 0);
      trQuestVarSet("zdatalitep7projshootpointer", 0);
      trQuestVarSet("p7projshoot", 0);
      trQuestVarSet("shoot", trQuestVarGet("shoot") - 1);
      if(trQuestVarGet("shoot") >= 1){
      trEventFire(348);
      }
      }
      xsDisableRule("_boundary_02_s2");
      trEcho("Trigger disabling rule boundary_02_s2");
   }
}

rule __boundary_proj_code
highFrequency
active
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      xsEnableRule("zenowashereboundaryproj");
      xsDisableSelf();}}
      /**/ void boundaryProj(int c = 0) {
      /**/ trMutateSelected(kbGetProtoUnitID("Cinematic Block"));
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      /**/ trMutateSelected(kbGetProtoUnitID("Wadjet Spit"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep7projbounceshootcount");
      trQuestVarSet("zdatalitep7projbounceshootindex"+zdatacount, trQuestVarGet("p7projbounce"));
      trQuestVarSet("zdatalitep7projbounceshootcount", zdatacount+1);
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("p7projbounce"+c+"dir") / trVectorQuestVarGetX("p7projbounce"+c+"dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("p7projbounce"+c+"dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minBound"), 0, trVectorQuestVarGetX("minBound") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxBound"), 0, trVectorQuestVarGetX("maxBound") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("p7projbounce"+c+"dir") > -0.01 && trVectorQuestVarGetZ("p7projbounce"+c+"dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("p7projbounce"+c+"dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minBound") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minBound")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxBound") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxBound")));
      }
      if (trVectorQuestVarGetX("p7projbounce"+c+"dir") > -0.01 && trVectorQuestVarGetX("p7projbounce"+c+"dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minBound") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxBound")) {
      trVectorQuestVarSet("p7projbounce"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p7projbounce"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      /**/ }
      rule zenowashereboundaryproj
      inactive
      highFrequency
      {
      if(true) {
      xsDisableSelf();
      xsDisableRule("__boundary_proj_code");
      trEcho("Trigger disabling rule _boundary_proj_code");
   }
}

rule _boundary_03_b1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("boundary") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep7projbouncecount") > (10) && (10) > 0) {
      zdatasearch = 10;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep7projbouncecount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep7projbouncepointer", trQuestVarGet("zdatalitep7projbouncepointer")-1);
      if (0 > trQuestVarGet("zdatalitep7projbouncepointer")) {
      trQuestVarSet("zdatalitep7projbouncepointer", trQuestVarGet("zdatalitep7projbouncecount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep7projbouncepointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep7projbounceindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep7projbouncecount") - 1;
      zdataremove = trQuestVarGet("zdatalitep7projbouncepointer");
      trQuestVarSet("zdatalitep7projbounceindex"+zdataremove, trQuestVarGet("zdatalitep7projbounceindex"+zdatacount));
      trQuestVarSet("zdatalitep7projbouncecount", zdatacount);
      trQuestVarSet("zdatalitep7projbouncepointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p7projbounce", trQuestVarGet("zdatalitep7projbounceindex"+zdatapointer));
      UnitID = trQuestVarGet("p7projbounce");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("p7projbounce"), true));
      /**/ if (trQuestVarGet("V1z") >= trQuestVarGet("maxBouncez") && trQuestVarGet("p7projbounce"+zdatapointer+"dirz") > 0) {
      trVectorQuestVarSet("V1", xsVectorSet(trQuestVarGet("V1x"),1.0,trQuestVarGet("minBoundz")));
      /**/ boundaryProj(zdatapointer);
      /**/ } else if (trQuestVarGet("V1z") <= trQuestVarGet("minBouncez") && trQuestVarGet("p7projbounce"+zdatapointer+"dirz") < 0) {
      trVectorQuestVarSet("V1", xsVectorSet(trQuestVarGet("V1x"),1.0,trQuestVarGet("maxBoundz")));
      /**/ boundaryProj(zdatapointer);
      /**/ } else if (trQuestVarGet("V1x") >= trQuestVarGet("maxBouncex") && trQuestVarGet("p7projbounce"+zdatapointer+"dirx") > 0) {
      trVectorQuestVarSet("V1", xsVectorSet(trQuestVarGet("minBoundx"),1.0,trQuestVarGet("V1z")));
      /**/ boundaryProj(zdatapointer);
      /**/ } else if (trQuestVarGet("V1x") <= trQuestVarGet("minBouncex") && trQuestVarGet("p7projbounce"+zdatapointer+"dirx") < 0) {
      trVectorQuestVarSet("V1", xsVectorSet(trQuestVarGet("maxBoundx"),1.0,trQuestVarGet("V1z")));
      /**/ boundaryProj(zdatapointer);
      /**/ }
      }
      trEventFire(352);
      }
      xsDisableRule("_boundary_03_b1");
      trEcho("Trigger disabling rule boundary_03_b1");
   }
}

rule _boundary_03_b2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay2_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay2_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("boundary") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep7projbounceshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep7projbounceshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep7projbounceshootpointer", trQuestVarGet("zdatalitep7projbounceshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep7projbounceshootpointer")) {
      trQuestVarSet("zdatalitep7projbounceshootpointer", trQuestVarGet("zdatalitep7projbounceshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep7projbounceshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep7projbounceshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep7projbounceshootcount") - 1;
      zdataremove = trQuestVarGet("zdatalitep7projbounceshootpointer");
      trQuestVarSet("zdatalitep7projbounceshootindex"+zdataremove, trQuestVarGet("zdatalitep7projbounceshootindex"+zdatacount));
      trQuestVarSet("zdatalitep7projbounceshootcount", zdatacount);
      trQuestVarSet("zdatalitep7projbounceshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p7projbounceshoot", trQuestVarGet("zdatalitep7projbounceshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p7projbounceshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p7projbounce"+zdatapointer+"target"),trVectorQuestVarGetY("p7projbounce"+zdatapointer+"target"),trVectorQuestVarGetZ("p7projbounce"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep7projbounceshootcount", 0);
      trQuestVarSet("zdatalitep7projbounceshootpointer", 0);
      trQuestVarSet("p7projbounceshoot", 0);
      trEventFire(349);
      }
      xsDisableRule("_boundary_03_b2");
      trEcho("Trigger disabling rule boundary_03_b2");
   }
}

rule _boundary_04_cleared
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("boundary") == 0);

   bool bVar1 = (trQuestVarGet("bomb") == 1);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boundary") == 1){
      trEventFire(346);
      }
      trQuestVarSet("zdatalitep7projbounceshootcount", 0);
      trQuestVarSet("zdatalitep7projbounceshootpointer", 0);
      trQuestVarSet("p7projbounceshoot", 0);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep7projbouncecount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep7projbouncecount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep7projbouncepointer", trQuestVarGet("zdatalitep7projbouncepointer")-1);
      if (0 > trQuestVarGet("zdatalitep7projbouncepointer")) {
      trQuestVarSet("zdatalitep7projbouncepointer", trQuestVarGet("zdatalitep7projbouncecount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep7projbouncepointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdatalitep7projbounceindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdatalitep7projbouncecount") - 1;
      zdataremove = trQuestVarGet("zdatalitep7projbouncepointer");
      trQuestVarSet("zdatalitep7projbounceindex"+zdataremove, trQuestVarGet("zdatalitep7projbounceindex"+zdatacount));
      trQuestVarSet("zdatalitep7projbouncecount", zdatacount);
      trQuestVarSet("zdatalitep7projbouncepointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p7projbounce", trQuestVarGet("zdatalitep7projbounceindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("p7projbounce"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("p7projbounce"));
      trUnitTeleport(3.10, 0.00, 2.68);
      }
      trQuestVarSet("zdatalitep7projbouncecount", 0);
      trQuestVarSet("zdatalitep7projbouncepointer", 0);
      trQuestVarSet("p7projbounce", 0);
      xsDisableRule("_boundary_04_cleared");
      trEcho("Trigger disabling rule boundary_04_cleared");
   }
}

rule _boundary_05_end
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);

   trUnitSelectClear();
   trUnitSelectByID(6008);
   bool bVar1 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("boundary", 0);
      trEventFire(353);
      trQuestVarSet("nickspell", 0);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 4, 1, 6.0 + 2.0 * trGetWorldDifficulty() - trQuestVarGet("p"+4+"p"+zsps+"f1f"));
      trQuestVarSet("p"+4+"p"+zsps+"f1f", 6.0 + 2.0 * trGetWorldDifficulty());
      xsDisableRule("_boundary_05_end");
      trEcho("Trigger disabling rule boundary_05_end");
   }
}

rule _nick_a2_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("nicka", 1);
      trQuestVarSet("waveCount", 12 + 4 * trGetWorldDifficulty());
      trQuestVarSet("waveAngleMod", 3.141592 / trQuestVarGet("waveCount"));
      trEventFire(305);
      trQuestVarSet("shoot", trQuestVarGet("waveCount"));
      trQuestVarSetFromRand("nickAngle", 0, trQuestVarGet("waveAngleMod"), false);
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + 1.570796);
      trEventFire(306);
      trQuestVarSet("nickVary", 1);
      trSoundPlayFN("lapadesconvert.wav", "2", -1, "","");
      trEventFire(341);
      trQuestVarSet("portalCount", 3 + trGetWorldDifficulty());
      trQuestVarSet("portalAngleMod", 6.283185 / trQuestVarGet("portalCount"));
      trEventFire(354);
      trEventFire(355);
      trQuestVarSet("bossHP", 30 + 5 * (trGetWorldDifficulty() + trQuestVarGet("power")));
      xsDisableRule("_nick_a2_00_startup");
      trEcho("Trigger disabling rule nick_a2_00_startup");
   }
}

rule _nick_a2_01_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_CompTime")) >= 200 + 5 * trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer2_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("nicka") == 1){
      for(bb=3 + trGetWorldDifficulty(); >0) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p4proj"));
      for(zdatapointer=0;>1){}
      if (trQuestVarGet("zdataliteportalscount") == 0) {
      trQuestVarSet("portals", -1);
      } else {
      trQuestVarSet("zdataliteportalspointer", trQuestVarGet("zdataliteportalspointer")-1);
      if (0 > trQuestVarGet("zdataliteportalspointer")) {
      trQuestVarSet("zdataliteportalspointer", trQuestVarGet("zdataliteportalscount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteportalspointer");
      trQuestVarSet("portals", trQuestVarGet("zdataliteportalsindex"+zdatapointer));
      }
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("portals"), true));
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep7projshootcount");
      trQuestVarSet("zdatalitep7projshootindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdatalitep7projshootcount", zdatacount+1);
      trVectorQuestVarSet("dir", xsVectorSet(trQuestVarGet("V1x") - trQuestVarGet("portalCenterx"),0,trQuestVarGet("V1z") - trQuestVarGet("portalCenterz")));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p7proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p7proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      trEventFire(356);
      trSoundPlayFN("ui\lightning1.wav", "3", -1, "","");
      trSoundPlayFN("titanfall.wav", "1", -1, "","");
      }
      xsDisableRule("_nick_a2_01_s1");
      trEcho("Trigger disabling rule nick_a2_01_s1");
   }
}

rule _nick_a2_01_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("nicka") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep7projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep7projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep7projshootpointer", trQuestVarGet("zdatalitep7projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep7projshootpointer")) {
      trQuestVarSet("zdatalitep7projshootpointer", trQuestVarGet("zdatalitep7projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep7projshootpointer");
      trQuestVarSet("p7projshoot", trQuestVarGet("zdatalitep7projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p7projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p7proj"+zdatapointer+"target"),trVectorQuestVarGetY("p7proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p7proj"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep7projshootcount", 0);
      trQuestVarSet("zdatalitep7projshootpointer", 0);
      trQuestVarSet("p7projshoot", 0);
      trEventFire(354);
      }
      xsDisableRule("_nick_a2_01_s2");
      trEcho("Trigger disabling rule nick_a2_01_s2");
   }
}

rule _nick_a2_02
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);

   trUnitSelectClear();
   trUnitSelectByID(6008);
   bool bVar1 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("nicka", 0);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteportalscount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteportalscount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteportalspointer", trQuestVarGet("zdataliteportalspointer")-1);
      if (0 > trQuestVarGet("zdataliteportalspointer")) {
      trQuestVarSet("zdataliteportalspointer", trQuestVarGet("zdataliteportalscount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteportalspointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdataliteportalsindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdataliteportalscount") - 1;
      zdataremove = trQuestVarGet("zdataliteportalspointer");
      trQuestVarSet("zdataliteportalsindex"+zdataremove, trQuestVarGet("zdataliteportalsindex"+zdatacount));
      trQuestVarSet("zdataliteportalscount", zdatacount);
      trQuestVarSet("zdataliteportalspointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("portals", trQuestVarGet("zdataliteportalsindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("portals"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("portals"));
      trUnitTeleport(4.42, 0.00, 92.33);
      }
      trEventFire(357);
      xsDisableRule("_nick_a2_02");
      trEcho("Trigger disabling rule nick_a2_02");
   }
}

rule _crossfire_00_startup
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("nickspell", 1);
      trOverlayText("Crossfire", 3.0, 622, 360, 800);
      trVectorQuestVarSet("bossmove", xsVectorSet(trQuestVarGet("playCenterx"),0,trQuestVarGet("playCenterz") + 3));
      trQuestVarSet("crossfire", 1);
      trQuestVarSet("bossHP", 40 + 7 * (trGetWorldDifficulty() + trQuestVarGet("power")));
      for(bb=4; >0) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXpointer")+1);
      if (trQuestVarGet("spareSFXpointer") > trQuestVarGet("spareSFXend")) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXstart"));
      }
      trQuestVarSet("spareSFX", trQuestVarGet("spareSFXpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("spareSFX"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitecrossfireportalscount");
      trQuestVarSet("zdatalitecrossfireportalsindex"+zdatacount, trQuestVarGet("spareSFX"));
      trQuestVarSet("zdatalitecrossfireportalscount", zdatacount+1);
      trUnitChangeProtoUnit("UI Range Indicator Norse SFX");
      }
      trEventFire(358);
      trQuestVarSet("stepCount", 4 * (trQuestVarGet("maxBouncex") - trQuestVarGet("minBouncex")));
      trVectorQuestVarSet("crossStep", xsVectorSet((trQuestVarGet("maxBouncex") - trQuestVarGet("minBouncex") - 2.0) / trQuestVarGet("stepCount"),0,(trQuestVarGet("maxBouncez") - trQuestVarGet("minBouncez") - 2.0) / trQuestVarGet("stepCount")));
      trVectorQuestVarSet("crossfirePortal0step", xsVectorSet(trQuestVarGet("crossStepx"),0,0));
      trVectorQuestVarSet("crossfirePortal1step", xsVectorSet(0,0,0.0 - trQuestVarGet("crossStepz")));
      trVectorQuestVarSet("crossfirePortal2step", xsVectorSet(0.0 - trQuestVarGet("crossStepx"),0,0));
      trVectorQuestVarSet("crossfirePortal3step", xsVectorSet(0,0,trQuestVarGet("crossStepz")));
      trVectorQuestVarSet("crossfirePortal0start", xsVectorSet(trQuestVarGet("minBouncex") + 1.0,1.0,trQuestVarGet("maxBouncez") - 1.0));
      trVectorQuestVarSet("crossfirePortal1start", xsVectorSet(trQuestVarGet("maxBouncex") - 1.0,1.0,trQuestVarGet("maxBouncez") - 1.0));
      trVectorQuestVarSet("crossfirePortal2start", xsVectorSet(trQuestVarGet("maxBouncex") - 1.0,1.0,trQuestVarGet("minBouncez") + 1.0));
      trVectorQuestVarSet("crossfirePortal3start", xsVectorSet(trQuestVarGet("minBouncex") + 1.0,1.0,trQuestVarGet("minBouncez") + 1.0));
      trVectorQuestVarSet("crossfirePortal0dir", xsVectorSet(0,0,-1.0));
      trVectorQuestVarSet("crossfirePortal1dir", xsVectorSet(-1.0,0,0));
      trVectorQuestVarSet("crossfirePortal2dir", xsVectorSet(0,0,1.0));
      trVectorQuestVarSet("crossfirePortal3dir", xsVectorSet(1.0,0,0));
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 6.0 + 2.0 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 6.0 + 2.0 * trGetWorldDifficulty());
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitecrossfirePortalscount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitecrossfirePortalscount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitecrossfirePortalspointer", trQuestVarGet("zdatalitecrossfirePortalspointer")-1);
      if (0 > trQuestVarGet("zdatalitecrossfirePortalspointer")) {
      trQuestVarSet("zdatalitecrossfirePortalspointer", trQuestVarGet("zdatalitecrossfirePortalscount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitecrossfirePortalspointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdatalitecrossfirePortalsindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdatalitecrossfirePortalscount") - 1;
      zdataremove = trQuestVarGet("zdatalitecrossfirePortalspointer");
      trQuestVarSet("zdatalitecrossfirePortalsindex"+zdataremove, trQuestVarGet("zdatalitecrossfirePortalsindex"+zdatacount));
      trQuestVarSet("zdatalitecrossfirePortalscount", zdatacount);
      trQuestVarSet("zdatalitecrossfirePortalspointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("crossfirePortals", trQuestVarGet("zdatalitecrossfirePortalsindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("crossfirePortals"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("crossfirePortals"));
      trUnitTeleport(trVectorQuestVarGetX("crossfirePortal"+zdatapointer+"start"),trVectorQuestVarGetY("crossfirePortal"+zdatapointer+"start"),trVectorQuestVarGetZ("crossfirePortal"+zdatapointer+"start"));
      trVectorQuestVarSet("crossfirePortal"+zdatapointer+"pos", trVectorQuestVarGet("crossfirePortal"+zdatapointer+"start"));
      }
      trEventFire(359);
      trStringQuestVarSet("bossName", "Crossfire ");
      xsDisableRule("_crossfire_00_startup");
      trEcho("Trigger disabling rule crossfire_00_startup");
   }
}

rule _crossfire_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 1500) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("crossfire") == 1){
      trQuestVarCopy("step", "stepCount");
      trEventFire(360);
      trEventFire(361);
      }
      xsDisableRule("_crossfire_01");
      trEcho("Trigger disabling rule crossfire_01");
   }
}

rule _crossfire_02_m1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVstepTimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVstepTimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVstepTimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVstepTimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVstepTimer_CompTime")) >= 10) {
   for(Accurate_Timer_QVstepTimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVstepTimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVstepTimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("crossfire") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitecrossfirePortalscount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitecrossfirePortalscount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitecrossfirePortalspointer", trQuestVarGet("zdatalitecrossfirePortalspointer")-1);
      if (0 > trQuestVarGet("zdatalitecrossfirePortalspointer")) {
      trQuestVarSet("zdatalitecrossfirePortalspointer", trQuestVarGet("zdatalitecrossfirePortalscount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitecrossfirePortalspointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitecrossfirePortalsindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitecrossfirePortalscount") - 1;
      zdataremove = trQuestVarGet("zdatalitecrossfirePortalspointer");
      trQuestVarSet("zdatalitecrossfirePortalsindex"+zdataremove, trQuestVarGet("zdatalitecrossfirePortalsindex"+zdatacount));
      trQuestVarSet("zdatalitecrossfirePortalscount", zdatacount);
      trQuestVarSet("zdatalitecrossfirePortalspointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("crossfirePortals", trQuestVarGet("zdatalitecrossfirePortalsindex"+zdatapointer));
      UnitID = trQuestVarGet("crossfirePortals");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("crossfirePortal"+zdatapointer+"pos", trVectorQuestVarGet("crossfirePortal"+zdatapointer+"pos") + trVectorQuestVarGet("crossfirePortal"+zdatapointer+"step"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("crossfirePortal"+zdatapointer+"pos");b = trVectorQuestVarGetY("crossfirePortal"+zdatapointer+"pos");c = trVectorQuestVarGetZ("crossfirePortal"+zdatapointer+"pos");
      trVectorQuestVarSet("crossfirePortal"+zdatapointer+"pos",xsVectorSet(a,b,c));}
      trUnitTeleport(trVectorQuestVarGetX("crossfirePortal"+zdatapointer+"pos"),trVectorQuestVarGetY("crossfirePortal"+zdatapointer+"pos"),trVectorQuestVarGetZ("crossfirePortal"+zdatapointer+"pos"));
      }
      trEventFire(362);
      }
      xsDisableRule("_crossfire_02_m1");
      trEcho("Trigger disabling rule crossfire_02_m1");
   }
}

rule _crossfire_02_m2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("crossfire") == 1){
      trEventFire(360);
      trQuestVarSet("step", trQuestVarGet("step") - 1);
      if(trQuestVarGet("step") <= 0){
      trQuestVarCopy("step", "stepCount");
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitecrossfirePortalscount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitecrossfirePortalscount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitecrossfirePortalspointer", trQuestVarGet("zdatalitecrossfirePortalspointer")-1);
      if (0 > trQuestVarGet("zdatalitecrossfirePortalspointer")) {
      trQuestVarSet("zdatalitecrossfirePortalspointer", trQuestVarGet("zdatalitecrossfirePortalscount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitecrossfirePortalspointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitecrossfirePortalsindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitecrossfirePortalscount") - 1;
      zdataremove = trQuestVarGet("zdatalitecrossfirePortalspointer");
      trQuestVarSet("zdatalitecrossfirePortalsindex"+zdataremove, trQuestVarGet("zdatalitecrossfirePortalsindex"+zdatacount));
      trQuestVarSet("zdatalitecrossfirePortalscount", zdatacount);
      trQuestVarSet("zdatalitecrossfirePortalspointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("crossfirePortals", trQuestVarGet("zdatalitecrossfirePortalsindex"+zdatapointer));
      UnitID = trQuestVarGet("crossfirePortals");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("crossfirePortal"+zdatapointer+"pos", trVectorQuestVarGet("crossfirePortal"+zdatapointer+"start"));
      trUnitTeleport(trVectorQuestVarGetX("crossfirePortal"+zdatapointer+"pos"),trVectorQuestVarGetY("crossfirePortal"+zdatapointer+"pos"),trVectorQuestVarGetZ("crossfirePortal"+zdatapointer+"pos"));
      }
      if(trQuestVarGet("bomb") == 0){
      for(bb=4; >0) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p4proj"));
      for(zdatapointer=0;>1){}
      if (trQuestVarGet("zdatalitecrossfirePortalscount") == 0) {
      trQuestVarSet("crossfirePortals", -1);
      } else {
      trQuestVarSet("zdatalitecrossfirePortalspointer", trQuestVarGet("zdatalitecrossfirePortalspointer")-1);
      if (0 > trQuestVarGet("zdatalitecrossfirePortalspointer")) {
      trQuestVarSet("zdatalitecrossfirePortalspointer", trQuestVarGet("zdatalitecrossfirePortalscount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitecrossfirePortalspointer");
      trQuestVarSet("crossfirePortals", trQuestVarGet("zdatalitecrossfirePortalsindex"+zdatapointer));
      }
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("crossfirePortals"), true));
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep7projshootcount");
      trQuestVarSet("zdatalitep7projshootindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdatalitep7projshootcount", zdatacount+1);
      trVectorQuestVarSet("dir", xsVectorSet(trQuestVarGet("playerposx") - trQuestVarGet("V1x"),0,trQuestVarGet("playerposz") - trQuestVarGet("V1z")));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p7proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p7proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      trSoundPlayFN("titanfall.wav", "1", -1, "","");
      trSoundPlayFN("ui\lightning1.wav", "3", -1, "","");
      trEventFire(363);
      }
      }
      }
      xsDisableRule("_crossfire_02_m2");
      trEcho("Trigger disabling rule crossfire_02_m2");
   }
}

rule _crossfire_03_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer3_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer3_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer3_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer3_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer3_CompTime")) >= 160 + 8 * trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer3_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer3_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer3_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("crossfire") == 1){
      for(bb=4; >0) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p3proj"));
      for(zdatapointer=0;>1){}
      if (trQuestVarGet("zdatalitecrossfirePortalscount") == 0) {
      trQuestVarSet("crossfirePortals", -1);
      } else {
      trQuestVarSet("zdatalitecrossfirePortalspointer", trQuestVarGet("zdatalitecrossfirePortalspointer")-1);
      if (0 > trQuestVarGet("zdatalitecrossfirePortalspointer")) {
      trQuestVarSet("zdatalitecrossfirePortalspointer", trQuestVarGet("zdatalitecrossfirePortalscount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitecrossfirePortalspointer");
      trQuestVarSet("crossfirePortals", trQuestVarGet("zdatalitecrossfirePortalsindex"+zdatapointer));
      }
      trVectorQuestVarSet("shootStart", trVectorQuestVarGet("crossfirePortal"+zdatapointer+"pos"));
      trVectorQuestVarSet("dir", trVectorQuestVarGet("crossfirePortal"+zdatapointer+"dir"));
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p3proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep3projshootcount");
      trQuestVarSet("zdatalitep3projshootindex"+zdatacount, trQuestVarGet("p3proj"));
      trQuestVarSet("zdatalitep3projshootcount", zdatacount+1);
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootstart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootstart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootstart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootstart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p3proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p3proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      trEventFire(364);
      }
      xsDisableRule("_crossfire_03_s1");
      trEcho("Trigger disabling rule crossfire_03_s1");
   }
}

rule _crossfire_02_m3
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay2_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay2_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("crossfire") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep7projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep7projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep7projshootpointer", trQuestVarGet("zdatalitep7projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep7projshootpointer")) {
      trQuestVarSet("zdatalitep7projshootpointer", trQuestVarGet("zdatalitep7projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep7projshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep7projshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep7projshootcount") - 1;
      zdataremove = trQuestVarGet("zdatalitep7projshootpointer");
      trQuestVarSet("zdatalitep7projshootindex"+zdataremove, trQuestVarGet("zdatalitep7projshootindex"+zdatacount));
      trQuestVarSet("zdatalitep7projshootcount", zdatacount);
      trQuestVarSet("zdatalitep7projshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p7projshoot", trQuestVarGet("zdatalitep7projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p7projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p7proj"+zdatapointer+"target"),trVectorQuestVarGetY("p7proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p7proj"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep7projshootcount", 0);
      trQuestVarSet("zdatalitep7projshootpointer", 0);
      trQuestVarSet("p7projshoot", 0);
      }
      xsDisableRule("_crossfire_02_m3");
      trEcho("Trigger disabling rule crossfire_02_m3");
   }
}

rule _crossfire_03_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay3_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay3_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay3_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay3_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay3_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay3_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay3_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay3_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("crossfire") == 1){
      trEventFire(361);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep3projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep3projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep3projshootpointer", trQuestVarGet("zdatalitep3projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep3projshootpointer")) {
      trQuestVarSet("zdatalitep3projshootpointer", trQuestVarGet("zdatalitep3projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep3projshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep3projshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep3projshootcount") - 1;
      zdataremove = trQuestVarGet("zdatalitep3projshootpointer");
      trQuestVarSet("zdatalitep3projshootindex"+zdataremove, trQuestVarGet("zdatalitep3projshootindex"+zdatacount));
      trQuestVarSet("zdatalitep3projshootcount", zdatacount);
      trQuestVarSet("zdatalitep3projshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p3projshoot", trQuestVarGet("zdatalitep3projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p3projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p3proj"+zdatapointer+"target"),trVectorQuestVarGetY("p3proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p3proj"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep3projshootcount", 0);
      trQuestVarSet("zdatalitep3projshootpointer", 0);
      trQuestVarSet("p3projshoot", 0);
      }
      xsDisableRule("_crossfire_03_s2");
      trEcho("Trigger disabling rule crossfire_03_s2");
   }
}

rule _crossfire_04_end
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);

   trUnitSelectClear();
   trUnitSelectByID(6008);
   bool bVar1 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("crossfire", 0);
      trEventFire(365);
      trQuestVarSet("nickspell", 0);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 3.0 + 1.0 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 3.0 + 1.0 * trGetWorldDifficulty());
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitecrossfirePortalscount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitecrossfirePortalscount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitecrossfirePortalspointer", trQuestVarGet("zdatalitecrossfirePortalspointer")-1);
      if (0 > trQuestVarGet("zdatalitecrossfirePortalspointer")) {
      trQuestVarSet("zdatalitecrossfirePortalspointer", trQuestVarGet("zdatalitecrossfirePortalscount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitecrossfirePortalspointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdatalitecrossfirePortalsindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdatalitecrossfirePortalscount") - 1;
      zdataremove = trQuestVarGet("zdatalitecrossfirePortalspointer");
      trQuestVarSet("zdatalitecrossfirePortalsindex"+zdataremove, trQuestVarGet("zdatalitecrossfirePortalsindex"+zdatacount));
      trQuestVarSet("zdatalitecrossfirePortalscount", zdatacount);
      trQuestVarSet("zdatalitecrossfirePortalspointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("crossfirePortals", trQuestVarGet("zdatalitecrossfirePortalsindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("crossfirePortals"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("crossfirePortals"));
      trUnitTeleport(15.28, 0.00, 82.65);
      }
      xsDisableRule("_crossfire_04_end");
      trEcho("Trigger disabling rule crossfire_04_end");
   }
}

rule _nick_a3_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("nicka", 1);
      trQuestVarSet("waveCount", 12 + 4 * trGetWorldDifficulty());
      trQuestVarSet("waveAngleMod", 3.141592 / trQuestVarGet("waveCount"));
      trEventFire(366);
      trQuestVarSet("shoot", trQuestVarGet("waveCount"));
      trQuestVarSetFromRand("nickAngle", 0, trQuestVarGet("waveAngleMod"), false);
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + 1.570796);
      trEventFire(306);
      trQuestVarSet("nickVary", 1);
      trSoundPlayFN("lapadesconvert.wav", "2", -1, "","");
      trEventFire(341);
      trQuestVarSet("portalCount", 3 + trGetWorldDifficulty());
      trQuestVarSet("portalAngleMod", 6.283185 / trQuestVarGet("portalCount"));
      trEventFire(367);
      trEventFire(368);
      trQuestVarSet("bossHP", 30 + 5 * (trGetWorldDifficulty() + trQuestVarGet("power")));
      xsDisableRule("_nick_a3_00_startup");
      trEcho("Trigger disabling rule nick_a3_00_startup");
   }
}

rule _nick_a3_02_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_CompTime")) >= 400 + 10 * trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer2_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("nicka") == 1){
      for(bb=3 + trGetWorldDifficulty(); >0) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p4proj"));
      for(zdatapointer=0;>1){}
      if (trQuestVarGet("zdataliteportalscount") == 0) {
      trQuestVarSet("portals", -1);
      } else {
      trQuestVarSet("zdataliteportalspointer", trQuestVarGet("zdataliteportalspointer")-1);
      if (0 > trQuestVarGet("zdataliteportalspointer")) {
      trQuestVarSet("zdataliteportalspointer", trQuestVarGet("zdataliteportalscount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteportalspointer");
      trQuestVarSet("portals", trQuestVarGet("zdataliteportalsindex"+zdatapointer));
      }
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("portals"), true));
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep7projshootcount");
      trQuestVarSet("zdatalitep7projshootindex"+zdatacount, trQuestVarGet("p4proj"));
      trQuestVarSet("zdatalitep7projshootcount", zdatacount+1);
      trVectorQuestVarSet("dir", xsVectorSet(trQuestVarGet("playerposx") - trQuestVarGet("portalCenterx"),0,trQuestVarGet("playerposz") - trQuestVarGet("portalCenterz")));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p7proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p7proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      trEventFire(369);
      trSoundPlayFN("ui\lightning1.wav", "3", -1, "","");
      trSoundPlayFN("titanfall.wav", "1", -1, "","");
      }
      xsDisableRule("_nick_a3_02_s1");
      trEcho("Trigger disabling rule nick_a3_02_s1");
   }
}

rule _nick_a3_02_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("nicka") == 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep7projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep7projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep7projshootpointer", trQuestVarGet("zdatalitep7projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep7projshootpointer")) {
      trQuestVarSet("zdatalitep7projshootpointer", trQuestVarGet("zdatalitep7projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep7projshootpointer");
      trQuestVarSet("p7projshoot", trQuestVarGet("zdatalitep7projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p7projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p7proj"+zdatapointer+"target"),trVectorQuestVarGetY("p7proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p7proj"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep7projshootcount", 0);
      trQuestVarSet("zdatalitep7projshootpointer", 0);
      trQuestVarSet("p7projshoot", 0);
      trEventFire(367);
      }
      xsDisableRule("_nick_a3_02_s2");
      trEcho("Trigger disabling rule nick_a3_02_s2");
   }
}

rule _nick_a3_03
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);

   trUnitSelectClear();
   trUnitSelectByID(6008);
   bool bVar1 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("nicka", 0);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteportalscount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteportalscount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteportalspointer", trQuestVarGet("zdataliteportalspointer")-1);
      if (0 > trQuestVarGet("zdataliteportalspointer")) {
      trQuestVarSet("zdataliteportalspointer", trQuestVarGet("zdataliteportalscount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteportalspointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdataliteportalsindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdataliteportalscount") - 1;
      zdataremove = trQuestVarGet("zdataliteportalspointer");
      trQuestVarSet("zdataliteportalsindex"+zdataremove, trQuestVarGet("zdataliteportalsindex"+zdatacount));
      trQuestVarSet("zdataliteportalscount", zdatacount);
      trQuestVarSet("zdataliteportalspointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("portals", trQuestVarGet("zdataliteportalsindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("portals"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("portals"));
      trUnitTeleport(4.42, 0.00, 92.33);
      }
      trEventFire(370);
      xsDisableRule("_nick_a3_03");
      trEcho("Trigger disabling rule nick_a3_03");
   }
}

rule _dive_00_startup
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("nickspell", 1);
      trOverlayText("Wormhole Dive", 3.0, 580, 360, 800);
      trVectorQuestVarSet("bossmove", xsVectorSet(trQuestVarGet("playerposx"),0,trQuestVarGet("playCenterz") + 10));
      trQuestVarSet("dive", 1);
      trQuestVarSet("bossHP", 40 + 8 * (trGetWorldDifficulty() + trQuestVarGet("power")));
      trEventFire(371);
      trEventFire(-1);
      trQuestVarSet("stepSize", 2.0 - 0.2 * trGetWorldDifficulty());
      trVectorQuestVarSet("leftDir", xsVectorSet(1,0,0));
      trVectorQuestVarSet("rightDir", xsVectorSet(0 - 1,0,0));
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 5, 1, 9.0 + 3.0 * trGetWorldDifficulty() - trQuestVarGet("p"+5+"p"+zsps+"f1f"));
      trQuestVarSet("p"+5+"p"+zsps+"f1f", 9.0 + 3.0 * trGetWorldDifficulty());
      trQuestVarSet("shrapnelCount", 5 + trGetWorldDifficulty());
      trQuestVarSet("shrapnelAngleMod", 3.141592 / (trQuestVarGet("shrapnelCount") + 1.0));
      trEventFire(372);
      trStringQuestVarSet("bossName", "Wormhole Dive ");
      trEventFire(373);
      /**/ projectileConvert(1, "Lampades Bolt", "Victory Marker");
      trEventFire(27);
      xsDisableRule("_dive_00_startup");
      trEcho("Trigger disabling rule dive_00_startup");
   }
}

rule _dive_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 1000) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("dive") >= 1){
      trQuestVarSet("diveStep", 0.3);
      trEventFire(374);
      trQuestVarSet("bossprevz", trQuestVarGet("bossposz"));
      trQuestVarSet("diveAngle", 0);
      trQuestVarSet("rightdirx", 0.0 - trQuestVarGet("rightdirx"));
      trQuestVarSet("leftdirx", 0.0 - trQuestVarGet("rightdirx"));
      trQuestVarSet("dive", 2);
      trQuestVarSet("diveCount", trGetWorldDifficulty() - 1);
      trEventFire(375);
      trSoundPlayFN("suckup2.wav", "2", -1, "","");
      }
      xsDisableRule("_dive_01");
      trEcho("Trigger disabling rule dive_01");
   }
}

rule _dive_02_m1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdivetimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdivetimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdivetimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdivetimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdivetimer_CompTime")) >= 10) {
   for(Accurate_Timer_QVdivetimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdivetimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdivetimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("dive") == 2){
      trQuestVarSet("diveStep", trQuestVarGet("diveStep") + 0.02);
      trVectorQuestVarSet("bosspos", xsVectorSet(trQuestVarGet("bossposx"),0,xsMax(trQuestVarGet("bossposz") - trQuestVarGet("diveStep"), trQuestVarGet("minBouncez") + 2.0)));
      trVectorQuestVarSet("bossmove", trVectorQuestVarGet("bosspos"));
      /**/ 
      trUnitSelectClear();
      trUnitSelectByID(6008);
      trUnitTeleport(trVectorQuestVarGetX("bosspos"),trVectorQuestVarGetY("bosspos"),trVectorQuestVarGetZ("bosspos"));
      trUnitSelectClear();
      trUnitSelectByID(6009);
      trUnitTeleport(trVectorQuestVarGetX("bosspos"),trVectorQuestVarGetY("bosspos"),trVectorQuestVarGetZ("bosspos"));
      trVectorQuestVarSet("rightWing", xsVectorSet(trQuestVarGet("bossposx") + 3.0,0.8,trQuestVarGet("bossposz") + 0.0));
      trVectorQuestVarSet("leftWing", xsVectorSet(trQuestVarGet("bossposx") - 3.0,0.8,trQuestVarGet("bossposz") + 0.0));
      /**/ for(x = 0; <=2) {
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(6013 + x);
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(trVectorQuestVarGetX("leftWing"),trVectorQuestVarGetY("leftWing"),trVectorQuestVarGetZ("leftWing"));
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(6010 + x);
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trUnitTeleport(trVectorQuestVarGetX("rightWing"),trVectorQuestVarGetY("rightWing"),trVectorQuestVarGetZ("rightWing"));
      trVectorQuestVarSet("rightWing", xsVectorSet(trQuestVarGet("rightwingx") + 0.5,trQuestVarGet("rightwingy")-0.1,trQuestVarGet("rightwingz") + 1.0));
      trVectorQuestVarSet("leftWing", xsVectorSet(trQuestVarGet("leftwingx") - 0.5,trQuestVarGet("leftwingy")-0.1,trQuestVarGet("leftwingz") + 1.0));
      /**/ }
      trEventFire(376);
      }
      xsDisableRule("_dive_02_m1");
      trEcho("Trigger disabling rule dive_02_m1");
   }
}

rule _dive_02_m2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdivetimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdivetimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdivetimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdivetimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdivetimer2_CompTime")) >= 1) {
   for(Accurate_Timer_QVdivetimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdivetimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdivetimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("dive") == 2){
      trEventFire(374);
      if(trQuestVarGet("bossposz") <= trQuestVarGet("minBouncez") + 2.1){
      trVectorQuestVarSet("bosspos", xsVectorSet(trQuestVarGet("playerposx"),0,trQuestVarGet("maxBouncez") - 2.0));
      if(trQuestVarGet("diveCount") >= 1){
      trQuestVarSet("bossprevz", trQuestVarGet("bossposz"));
      trQuestVarSet("diveCount", trQuestVarGet("diveCount") - 1);
      } else {
      trEventFire(377);
      }
      trQuestVarEcho("bossposz");
      }
      }
      xsDisableRule("_dive_02_m2");
      trEcho("Trigger disabling rule dive_02_m2");
   }
}

rule _dive_03_s1
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("dive") == 0);

   bool bVar1 = (trQuestVarGet("bossposz") < trQuestVarGet("bossprevz") - trQuestVarGet("stepSize"));


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("dive") == 2){
      /**/ while(trQuestVarGet("bossprevz") > trQuestVarGet("bossposz") + trQuestVarGet("stepSize")) {
      trQuestVarSet("diveAngle", trQuestVarGet("diveAngle") + 0.47);
      while (trQuestVarGet("diveAngle") > (6.283185)) {
      trQuestVarSet("diveAngle", trQuestVarGet("diveAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("diveAngle")) {
      trQuestVarSet("diveAngle", trQuestVarGet("diveAngle") + 6.283185);
      }
      trVectorQuestVarSet("mod",xsVectorSet(Math_sin(trQuestVarGet("diveAngle")) * 6.0, 0, Math_cos(trQuestVarGet("diveAngle")) * 6.0));
      trVectorQuestVarSet("rightStart", xsVectorSet(trQuestVarGet("bossposx") + trQuestVarGet("modx"),1.5,trQuestVarGet("bossprevz")));
      trVectorQuestVarSet("leftStart", xsVectorSet(trQuestVarGet("bossposx") - trQuestVarGet("modx"),1.5,trQuestVarGet("bossprevz")));
      trQuestVarSet("bossprevz", trQuestVarGet("bossprevz") - trQuestVarGet("stepSize"));
      if(trQuestVarGet("bomb") == 0){
      for(bb=1; >0) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p3proj"));
      trUnitTeleport(trVectorQuestVarGetX("leftStart"),trVectorQuestVarGetY("leftStart"),trVectorQuestVarGetZ("leftStart"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p3proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep3projshootcount");
      trQuestVarSet("zdatalitep3projshootindex"+zdatacount, trQuestVarGet("p3proj"));
      trQuestVarSet("zdatalitep3projshootcount", zdatacount+1);
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("leftDir") / trVectorQuestVarGetX("leftDir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("leftStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("leftStart"));
      if (0.0 > trVectorQuestVarGetX("leftDir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("leftDir") > -0.01 && trVectorQuestVarGetZ("leftDir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("leftDir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("leftDir") > -0.01 && trVectorQuestVarGetX("leftDir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("leftStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("leftStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p3proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p3proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      for(bb=1; >0) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p1proj"));
      trUnitTeleport(trVectorQuestVarGetX("rightStart"),trVectorQuestVarGetY("rightStart"),trVectorQuestVarGetZ("rightStart"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p1proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep5projshootcount");
      trQuestVarSet("zdatalitep5projshootindex"+zdatacount, trQuestVarGet("p1proj"));
      trQuestVarSet("zdatalitep5projshootcount", zdatacount+1);
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("rightDir") / trVectorQuestVarGetX("rightDir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("rightStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("rightStart"));
      if (0.0 > trVectorQuestVarGetX("rightDir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("rightDir") > -0.01 && trVectorQuestVarGetZ("rightDir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("rightDir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("rightDir") > -0.01 && trVectorQuestVarGetX("rightDir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("rightStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("rightStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p5proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p5proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      }
      /**/ }
      trEventFire(378);
      }
      xsDisableRule("_dive_03_s1");
      trEcho("Trigger disabling rule dive_03_s1");
   }
}

rule _dive_03_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("dive") == 2){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep3projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep3projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep3projshootpointer", trQuestVarGet("zdatalitep3projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep3projshootpointer")) {
      trQuestVarSet("zdatalitep3projshootpointer", trQuestVarGet("zdatalitep3projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep3projshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep3projshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep3projshootcount") - 1;
      zdataremove = trQuestVarGet("zdatalitep3projshootpointer");
      trQuestVarSet("zdatalitep3projshootindex"+zdataremove, trQuestVarGet("zdatalitep3projshootindex"+zdatacount));
      trQuestVarSet("zdatalitep3projshootcount", zdatacount);
      trQuestVarSet("zdatalitep3projshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p3projshoot", trQuestVarGet("zdatalitep3projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p3projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p3proj"+zdatapointer+"target"),trVectorQuestVarGetY("p3proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p3proj"+zdatapointer+"target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteredBulletscount");
      trQuestVarSet("zdataliteredBulletsindex"+zdatacount, trQuestVarGet("p3projshoot"));
      trQuestVarSet("zdataliteredBulletscount", zdatacount+1);
      }
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep5projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep5projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep5projshootpointer", trQuestVarGet("zdatalitep5projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep5projshootpointer")) {
      trQuestVarSet("zdatalitep5projshootpointer", trQuestVarGet("zdatalitep5projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep5projshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep5projshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep5projshootcount") - 1;
      zdataremove = trQuestVarGet("zdatalitep5projshootpointer");
      trQuestVarSet("zdatalitep5projshootindex"+zdataremove, trQuestVarGet("zdatalitep5projshootindex"+zdatacount));
      trQuestVarSet("zdatalitep5projshootcount", zdatacount);
      trQuestVarSet("zdatalitep5projshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p5projshoot", trQuestVarGet("zdatalitep5projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p5projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p5proj"+zdatapointer+"target"),trVectorQuestVarGetY("p5proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p5proj"+zdatapointer+"target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteblueBulletscount");
      trQuestVarSet("zdataliteblueBulletsindex"+zdatacount, trQuestVarGet("p5projshoot"));
      trQuestVarSet("zdataliteblueBulletscount", zdatacount+1);
      }
      trQuestVarSet("zdatalitep3projshootcount", 0);
      trQuestVarSet("zdatalitep3projshootpointer", 0);
      trQuestVarSet("p3projshoot", 0);
      trQuestVarSet("zdatalitep5projshootcount", 0);
      trQuestVarSet("zdatalitep5projshootpointer", 0);
      trQuestVarSet("p5projshoot", 0);
      trEventFire(375);
      }
      xsDisableRule("_dive_03_s2");
      trEcho("Trigger disabling rule dive_03_s2");
   }
}

rule _dive_04_b1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("dive") >= 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteredBulletscount") > (5) && (5) > 0) {
      zdatasearch = 5;
      } else {
      zdatasearch = trQuestVarGet("zdataliteredBulletscount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteredBulletspointer", trQuestVarGet("zdataliteredBulletspointer")-1);
      if (0 > trQuestVarGet("zdataliteredBulletspointer")) {
      trQuestVarSet("zdataliteredBulletspointer", trQuestVarGet("zdataliteredBulletscount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteredBulletspointer");
      trQuestVarSet("redBullets", trQuestVarGet("zdataliteredBulletsindex"+zdatapointer));
      UnitID = trQuestVarGet("redBullets");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("redbullets")));
      if ((trVectorQuestVarGetX("maxBounce") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxBounce") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minBounce") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minBounce")) == false) {
      /**/ if (trQuestVarGet("V1z") > trQuestVarGet("maxBouncez")) {
      trQuestVarSet("heading", 180);
      trQuestVarSet("angle", 1.570796);
      /**/ } else if (trQuestVarGet("V1z") < trQuestVarGet("minBouncez")) {
      trQuestVarSet("heading", 0);
      trQuestVarSet("angle", 4.712389);
      /**/ } else if (trQuestVarGet("V1x") < trQuestVarGet("minBouncex")) {
      trQuestVarSet("heading", 90);
      trQuestVarSet("angle", 0.0);
      /**/ } else if (trQuestVarGet("V1x") > trQuestVarGet("maxBouncex")) {
      trQuestVarSet("heading", 270);
      trQuestVarSet("angle", 3.141592);
      /**/ }
      for(bb=trQuestVarGet("shrapnelCount"); >0) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projpointer")+1);
      if (trQuestVarGet("p2projpointer") > trQuestVarGet("p2projend")) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projstart"));
      }
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p2proj"));
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      /**/ trUnitSetHeading(trQuestVarGet("heading"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep2projshootcount");
      trQuestVarSet("zdatalitep2projshootindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdatalitep2projshootcount", zdatacount+1);
      trQuestVarSet("angle", trQuestVarGet("angle") + trQuestVarGet("shrapnelAngleMod"));
      while (trQuestVarGet("angle") > (6.283185)) {
      trQuestVarSet("angle", trQuestVarGet("angle") - (6.283185));
      }
      while (0 > trQuestVarGet("angle")) {
      trQuestVarSet("angle", trQuestVarGet("angle") + 6.283185);
      }
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p2proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p2proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdataliteredbulletscount") - 1;
      zdataremove = trQuestVarGet("zdataliteredbulletspointer");
      trQuestVarSet("zdataliteredbulletsindex"+zdataremove, trQuestVarGet("zdataliteredbulletsindex"+zdatacount));
      trQuestVarSet("zdataliteredbulletscount", zdatacount);
      if (trQuestVarGet("zdataliteredbulletspointer") >= trQuestVarGet("zdataliteredbulletscount")) {
      trQuestVarSet("zdataliteredbulletspointer", trQuestVarGet("zdataliteredbulletscount")-1);
      }
      trSoundPlayFN("meteorsmallhit.wav", "5", -1, "","");
      }
      }
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitebluebulletscount") > (5) && (5) > 0) {
      zdatasearch = 5;
      } else {
      zdatasearch = trQuestVarGet("zdatalitebluebulletscount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitebluebulletspointer", trQuestVarGet("zdatalitebluebulletspointer")-1);
      if (0 > trQuestVarGet("zdatalitebluebulletspointer")) {
      trQuestVarSet("zdatalitebluebulletspointer", trQuestVarGet("zdatalitebluebulletscount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitebluebulletspointer");
      trQuestVarSet("bluebullets", trQuestVarGet("zdatalitebluebulletsindex"+zdatapointer));
      UnitID = trQuestVarGet("bluebullets");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("bluebullets")));
      if ((trVectorQuestVarGetX("maxBounce") > trVectorQuestVarGetX("V1") &&
      trVectorQuestVarGetZ("maxBounce") > trVectorQuestVarGetZ("V1") &&
      trVectorQuestVarGetX("V1") > trVectorQuestVarGetX("minBounce") &&
      trVectorQuestVarGetZ("V1") > trVectorQuestVarGetZ("minBounce")) == false) {
      for(bb=1; >0) {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projpointer")+1);
      if (trQuestVarGet("p5projpointer") > trQuestVarGet("p5projend")) {
      trQuestVarSet("p5projpointer", trQuestVarGet("p5projstart"));
      }
      trQuestVarSet("p5proj", trQuestVarGet("p5projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p5proj"));
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p5proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep6projshootcount");
      trQuestVarSet("zdatalitep6projshootindex"+zdatacount, trQuestVarGet("p5proj"));
      trQuestVarSet("zdatalitep6projshootcount", zdatacount+1);
      trVectorQuestVarSet("dir", xsVectorSet(trQuestVarGet("playerposx") - trQuestVarGet("V1x"),0,trQuestVarGet("playerposz") - trQuestVarGet("V1z")));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("V1") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("V1"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("V1"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p6proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p6proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdatalitebluebulletscount") - 1;
      zdataremove = trQuestVarGet("zdatalitebluebulletspointer");
      trQuestVarSet("zdatalitebluebulletsindex"+zdataremove, trQuestVarGet("zdatalitebluebulletsindex"+zdatacount));
      trQuestVarSet("zdatalitebluebulletscount", zdatacount);
      if (trQuestVarGet("zdatalitebluebulletspointer") >= trQuestVarGet("zdatalitebluebulletscount")) {
      trQuestVarSet("zdatalitebluebulletspointer", trQuestVarGet("zdatalitebluebulletscount")-1);
      }
      trSoundPlayFN("ui\lightning1.wav", "3", -1, "","");
      trSoundPlayFN("ui\thunder2.wav", "2", -1, "","");
      }
      }
      trEventFire(379);
      }
      xsDisableRule("_dive_04_b1");
      trEcho("Trigger disabling rule dive_04_b1");
   }
}

rule _dive_04_b2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay2_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay2_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("dive") >= 1){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep2projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep2projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep2projshootpointer", trQuestVarGet("zdatalitep2projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep2projshootpointer")) {
      trQuestVarSet("zdatalitep2projshootpointer", trQuestVarGet("zdatalitep2projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep2projshootpointer");
      trQuestVarSet("p2projshoot", trQuestVarGet("zdatalitep2projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p2projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p2proj"+zdatapointer+"target"),trVectorQuestVarGetY("p2proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p2proj"+zdatapointer+"target"), -1, false);
      }
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep6projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep6projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep6projshootpointer", trQuestVarGet("zdatalitep6projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep6projshootpointer")) {
      trQuestVarSet("zdatalitep6projshootpointer", trQuestVarGet("zdatalitep6projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep6projshootpointer");
      trQuestVarSet("p6projshoot", trQuestVarGet("zdatalitep6projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p6projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p6proj"+zdatapointer+"target"),trVectorQuestVarGetY("p6proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p6proj"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep2projshootcount", 0);
      trQuestVarSet("zdatalitep2projshootpointer", 0);
      trQuestVarSet("p2projshoot", 0);
      trQuestVarSet("zdatalitep6projshootcount", 0);
      trQuestVarSet("zdatalitep6projshootpointer", 0);
      trQuestVarSet("p6projshoot", 0);
      trEventFire(372);
      }
      xsDisableRule("_dive_04_b2");
      trEcho("Trigger disabling rule dive_04_b2");
   }
}

rule _dive_02_m3
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("bossposz") <= trQuestVarGet("maxBouncez") - 5.0);

   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 15) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar1 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("dive") >= 1){
      trQuestVarSet("dive", 1);
      trEventFire(380);
      }
      xsDisableRule("_dive_02_m3");
      trEcho("Trigger disabling rule dive_02_m3");
   }
}

rule _dive_05
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 4000) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("dive") >= 1){
      trVectorQuestVarSet("bossmove", xsVectorSet(trQuestVarGet("playerposx"),0,trQuestVarGet("playCenterz") + 10));
      trEventFire(371);
      }
      xsDisableRule("_dive_05");
      trEcho("Trigger disabling rule dive_05");
   }
}

rule _dive_06_end
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);

   trUnitSelectClear();
   trUnitSelectByID(6008);
   bool bVar1 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("dive", 0);
      trEventFire(338);
      trQuestVarSet("nickspell", 0);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 3.0 + 1.0 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 3.0 + 1.0 * trGetWorldDifficulty());
      xsDisableRule("_dive_06_end");
      trEcho("Trigger disabling rule dive_06_end");
   }
}

rule _jump_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("nickspell", 1);
      trOverlayText("JUMP TO HYPERSPACE", 3.0, 523, 360, 800);
      trVectorQuestVarSet("bossmove", xsVectorSet(trQuestVarGet("playerposx"),0,trQuestVarGet("playCenterz") + 10));
      trQuestVarSet("jump", 1);
      trQuestVarSet("bossHP", 40 + 8 * (trGetWorldDifficulty() + trQuestVarGet("power")));
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 5, 1, 20.0 - trQuestVarGet("p"+5+"p"+zsps+"f1f"));
      trQuestVarSet("p"+5+"p"+zsps+"f1f", 20.0);
      trStringQuestVarSet("bossName", "JUMP TO HYPERSPACE ");
      trQuestVarSet("corridorWidth", 20.0 - 4.0 * trGetWorldDifficulty());
      trQuestVarSet("maxRandom", trQuestVarGet("maxBoundx") - trQuestVarGet("minBoundx") - trQuestVarGet("corridorWidth"));
      trEventFire(381);
      trQuestVarSet("waveCount", 12 + 4 * trGetWorldDifficulty());
      trQuestVarSet("waveAngleMod", 3.141592 / trQuestVarGet("waveCount"));
      trQuestVarSetFromRand("nickAngle", 1.57, 1.6, false);
      trQuestVarCopy("shoot", "waveCount");
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 2, 1, 12.0 + 4.0 * trGetWorldDifficulty() - trQuestVarGet("p"+2+"p"+zsps+"f1f"));
      trQuestVarSet("p"+2+"p"+zsps+"f1f", 12.0 + 4.0 * trGetWorldDifficulty());
      trEventFire(382);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 4, 1, 20.0 - trQuestVarGet("p"+4+"p"+zsps+"f1f"));
      trQuestVarSet("p"+4+"p"+zsps+"f1f", 20.0);
      /**/ projectileConvert(4, "Outpost", "Victory Marker", 0.6, 0);
      xsDisableRule("_jump_00_startup");
      trEcho("Trigger disabling rule jump_00_startup");
   }
}

rule _jump_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 1500) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 1){
      trEventFire(383);
      trQuestVarSet("terrainz", trQuestVarGet("maxTerrainz"));
      trSoundPlayFN("vortexstart.wav", "3", -1, "","");
      trEventFire(384);
      trEventFire(385);
      trEventFire(386);
      }
      xsDisableRule("_jump_01");
      trEcho("Trigger disabling rule jump_01");
   }
}

rule _jump_02_t1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 1){
      if(trQuestVarGet("terrainz") >= trQuestVarGet("minTerrainz")){
      trQuestVarSet("terrainz", trQuestVarGet("terrainz") - 2);
      for(tempX0 = 0; > 1){}
      for(tempZ0 = 0; > 1){}
      for(tempX1 = 0; > 1){}
      for(tempZ1 = 0; > 1){}
      tempX0 = xsMin(trQuestVarGet("minTerrainx"), trQuestVarGet("maxTerrainx"));
      tempZ0 = xsMin(xsMax(trQuestVarGet("terrainz"), trQuestVarGet("minTerrainz")), trQuestVarGet("terrainz") + 2);
      tempX1 = xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("maxTerrainx"));
      tempZ1 = xsMax(xsMax(trQuestVarGet("terrainz"), trQuestVarGet("minTerrainz")), trQuestVarGet("terrainz") + 2);
      trPaintTerrain(tempX0, tempZ0, tempX1, tempZ1, trQuestVarGet("shoreline1type"), trQuestVarGet("shoreline1subtype"), false);
      trEventFire(387);
      }
      }
      xsDisableRule("_jump_02_t1");
      trEcho("Trigger disabling rule jump_02_t1");
   }
}

rule _jump_02_t2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVspellstimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVspellstimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVspellstimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVspellstimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVspellstimer_CompTime")) >= 25) {
   for(Accurate_Timer_QVspellstimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVspellstimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVspellstimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 1){
      trEventFire(383);
      }
      xsDisableRule("_jump_02_t2");
      trEcho("Trigger disabling rule jump_02_t2");
   }
}

rule _jump_03_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_CompTime")) >= 20) {
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 1){
      trEventFire(388);
      /**/ for(x=1; <=3) {
      trQuestVarSetFromRand("startx", 0, trQuestVarGet("maxRandom"), false);
      trQuestVarSet("startx", trQuestVarGet("startx") + trQuestVarGet("bossposx") + trQuestVarGet("corridorWidth") * 0.5 - trQuestVarGet("minBoundx"));
      while (trQuestVarGet("startx") > (trQuestVarGet("maxBoundx") - trQuestVarGet("minBoundx"))) {
      trQuestVarSet("startx", trQuestVarGet("startx") - (trQuestVarGet("maxBoundx") - trQuestVarGet("minBoundx")));
      }
      while (0 > trQuestVarGet("startx")) {
      trQuestVarSet("startx", trQuestVarGet("startx") + trQuestVarGet("maxBoundx") - trQuestVarGet("minBoundx"));
      }
      trQuestVarSet("startx", trQuestVarGet("startx") + trQuestVarGet("minBoundx"));
      trQuestVarSet("p45projpointer", trQuestVarGet("p45projpointer")+1);
      if (trQuestVarGet("p45projpointer") > trQuestVarGet("p45projend")) {
      trQuestVarSet("p45projpointer", trQuestVarGet("p45projstart"));
      }
      trQuestVarSet("p45proj", trQuestVarGet("p45projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p45proj"));
      trVectorQuestVarSet("start", xsVectorSet(trQuestVarGet("startx"),1.5,trQuestVarGet("maxBoundz")));
      trUnitTeleport(trVectorQuestVarGetX("start"),trVectorQuestVarGetY("start"),trVectorQuestVarGetZ("start"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p45proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      trQuestVarCopy("zdatalitep6projshootindex"+x+"", "p45proj");
      trVectorQuestVarSet("p6proj"+x+"target", xsVectorSet(trQuestVarGet("startx"),1.0,trQuestVarGet("minExitz")));
      }
      trQuestVarSet("zdatalitep6projshootcount", 3);
      trQuestVarSet("soundplay", trQuestVarGet("soundplay") + 1);
      if(trQuestVarGet("soundplay") >= 10){
      trQuestVarSetFromRand("sound", 1, 3, true);
      trSoundPlayFN("suckup"+1*trQuestVarGet("sound")+".wav", "1", -1, "","");
      trQuestVarSet("soundplay", 0);
      }
      }
      xsDisableRule("_jump_03_s1");
      trEcho("Trigger disabling rule jump_03_s1");
   }
}

rule _jump_03_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay2_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay2_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 1){
      for(bbb=0; >1) {}
      bbb = trQuestVarGet("p45projpointer");
      for(bb=3; >0) {
      trUnitSelectClear();
      trUnitSelectByID(bbb);
      bbb = bbb - 1;
      if (trQuestVarGet("p45projstart") > bbb) {
      bbb = trQuestVarGet("p45projend");
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("p6proj"+bb+"target"),trVectorQuestVarGetY("p6proj"+bb+"target"),trVectorQuestVarGetZ("p6proj"+bb+"target"), -1, false);
      }
      trEventFire(384);
      }
      xsDisableRule("_jump_03_s2");
      trEcho("Trigger disabling rule jump_03_s2");
   }
}

rule _jump_04_m1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVmovetimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVmovetimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVmovetimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVmovetimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVmovetimer_CompTime")) >= 3000) {
   for(Accurate_Timer_QVmovetimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVmovetimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVmovetimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 1){
      trQuestVarSetFromRand("modx", -20, 20, false);
      trQuestVarSet("bossmovex", trQuestVarGet("bossposx") + trQuestVarGet("modx"));
      trQuestVarSet("bossmovex", xsMax(trQuestVarGet("minBouncex") + 6.0, trQuestVarGet("bossmovex")));
      trQuestVarSet("bossmovex", xsMin(trQuestVarGet("maxBouncex") - 6.0, trQuestVarGet("bossmovex")));
      trEventFire(389);
      }
      xsDisableRule("_jump_04_m1");
      trEcho("Trigger disabling rule jump_04_m1");
   }
}

rule _jump_04_m2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(385);
      xsDisableRule("_jump_04_m2");
      trEcho("Trigger disabling rule jump_04_m2");
   }
}

rule _jump_05_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 1){
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("bossposx"),1.5,trQuestVarGet("bossposz")));
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("nickAngle")) * 1.0, 0, Math_cos(trQuestVarGet("nickAngle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p2proj1target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p2proj1target", trVectorQuestVarGet("ziwrposs2"));
      }
      trVectorQuestVarSet("dir", xsVectorSet(0.0 - trQuestVarGet("dirx"),0,trQuestVarGet("dirz")));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p2proj0target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p2proj0target", trVectorQuestVarGet("ziwrposs2"));
      }
      for(bb=2; >0) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projpointer")+1);
      if (trQuestVarGet("p2projpointer") > trQuestVarGet("p2projend")) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projstart"));
      }
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p2proj"));
      /**/ trUnitSetHeading(180);
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep2projshootcount");
      trQuestVarSet("zdatalitep2projshootindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdatalitep2projshootcount", zdatacount+1);
      }
      trEventFire(390);
      }
      xsDisableRule("_jump_05_s1");
      trEcho("Trigger disabling rule jump_05_s1");
   }
}

rule _jump_05_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 1){
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + trQuestVarGet("waveAngleMod"));
      while (trQuestVarGet("nickAngle") > (6.283185)) {
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("nickAngle")) {
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + 6.283185);
      }
      trQuestVarSet("shoot", trQuestVarGet("shoot") - 1);
      if(trQuestVarGet("shoot") <= 0){
      trQuestVarSetFromRand("nickAngle", 0, trQuestVarGet("waveAngleMod"), false);
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + 1.570796);
      trQuestVarSet("shoot", trQuestVarGet("waveCount"));
      trSoundPlayFN("mirrortowerfire.wav", "2", -1, "","");
      }
      trEventFire(386);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep2projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep2projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep2projshootpointer", trQuestVarGet("zdatalitep2projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep2projshootpointer")) {
      trQuestVarSet("zdatalitep2projshootpointer", trQuestVarGet("zdatalitep2projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep2projshootpointer");
      trQuestVarSet("p2projshoot", trQuestVarGet("zdatalitep2projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p2projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p2proj"+zdatapointer+"target"),trVectorQuestVarGetY("p2proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p2proj"+zdatapointer+"target"), -1, false);
      }
      trQuestVarSet("zdatalitep2projshootcount", 0);
      trQuestVarSet("zdatalitep2projshootpointer", 0);
      trQuestVarSet("p2projshoot", 0);
      }
      xsDisableRule("_jump_05_s2");
      trEcho("Trigger disabling rule jump_05_s2");
   }
}

rule _Stage_C_17_rows
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 6);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("rightspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("leftspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(0,0,-2.0));
      trQuestVarSet("enemyRow1", 10);
      trVectorQuestVarSet("enemyRow2start", xsVectorSet(trQuestVarGet("leftspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow2end", xsVectorSet(trQuestVarGet("rightspawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyRow2shift", xsVectorSet(0,0,-2.0));
      trQuestVarSet("enemyRow2", 10);
      trEventFire(303);
      xsDisableRule("_Stage_C_17_rows");
      trEcho("Trigger disabling rule Stage_C_17_rows");
   }
}

rule _nick_die_01
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("Zenophobia\Psynergy1.wav", "1", -1, "","");
      trQuestVarSet("boss", 0);
      trQuestVarSet("boom", 5);
      trEventFire(391);
      trEventFire(392);
      trOverlayTextColour(255, 255, 255);
      trOverlayText("", 0.1, -1, -1, -1);
      xsDisableRule("_nick_die_01");
      trEcho("Trigger disabling rule nick_die_01");
   }
}

rule _nick_die_02_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVboomertimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVboomertimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVboomertimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVboomertimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVboomertimer_CompTime")) >= 250) {
   for(Accurate_Timer_QVboomertimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVboomertimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVboomertimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("shockwave.wav", "2", -1, "","");
      trArmyDispatch("2,10", "Dwarf", 1, 87.139999, 6.580000, 59.779999, 0, true);
      trVectorQuestVarSet("V1", kbGetBlockPosition("8599"));
      trQuestVarSetFromRand("modx", -3, 3, false);
      trQuestVarSetFromRand("modz", -3, 3, false);
      trVectorQuestVarSet("V1", xsVectorSet(trVectorQuestVarGetX("V1") + trQuestVarGet("modx"),trVectorQuestVarGetY("V1") + 0,trVectorQuestVarGetZ("V1") + trQuestVarGet("modz")));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("V1");b = trVectorQuestVarGetY("V1");c = trVectorQuestVarGetZ("V1");
      trVectorQuestVarSet("V1",xsVectorSet(a,b,c));}
      trArmySelect("2,10");
      trUnitTeleport(trVectorQuestVarGetX("V1"), trVectorQuestVarGetY("V1"), trVectorQuestVarGetZ("V1"));
      trEventFire(393);
      xsDisableRule("_nick_die_02_s1");
      trEcho("Trigger disabling rule nick_die_02_s1");
   }
}

rule _nick_die_02_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVhavocdie02s2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVhavocdie02s2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVhavocdie02s2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVhavocdie02s2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVhavocdie02s2timer_CompTime")) >= 1) {
   for(Accurate_Timer_QVhavocdie02s2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVhavocdie02s2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVhavocdie02s2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trArmySelect("2,10");
      trDamageUnitPercent(100);
      trArmySelect("2,10");
      trUnitChangeProtoUnit("Meteorite");
      trQuestVarSet("boom", trQuestVarGet("boom") - 1);
      if(trQuestVarGet("boom") > 0){
      trEventFire(391);
      }
      xsDisableRule("_nick_die_02_s2");
      trEcho("Trigger disabling rule nick_die_02_s2");
   }
}

rule _nick_die_03
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("boom") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("jump", 0);
      trSoundPlayFN("implode explode.wav", "3", -1, "","");
      trUIFadeToColor(255,255,255,1000,0,false);
      trFadeOutMusic(3.0);
      trQuestVarSet("movement", 1);
      trQuestVarSet("zdataliteenemiescount", 0);
      trQuestVarSet("zdataliteenemiespointer", 0);
      trQuestVarSet("enemies", 0);
      trStringQuestVarSet("bossName", "");
      trStringQuestVarSet("bossHealthBar", "");
      trEventFire(394);
      trQuestVarSet("dive", 0);
      trQuestVarSet("nickspell", 0);
      trQuestVarSet("play", 0);
      xsDisableRule("_nick_die_03");
      trEcho("Trigger disabling rule nick_die_03");
   }
}

rule _jump_06_end
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);

   trUnitSelectClear();
   trUnitSelectByID(6008);
   bool bVar1 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trGetWorldDifficulty() < 2){
      trEventFire(395);
      /**/ } else {
      trEventFire(396);
      }
      trQuestVarSet("bossHP", 0);
      trUnitSelectClear();
      trUnitSelect("8599");
      trDamageUnitPercent(-100);
      xsDisableRule("_jump_06_end");
      trEcho("Trigger disabling rule jump_06_end");
   }
}

rule _hyperspace_00_start
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("spells", trQuestVarGet("spells") - 1);
      trEventFire(151);
      trSoundPlayFN("attackwarning.wav", "2", -1, "","");
      trOverlayTextColour(255, 0, 0);
      trOverlayText("HYPERSPACE ERROR", 3.0, 535, 360, 800);
      trQuestVarSet("jump", 2);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 5, 1, 0.1 - trQuestVarGet("p"+5+"p"+zsps+"f1f"));
      trQuestVarSet("p"+5+"p"+zsps+"f1f", 0.1);
      trEventFire(397);
      trQuestVarSet("maxSpeed", 9.0 + 3.0 * trGetWorldDifficulty());
      trQuestVarSet("speedStep", trQuestVarGet("maxSpeed") / 30.0);
      trQuestVarSet("bossHP", 0);
      trUnitSelectClear();
      trUnitSelectByID(6008);
      trDamageUnitPercent(-100);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 4, 1, 0.1 - trQuestVarGet("p"+4+"p"+zsps+"f1f"));
      trQuestVarSet("p"+4+"p"+zsps+"f1f", 0.1);
      xsDisableRule("_hyperspace_00_start");
      trEcho("Trigger disabling rule hyperspace_00_start");
   }
}

rule _hyperspace_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 2000) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 7, 1, 1.0 - trQuestVarGet("p"+7+"p"+zsps+"f1f"));
      trQuestVarSet("p"+7+"p"+zsps+"f1f", 1.0);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteprojactivecount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteprojactivecount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteprojactivepointer", trQuestVarGet("zdataliteprojactivepointer")-1);
      if (0 > trQuestVarGet("zdataliteprojactivepointer")) {
      trQuestVarSet("zdataliteprojactivepointer", trQuestVarGet("zdataliteprojactivecount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteprojactivepointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdataliteprojactiveindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdataliteprojactivecount") - 1;
      zdataremove = trQuestVarGet("zdataliteprojactivepointer");
      trQuestVarSet("zdataliteprojactiveindex"+zdataremove, trQuestVarGet("zdataliteprojactiveindex"+zdatacount));
      trQuestVarSet("zdataliteprojactivecount", zdatacount);
      trQuestVarSet("zdataliteprojactivepointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("projactive", trQuestVarGet("zdataliteprojactiveindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("projactive"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("projactive"));
      trUnitMoveToPoint(trVectorQuestVarGetX("bosspos"),trVectorQuestVarGetY("bosspos"),trVectorQuestVarGetZ("bosspos"), -1, false);
      }
      trEventFire(398);
      trSoundPlayFN("vortexstart.wav", "3", -1, "","");
      trQuestVarSet("portalRadius", 40);
      trVectorQuestVarSet("rockCenter", xsVectorSet(trQuestVarGet("bossposx") / 2,0.0,trQuestVarGet("bossposz") / 2));
      trQuestVarSet("speed", 1.0);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdataliteprojincomingcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdataliteprojincomingcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdataliteprojincomingpointer", trQuestVarGet("zdataliteprojincomingpointer")-1);
      if (0 > trQuestVarGet("zdataliteprojincomingpointer")) {
      trQuestVarSet("zdataliteprojincomingpointer", trQuestVarGet("zdataliteprojincomingcount")-1);
      }
      zdatapointer = trQuestVarGet("zdataliteprojincomingpointer");
      if(kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("zdataliteprojincomingindex"+zdatapointer))) == -1) {
      zdatacount = trQuestVarGet("zdataliteprojincomingcount") - 1;
      zdataremove = trQuestVarGet("zdataliteprojincomingpointer");
      trQuestVarSet("zdataliteprojincomingindex"+zdataremove, trQuestVarGet("zdataliteprojincomingindex"+zdatacount));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount);
      trQuestVarSet("zdataliteprojincomingpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("projincoming", trQuestVarGet("zdataliteprojincomingindex"+zdatapointer));
      UnitID = kbGetBlockID(""+1*trQuestVarGet("projincoming"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("projincoming"));
      trUnitMoveToPoint(trVectorQuestVarGetX("bosspos"),trVectorQuestVarGetY("bosspos"),trVectorQuestVarGetZ("bosspos"), -1, false);
      }
      xsDisableRule("_hyperspace_01");
      trEcho("Trigger disabling rule hyperspace_01");
   }
}

rule _hyperspace_02_s1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 2){
      if(trQuestVarGet("portalRadius") >= 1){
      for(tempX0 = 0; > 1){}
      for(tempZ0 = 0; > 1){}
      for(tempX1 = 0; > 1){}
      for(tempZ1 = 0; > 1){}
      tempX0 = xsMin(trQuestVarGet("minTerrainx"), trQuestVarGet("maxTerrainx"));
      tempZ0 = xsMin(trQuestVarGet("minTerrainz"), trQuestVarGet("maxTerrainz"));
      tempX1 = xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("maxTerrainx"));
      tempZ1 = xsMax(trQuestVarGet("minTerrainz"), trQuestVarGet("maxTerrainz"));
      trPaintTerrain(tempX0, tempZ0, tempX1, tempZ1, trQuestVarGet("blacktype"), trQuestVarGet("blacksubtype"), false);
      trQuestVarSet("portalRadius", trQuestVarGet("portalRadius") - 1);
      trQuestVarSet("radius", trQuestVarGet("portalRadius") * trQuestVarGet("portalRadius"));
      /**/ for(z=0; <= trQuestVarGet("portalRadius") + 1) {
      /**/ for(x=trQuestVarGet("portalRadius") + 1; >=0) {
      /**/ if (x*x + z*z <= trQuestVarGet("radius")) {
      for(tempX0 = 0; > 1){}
      for(tempZ0 = 0; > 1){}
      for(tempX1 = 0; > 1){}
      for(tempZ1 = 0; > 1){}
      tempX0 = xsMin(xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("rockCenterx") - x), xsMin(trQuestVarGet("maxTerrainx"), trQuestVarGet("rockCenterx") + x));
      tempZ0 = xsMin(xsMax(trQuestVarGet("minTerrainz"), trQuestVarGet("rockCenterz") - z), xsMin(trQuestVarGet("maxTerrainz"), trQuestVarGet("rockCenterz") + z));
      tempX1 = xsMax(xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("rockCenterx") - x), xsMin(trQuestVarGet("maxTerrainx"), trQuestVarGet("rockCenterx") + x));
      tempZ1 = xsMax(xsMax(trQuestVarGet("minTerrainz"), trQuestVarGet("rockCenterz") - z), xsMin(trQuestVarGet("maxTerrainz"), trQuestVarGet("rockCenterz") + z));
      trPaintTerrain(tempX0, tempZ0, tempX1, tempZ1, trQuestVarGet("shoreline1type"), trQuestVarGet("shoreline1subtype"), false);
      /**/ break; }}}
      trEventFire(399);
      /**/ } else {
      trEventFire(400);
      }
      }
      xsDisableRule("_hyperspace_02_s1");
      trEcho("Trigger disabling rule hyperspace_02_s1");
   }
}

rule _hyperspace_02_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVportalescapedelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVportalescapedelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVportalescapedelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVportalescapedelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVportalescapedelay_CompTime")) >= 100) {
   for(Accurate_Timer_QVportalescapedelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVportalescapedelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVportalescapedelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 2){
      trEventFire(398);
      trQuestVarSet("speed", trQuestVarGet("speed") + trQuestVarGet("speedStep"));
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 5, 1, xsMin(trQuestVarGet("maxSpeed"), trQuestVarGet("Speed")) - trQuestVarGet("p"+5+"p"+zsps+"f1f"));
      trQuestVarSet("p"+5+"p"+zsps+"f1f", xsMin(trQuestVarGet("maxSpeed"), trQuestVarGet("Speed")));
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 4, 1, xsMin(trQuestVarGet("maxSpeed"), trQuestVarGet("Speed")) - trQuestVarGet("p"+4+"p"+zsps+"f1f"));
      trQuestVarSet("p"+4+"p"+zsps+"f1f", xsMin(trQuestVarGet("maxSpeed"), trQuestVarGet("Speed")));
      }
      xsDisableRule("_hyperspace_02_s2");
      trEcho("Trigger disabling rule hyperspace_02_s2");
   }
}

rule _hyperspace_03_start
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 500) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 2){
      trStringQuestVarSet("bossName", "HYPERSPACE ERROR ");
      trEventFire(401);
      trVectorQuestVarSet("rockCenter", xsVectorSet(trQuestVarGet("bossposx") / 2,0,trQuestVarGet("bossposz") / 2));
      trQuestVarSet("rockxval", 1);
      trUnitSelectClear();
      trUnitSelectByID(6008);
      trDamageUnitPercent(-100);
      trEventFire(17);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 6.0 + 2.0 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 6.0 + 2.0 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 6.0 + 2.0 * trGetWorldDifficulty() - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 6.0 + 2.0 * trGetWorldDifficulty());
      trQuestVarSet("bossHP", 30);
      trSoundPlayFN("cinematics\32_out\explosion.mp3", "8", -1, "","");
      trEventFire(402);
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossposz")));
      trQuestVarSet("dive", 1);
      trEventFire(372);
      trQuestVarSet("shrapnelCount", 5 + trGetWorldDifficulty());
      trQuestVarSet("shrapnelAngleMod", 3.141592 / trQuestVarGet("shrapnelCount"));
      trVectorQuestVarSet("bossmove", xsVectorSet(trQuestVarGet("playcenterx"),0,trQuestVarGet("playcenterz") + 5.0));
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 2, 1, 6.0 + 2.0 * trGetWorldDifficulty() - trQuestVarGet("p"+2+"p"+zsps+"f1f"));
      trQuestVarSet("p"+2+"p"+zsps+"f1f", 6.0 + 2.0 * trGetWorldDifficulty());
      }
      xsDisableRule("_hyperspace_03_start");
      trEcho("Trigger disabling rule hyperspace_03_start");
   }
}

rule _hyperspace_04_s1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 2){
      /**/ if (trGetTerrainCombinedType(trQuestVarGet("maxTerrainx"), trQuestVarGet("maxTerrainz")) == trQuestVarGet("blackval") ||
      /**/ trGetTerrainCombinedType(trQuestVarGet("maxTerrainx"), trQuestVarGet("minTerrainz")) == trQuestVarGet("blackval") ||
      /**/ trGetTerrainCombinedType(trQuestVarGet("minTerrainx"), trQuestVarGet("maxTerrainz")) == trQuestVarGet("blackval") ||
      /**/ trGetTerrainCombinedType(trQuestVarGet("minTerrainx"), trQuestVarGet("minTerrainz")) == trQuestVarGet("blackval")) {
      /**/ 
      /**/ 
      trQuestVarSet("rockxval", trQuestVarGet("rockxval") + 1);
      trQuestVarSet("radius", trQuestVarGet("rockxval") * trQuestVarGet("rockxval"));
      /**/ for(z=0; <= trQuestVarGet("rockxval") + 1) {
      /**/ for(x=trQuestVarGet("rockxval") + 1; >=0) {
      /**/ if (x*x + z*z <= trQuestVarGet("radius")) {
      for(tempX0 = 0; > 1){}
      for(tempZ0 = 0; > 1){}
      for(tempX1 = 0; > 1){}
      for(tempZ1 = 0; > 1){}
      tempX0 = xsMin(xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("rockCenterx") - x), xsMin(trQuestVarGet("maxTerrainx"), trQuestVarGet("rockCenterx") + x));
      tempZ0 = xsMin(xsMax(trQuestVarGet("minTerrainz"), trQuestVarGet("rockCenterz") - z), xsMin(trQuestVarGet("maxTerrainz"), trQuestVarGet("rockCenterz") + z));
      tempX1 = xsMax(xsMax(trQuestVarGet("minTerrainx"), trQuestVarGet("rockCenterx") - x), xsMin(trQuestVarGet("maxTerrainx"), trQuestVarGet("rockCenterx") + x));
      tempZ1 = xsMax(xsMax(trQuestVarGet("minTerrainz"), trQuestVarGet("rockCenterz") - z), xsMin(trQuestVarGet("maxTerrainz"), trQuestVarGet("rockCenterz") + z));
      trPaintTerrain(tempX0, tempZ0, tempX1, tempZ1, trQuestVarGet("city1type"), trQuestVarGet("city1subtype"), false);
      /**/ break; }}}
      trEventFire(403);
      /**/ } else {
      trEventFire(404);
      }
      }
      xsDisableRule("_hyperspace_04_s1");
      trEcho("Trigger disabling rule hyperspace_04_s1");
   }
}

rule _hyperspace_04_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVspellstimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVspellstimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVspellstimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVspellstimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVspellstimer_CompTime")) >= 25) {
   for(Accurate_Timer_QVspellstimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVspellstimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVspellstimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 2){
      trEventFire(401);
      }
      xsDisableRule("_hyperspace_04_s2");
      trEcho("Trigger disabling rule hyperspace_04_s2");
   }
}

rule _hyperspace_05_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 2 * trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 2){
      trQuestVarSetFromRand("angle", 0, 6.283185, false);
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      for(bb=1; >0) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p3proj"));
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p3proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep3projshootcount");
      trQuestVarSet("zdatalitep3projshootindex"+zdatacount, trQuestVarGet("p3proj"));
      trQuestVarSet("zdatalitep3projshootcount", zdatacount+1);
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p3proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p3proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      trVectorQuestVarSet("dir", xsVectorSet(0.0 - trQuestVarGet("dirx"),0.0,0.0 - trQuestVarGet("dirz")));
      for(bb=1; >0) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p1proj"));
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p1proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep5projshootcount");
      trQuestVarSet("zdatalitep5projshootindex"+zdatacount, trQuestVarGet("p1proj"));
      trQuestVarSet("zdatalitep5projshootcount", zdatacount+1);
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p5proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p5proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      trEventFire(405);
      }
      xsDisableRule("_hyperspace_05_s1");
      trEcho("Trigger disabling rule hyperspace_05_s1");
   }
}

rule _hyperspace_05_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("jump") == 2){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep3projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep3projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep3projshootpointer", trQuestVarGet("zdatalitep3projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep3projshootpointer")) {
      trQuestVarSet("zdatalitep3projshootpointer", trQuestVarGet("zdatalitep3projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep3projshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep3projshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep3projshootcount") - 1;
      zdataremove = trQuestVarGet("zdatalitep3projshootpointer");
      trQuestVarSet("zdatalitep3projshootindex"+zdataremove, trQuestVarGet("zdatalitep3projshootindex"+zdatacount));
      trQuestVarSet("zdatalitep3projshootcount", zdatacount);
      trQuestVarSet("zdatalitep3projshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p3projshoot", trQuestVarGet("zdatalitep3projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p3projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p3proj"+zdatapointer+"target"),trVectorQuestVarGetY("p3proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p3proj"+zdatapointer+"target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteredBulletscount");
      trQuestVarSet("zdataliteredBulletsindex"+zdatacount, trQuestVarGet("p3projshoot"));
      trQuestVarSet("zdataliteredBulletscount", zdatacount+1);
      }
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep5projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep5projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep5projshootpointer", trQuestVarGet("zdatalitep5projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep5projshootpointer")) {
      trQuestVarSet("zdatalitep5projshootpointer", trQuestVarGet("zdatalitep5projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep5projshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep5projshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep5projshootcount") - 1;
      zdataremove = trQuestVarGet("zdatalitep5projshootpointer");
      trQuestVarSet("zdatalitep5projshootindex"+zdataremove, trQuestVarGet("zdatalitep5projshootindex"+zdatacount));
      trQuestVarSet("zdatalitep5projshootcount", zdatacount);
      trQuestVarSet("zdatalitep5projshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p5projshoot", trQuestVarGet("zdatalitep5projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p5projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p5proj"+zdatapointer+"target"),trVectorQuestVarGetY("p5proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p5proj"+zdatapointer+"target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteblueBulletscount");
      trQuestVarSet("zdataliteblueBulletsindex"+zdatacount, trQuestVarGet("p5projshoot"));
      trQuestVarSet("zdataliteblueBulletscount", zdatacount+1);
      }
      trQuestVarSet("zdatalitep3projshootcount", 0);
      trQuestVarSet("zdatalitep3projshootpointer", 0);
      trQuestVarSet("p3projshoot", 0);
      trQuestVarSet("zdatalitep5projshootcount", 0);
      trQuestVarSet("zdatalitep5projshootpointer", 0);
      trQuestVarSet("p5projshoot", 0);
      trEventFire(402);
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("bossposx"),1.5,trQuestVarGet("bossposz")));
      }
      xsDisableRule("_hyperspace_05_s2");
      trEcho("Trigger disabling rule hyperspace_05_s2");
   }
}

rule _hyperspace_06_end
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);

   trUnitSelectClear();
   trUnitSelectByID(6008);
   bool bVar1 = (trUnitPercentDamaged() >= trQuestVarGet("bossHP"));


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trEventFire(395);
      trQuestVarSet("bossHP", 0);
      trUnitSelectClear();
      trUnitSelect("8599");
      trDamageUnitPercent(-100);
      trQuestVarSet("dive", 0);
      trOverlayText(" ", 1.0, -1, -1, -1);
      xsDisableRule("_hyperspace_06_end");
      trEcho("Trigger disabling rule hyperspace_06_end");
   }
}

rule _Stage_C_24_nooo
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Nick: Nooooo! My engines!","Zenophobia\SFA\Nick");
      trEventFire(406);
      xsDisableRule("_Stage_C_24_nooo");
      trEcho("Trigger disabling rule Stage_C_24_nooo");
   }
}

rule _Stage_C_25
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Ace: Alright! Now let's bring him back to Zeno!","Zenophobia\SFA\Ace");
      trEventFire(195);
      xsDisableRule("_Stage_C_25");
      trEcho("Trigger disabling rule Stage_C_25");
   }
}

rule _nick_a3_01_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("nicka") == 1){
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("bossposx"),1.5,trQuestVarGet("bossposz")));
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("nickAngle")) * 1.0, 0, Math_cos(trQuestVarGet("nickAngle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p2projtarget", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p2projtarget", trVectorQuestVarGet("ziwrposs2"));
      }
      for(bb=1; >0) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projpointer")+1);
      if (trQuestVarGet("p2projpointer") > trQuestVarGet("p2projend")) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projstart"));
      }
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p2proj"));
      /**/ trUnitSetHeading(180);
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      }
      trEventFire(407);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      xsDisableRule("_nick_a3_01_s1");
      trEcho("Trigger disabling rule nick_a3_01_s1");
   }
}

rule _nick_a3_01_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("nicka") == 1){
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p2proj"));
      trUnitMoveToPoint(trVectorQuestVarGetX("p2projtarget"),trVectorQuestVarGetY("p2projtarget"),trVectorQuestVarGetZ("p2projtarget"), -1, false);
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + trQuestVarGet("waveAngleMod"));
      while (trQuestVarGet("nickAngle") > (6.283185)) {
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("nickAngle")) {
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + 6.283185);
      }
      trQuestVarSet("shoot", trQuestVarGet("shoot") - 1);
      if(trQuestVarGet("shoot") <= 0){
      trQuestVarSetFromRand("nickAngle", 0, trQuestVarGet("waveAngleMod"), false);
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + 1.570796);
      trQuestVarSet("shoot", trQuestVarGet("waveCount"));
      trQuestVarSet("waveAngleMod", trQuestVarGet("waveAngleMod") * -1.0);
      trQuestVarSet("nickVary", 0 - trQuestVarGet("nickVary"));
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") * trQuestVarGet("nickVary"));
      while (trQuestVarGet("nickAngle") > (6.283185)) {
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("nickAngle")) {
      trQuestVarSet("nickAngle", trQuestVarGet("nickAngle") + 6.283185);
      }
      trSoundPlayFN("mirrortowerfire.wav", "2", -1, "","");
      }
      trEventFire(366);
      }
      xsDisableRule("_nick_a3_01_s2");
      trEcho("Trigger disabling rule nick_a3_01_s2");
   }
}

rule _laser_timer_0
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVlasertimermove_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVlasertimermove_CompTime", trTimeMS());
   for(Accurate_Timer_QVlasertimermove_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVlasertimermove_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVlasertimermove_CompTime")) >= 1) {
   for(Accurate_Timer_QVlasertimermove_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVlasertimermove_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVlasertimermove_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(0);
      /**/ trMutateSelected(335);
      /**/ 
      /**/ 
      /**/ 
      trUnitMoveToPoint(trVectorQuestVarGetX("lasertimerEnd"),trVectorQuestVarGetY("lasertimerEnd"),trVectorQuestVarGetZ("lasertimerEnd"), -1, false);
      xsDisableRule("_laser_timer_0");
      trEcho("Trigger disabling rule laser_timer_0");
   }
}

rule _Stage_D_01_Start
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trUIFadeToColor(0,0,0,1000,0,false);
      trOverlayText("Stage 4: Save Molly", 3.0, 400, 150, 800);
      trBlockAllSounds(true);
      trQuestVarSet("stage", 4);
      trVectorQuestVarSet("bosspos", kbGetBlockPosition("6003"));
      trVectorQuestVarSet("bossmove", kbGetBlockPosition("6003"));
      trQuestVarSet("play", 1);
      trMusicPlay("Zenophobia\Mission One.mp3", "92", 0.0);
      trEventFire(408);
      /**/ trCameraCut(vector(50.0,130.0,50.0), vector(0.0,-1.000000,0.0), vector(0.0,0.0,1.0), vector(1.0,0.0,0.0));
      trStringQuestVarSet("bossHealthBar", "Stage 4: Save Molly");
      trSoundPlayFN("default", "1", -1, "Lives "+1*trQuestVarGet("lives")+" Bombs "+1*trQuestVarGet("bombs")+": "+trStringQuestVarGet("bossHealthBar")+"","");
      for(bb=16; >0) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidspointer")+1);
      if (trQuestVarGet("asteroidspointer") > trQuestVarGet("asteroidsend")) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidsstart"));
      }
      trQuestVarSet("asteroids", trQuestVarGet("asteroidspointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("asteroids"));
      trQuestVarSetFromRand("xpos", trQuestVarGet("minEnterX") + 5.0, trQuestVarGet("maxEnterX") - 5.0, false);
      trQuestVarSetFromRand("zpos", trQuestVarGet("minEnterz"), trQuestVarGet("maxEnterz"), false);
      trVectorQuestVarSet("V1", xsVectorSet(trQuestVarGet("xpos"),0.2,trQuestVarGet("zpos")));
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      }
      trEventFire(85);
      ambientColor(80,80,100);
      sunColor(60,60,60);
      /**/ projectileConvert(1, "Catapult Shot", "Einheriar Boost SFX");
      /**/ 
      /**/ projectileConvert(3, "Catapult Shot", "Einheriar Boost SFX");
      /**/ projectileConvert(4, "Tower Mirror", "Victory Marker", 0.8, 0);
      /**/ 
      /**/ 
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 3.0 + 1.0 * trGetWorldDifficulty() - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 3.0 + 1.0 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 4, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+4+"p"+zsps+"f1f"));
      trQuestVarSet("p"+4+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 5, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+5+"p"+zsps+"f1f"));
      trQuestVarSet("p"+5+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 3.0 + 1.0 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 3.0 + 1.0 * trGetWorldDifficulty());
      /* BACKDOOR */
      if(true) {
      trEventFire(409);
      /**/ } else {
      trEventFire(410);
      trEventFire(138);
      trEventFire(139);
      trEventFire(124);
      }
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 2, 1, 6.0 + 2.0 * trGetWorldDifficulty() - trQuestVarGet("p"+2+"p"+zsps+"f1f"));
      trQuestVarSet("p"+2+"p"+zsps+"f1f", 6.0 + 2.0 * trGetWorldDifficulty());
      trQuestVarSet("clearName", trGetNextUnitScenarioNameNumber());
      xsDisableRule("_Stage_D_01_Start");
      trEcho("Trigger disabling rule Stage_D_01_Start");
   }
}

rule _Stage_D_music1
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 72);

   bool bVar1 = (trQuestVarGet("play") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("play") == 1){
      trMusicPlay("Zenophobia\Mission One.mp3", "92", 0.5);
      trEventFire(411);
      }
      xsDisableRule("_Stage_D_music1");
      trEcho("Trigger disabling rule Stage_D_music1");
   }
}

rule _Stage_D_music2
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 72);

   bool bVar1 = (trQuestVarGet("play") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("play") == 1){
      trMusicPlay("Zenophobia\Mission One.mp3", "92", 0.5);
      trEventFire(408);
      }
      xsDisableRule("_Stage_D_music2");
      trEcho("Trigger disabling rule Stage_D_music2");
   }
}

rule _Stage_D_02
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 18);
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("minExitz")));
      trVectorQuestVarSet("enemyRow1shift", xsVectorSet(-2.0,0.0,0.0));
      trQuestVarSet("enemyRow2", 18);
      trVectorQuestVarSet("enemyRow2start", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow2end", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("minExitz")));
      trVectorQuestVarSet("enemyRow2shift", xsVectorSet(2.0,0.0,0.0));
      trEventFire(412);
      xsDisableRule("_Stage_D_02");
      trEcho("Trigger disabling rule Stage_D_02");
   }
}

rule _Stage_D_03
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 9);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn") + 8,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn") - 8,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemySpray2", 1);
      if(trGetWorldDifficulty() >= 2){
      trVectorQuestVarSet("enemyBarge1start", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge1end", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("upperSpawn") - 20.0));
      trQuestVarSet("enemyBarge1", 1);
      }
      trEventFire(413);
      xsDisableRule("_Stage_D_03");
      trEcho("Trigger disabling rule Stage_D_03");
   }
}

rule _Stage_D_04
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyBarge1start", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyBarge1end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trQuestVarSet("enemyBarge1", 3);
      trVectorQuestVarSet("enemyKebenit1start", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trVectorQuestVarSet("enemyKebenit1end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trQuestVarSet("enemyKebenit1", 3);
      trEventFire(414);
      xsDisableRule("_Stage_D_04");
      trEcho("Trigger disabling rule Stage_D_04");
   }
}

rule _Stage_D_05
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0,trQuestVarGet("upperSpawn") + 5));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemySpray2", 1);
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0,trQuestVarGet("upperSpawn") + 10));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("middleSpawn") - 12,0,trQuestVarGet("minExitz")));
      trEventFire(415);
      trQuestVarSet("enemySpray3", 1);
      xsDisableRule("_Stage_D_05");
      trEcho("Trigger disabling rule Stage_D_05");
   }
}

rule _Stage_D_06
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemySpray1") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0,trQuestVarGet("upperSpawn") + 10));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn") + 15,0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0,trQuestVarGet("upperSpawn") + 10));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") - 15,0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemySpray2", 1);
      trEventFire(416);
      xsDisableRule("_Stage_D_06");
      trEcho("Trigger disabling rule Stage_D_06");
   }
}

rule _Stage_D_07_lines
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 18);
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyRow2", 18);
      trVectorQuestVarSet("enemyRow2start", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow2end", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("minExitz")));
      trEventFire(417);
      for(bb=256; >0) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p4proj"));
      trUnitTeleport(1.14, 0.00, 0.80);
      }
      xsDisableRule("_Stage_D_07_lines");
      trEcho("Trigger disabling rule Stage_D_07_lines");
   }
}

rule _Stage_D_08_reflect
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemyRow1") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 18);
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyRow2", 18);
      trVectorQuestVarSet("enemyRow2start", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow2end", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("minExitz")));
      trEventFire(418);
      trVectorQuestVarSet("enemyBarge1start", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge1end", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("upperSpawn") - 20));
      trQuestVarSet("enemyBarge1", 1);
      xsDisableRule("_Stage_D_08_reflect");
      trEcho("Trigger disabling rule Stage_D_08_reflect");
   }
}

rule _Stage_D_09
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0,trQuestVarGet("upperSpawn") + 5));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemySpray2", 1);
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0,trQuestVarGet("upperSpawn") + 10));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("middleSpawn") - 12,0,trQuestVarGet("minExitz")));
      trEventFire(419);
      trQuestVarSet("enemySpray3", 1);
      xsDisableRule("_Stage_D_09");
      trEcho("Trigger disabling rule Stage_D_09");
   }
}

rule _Stage_D_10
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemySpray1") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0,trQuestVarGet("upperSpawn") + 10));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn") + 15,0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0,trQuestVarGet("upperSpawn") + 10));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") - 15,0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemySpray2", 1);
      trEventFire(420);
      xsDisableRule("_Stage_D_10");
      trEcho("Trigger disabling rule Stage_D_10");
   }
}

rule _Stage_D_11
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyBarge1start", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge1end", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("upperSpawn") - 20));
      trQuestVarSet("enemyBarge1", 1);
      trVectorQuestVarSet("enemyBarge2start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge2end", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0,trQuestVarGet("upperSpawn") - 20));
      trQuestVarSet("enemyBarge2", 1);
      trVectorQuestVarSet("enemyBarge3start", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge3end", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0,trQuestVarGet("upperSpawn") - 20));
      trQuestVarSet("enemyBarge3", 1);
      trEventFire(421);
      xsDisableRule("_Stage_D_11");
      trEcho("Trigger disabling rule Stage_D_11");
   }
}

rule _Stage_D_12
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyBarge1start", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyBarge1end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trQuestVarSet("enemyBarge1", 3);
      trVectorQuestVarSet("enemyKebenit1start", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trVectorQuestVarSet("enemyKebenit1end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trQuestVarSet("enemyKebenit1", 3);
      trEventFire(422);
      xsDisableRule("_Stage_D_12");
      trEcho("Trigger disabling rule Stage_D_12");
   }
}

rule _Stage_D_13_side_spray
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trQuestVarSet("enemyspray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("leftSpawn") - 5,0,trQuestVarGet("maxBoundz") - 15));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trQuestVarSet("enemyspray2", 1);
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("leftSpawn") -10,0,trQuestVarGet("maxBoundz") - 20));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 20));
      trQuestVarSet("enemyspray3", 1);
      trEventFire(423);
      xsDisableRule("_Stage_D_13_side_spray");
      trEcho("Trigger disabling rule Stage_D_13_side_spray");
   }
}

rule _Stage_D_14
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trQuestVarSet("enemyspray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("rightSpawn") + 5,0,trQuestVarGet("maxBoundz") - 15));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trQuestVarSet("enemyspray2", 1);
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("rightSpawn") + 10,0,trQuestVarGet("maxBoundz") - 20));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 20));
      trQuestVarSet("enemyspray3", 1);
      trEventFire(424);
      xsDisableRule("_Stage_D_14");
      trEcho("Trigger disabling rule Stage_D_14");
   }
}

rule _Stage_D_15_lines
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 18);
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyRow2", 18);
      trVectorQuestVarSet("enemyRow2start", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow2end", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("minExitz")));
      trEventFire(425);
      for(bb=256; >0) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p4proj"));
      trUnitTeleport(1.01, 0.00, 0.86);
      }
      xsDisableRule("_Stage_D_15_lines");
      trEcho("Trigger disabling rule Stage_D_15_lines");
   }
}

rule _Stage_D_16_reflect
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemyRow1") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 18);
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyRow2", 18);
      trVectorQuestVarSet("enemyRow2start", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow2end", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("minExitz")));
      trEventFire(426);
      trVectorQuestVarSet("enemyBarge1start", xsVectorSet(trQuestVarGet("middleSpawn")+5,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge1end", xsVectorSet(trQuestVarGet("middleSpawn")+5,0,trQuestVarGet("upperSpawn") - 20));
      trQuestVarSet("enemyBarge1", 1);
      trVectorQuestVarSet("enemyBarge2start", xsVectorSet(trQuestVarGet("middleSpawn")-5,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge2end", xsVectorSet(trQuestVarGet("middleSpawn")-5,0,trQuestVarGet("upperSpawn") - 20));
      trQuestVarSet("enemyBarge2", 1);
      xsDisableRule("_Stage_D_16_reflect");
      trEcho("Trigger disabling rule Stage_D_16_reflect");
   }
}

rule _Stage_D_17
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trQuestVarSet("enemyspray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("rightSpawn") + 5,0,trQuestVarGet("maxBoundz") - 15));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trQuestVarSet("enemyspray2", 1);
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("rightSpawn") + 10,0,trQuestVarGet("maxBoundz") - 20));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 20));
      trQuestVarSet("enemyspray3", 1);
      trEventFire(427);
      trVectorQuestVarSet("enemyKebenit1start", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trVectorQuestVarSet("enemyKebenit1end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trQuestVarSet("enemyKebenit1", 2);
      xsDisableRule("_Stage_D_17");
      trEcho("Trigger disabling rule Stage_D_17");
   }
}

rule _Stage_D_18_side_spray
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trQuestVarSet("enemyspray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("leftSpawn") - 5,0,trQuestVarGet("maxBoundz") - 15));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trQuestVarSet("enemyspray2", 1);
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("leftSpawn") -10,0,trQuestVarGet("maxBoundz") - 20));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 20));
      trQuestVarSet("enemyspray3", 1);
      trEventFire(428);
      trVectorQuestVarSet("enemyKebenit2start", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trVectorQuestVarSet("enemyKebenit2end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trQuestVarSet("enemykebenit2", 2);
      xsDisableRule("_Stage_D_18_side_spray");
      trEcho("Trigger disabling rule Stage_D_18_side_spray");
   }
}

rule _Stage_D_19
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemyBarge1start", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemyBarge1end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trQuestVarSet("enemyBarge1", 3);
      trVectorQuestVarSet("enemyKebenit1start", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trVectorQuestVarSet("enemyKebenit1end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trQuestVarSet("enemyKebenit1", 3);
      trEventFire(429);
      xsDisableRule("_Stage_D_19");
      trEcho("Trigger disabling rule Stage_D_19");
   }
}

rule _Stage_D_20
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiescount") <= 3);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemySpray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("middleSpawn") + 5,0,trQuestVarGet("upperSpawn") + 5));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemySpray2", 1);
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("middleSpawn") - 5,0,trQuestVarGet("upperSpawn") + 10));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("middleSpawn") - 12,0,trQuestVarGet("minExitz")));
      trEventFire(430);
      trQuestVarSet("enemySpray3", 1);
      xsDisableRule("_Stage_D_20");
      trEcho("Trigger disabling rule Stage_D_20");
   }
}

rule _Stage_D_21_lines
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 18);
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyRow2", 18);
      trVectorQuestVarSet("enemyRow2start", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow2end", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("minExitz")));
      trEventFire(431);
      xsDisableRule("_Stage_D_21_lines");
      trEcho("Trigger disabling rule Stage_D_21_lines");
   }
}

rule _Stage_D_22_reflect
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemyRow1") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 18);
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyRow2", 18);
      trVectorQuestVarSet("enemyRow2start", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow2end", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("minExitz")));
      trEventFire(432);
      trEventFire(433);
      xsDisableRule("_Stage_D_22_reflect");
      trEcho("Trigger disabling rule Stage_D_22_reflect");
   }
}

rule _Stage_D_23_side_spray
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trQuestVarSet("enemyspray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("leftSpawn") - 5,0,trQuestVarGet("maxBoundz") - 15));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trQuestVarSet("enemyspray2", 1);
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("leftSpawn") -10,0,trQuestVarGet("maxBoundz") - 20));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 20));
      trQuestVarSet("enemyspray3", 1);
      xsDisableRule("_Stage_D_23_side_spray");
      trEcho("Trigger disabling rule Stage_D_23_side_spray");
   }
}

rule _Stage_D_24_reflect
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemyRow1") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 18);
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyRow2", 18);
      trVectorQuestVarSet("enemyRow2start", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow2end", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("minExitz")));
      trEventFire(434);
      trEventFire(435);
      xsDisableRule("_Stage_D_24_reflect");
      trEcho("Trigger disabling rule Stage_D_24_reflect");
   }
}

rule _Stage_D_25_side_spray
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("enemySpray1start", xsVectorSet(trQuestVarGet("rightSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trVectorQuestVarSet("enemySpray1end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 10));
      trQuestVarSet("enemyspray1", 1);
      trVectorQuestVarSet("enemySpray2start", xsVectorSet(trQuestVarGet("rightSpawn") + 5,0,trQuestVarGet("maxBoundz") - 15));
      trVectorQuestVarSet("enemySpray2end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 15));
      trQuestVarSet("enemyspray2", 1);
      trVectorQuestVarSet("enemySpray3start", xsVectorSet(trQuestVarGet("rightSpawn") + 10,0,trQuestVarGet("maxBoundz") - 20));
      trVectorQuestVarSet("enemySpray3end", xsVectorSet(trQuestVarGet("leftSpawn"),0,trQuestVarGet("maxBoundz") - 20));
      trQuestVarSet("enemyspray3", 1);
      xsDisableRule("_Stage_D_25_side_spray");
      trEcho("Trigger disabling rule Stage_D_25_side_spray");
   }
}

rule _Stage_D_26_reflect
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("enemyRow1") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("enemyRow1", 18);
      trVectorQuestVarSet("enemyRow1start", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow1end", xsVectorSet(trQuestVarGet("middleSpawn") + 18.0,0.0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyRow2", 18);
      trVectorQuestVarSet("enemyRow2start", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyRow2end", xsVectorSet(trQuestVarGet("middleSpawn") - 18.0,0.0,trQuestVarGet("minExitz")));
      trEventFire(432);
      trVectorQuestVarSet("enemyBarge1start", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge1end", xsVectorSet(trQuestVarGet("middleSpawn"),0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyBarge1", 1);
      trVectorQuestVarSet("enemyBarge2start", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge2end", xsVectorSet(trQuestVarGet("middleSpawn") + 10,0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyBarge2", 1);
      trVectorQuestVarSet("enemyBarge3start", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0,trQuestVarGet("upperSpawn")));
      trVectorQuestVarSet("enemyBarge3end", xsVectorSet(trQuestVarGet("middleSpawn") - 10,0,trQuestVarGet("minExitz")));
      trQuestVarSet("enemyBarge3", 1);
      trEventFire(410);
      xsDisableRule("_Stage_D_26_reflect");
      trEcho("Trigger disabling rule Stage_D_26_reflect");
   }
}

rule _Stage_D_27_end
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdataliteenemiescount") == 0);

   bool bVar1 = (trQuestVarGet("zdataliteenemiesincomingcount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trEventFire(436);
      trUnitSelectClear();
      trUnitSelectByID(6008);
      trUnitDelete(false);
      xsDisableRule("_Stage_D_27_end");
      trEcho("Trigger disabling rule Stage_D_27_end");
   }
}

rule _Stage_D_28_boss_appear
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("vortexstart.wav", "3", -1, "","");
      trEventFire(17);
      trQuestVarSet("play", 0);
      if(false) { trVectorQuestVarSet("bossmove", xsVectorSet(49.99, 0.00, 54.64));
      for(a=0; >1){}for(b=0; >1){}for(c=0; >1){} a = xsVectorGetX(trVectorQuestVarGet("bossmove"));b = xsVectorGetY(trVectorQuestVarGet("bossmove"));c = xsVectorGetZ(trVectorQuestVarGet("bossmove"));
      trVectorQuestVarSet("bossmove",xsVectorSet(a,b,c));}
      else {trVectorQuestVarSet("bossmove", xsVectorSet(49.99, 0.00, 54.64));}
      trEventFire(122);
      trModifyProtounit("Petrobolos Shot", 2, 1, -1.999);
      trQuestVarSet("movement", 1);
      xsDisableRule("_Stage_C_music1");
      xsDisableRule("_Stage_C_music2");
      trFadeOutMusic(3.0);
      trEventFire(437);
      for(bb=16; >0) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidspointer")+1);
      if (trQuestVarGet("asteroidspointer") > trQuestVarGet("asteroidsend")) {
      trQuestVarSet("asteroidspointer", trQuestVarGet("asteroidsstart"));
      }
      trQuestVarSet("asteroids", trQuestVarGet("asteroidspointer"));
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("asteroids"));
      trVectorQuestVarSet("asteroid"+1*trQuestVarGet("asteroids")+"pos", kbGetBlockPosition(""+1*trQuestVarGet("asteroids")));
      /**/ trMutateSelected(kbGetProtoUnitID("Manticore Barb"));
      /**/ trMutateSelected(kbGetProtoUnitID("Catapult Shot"));
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      }
      trQuestVarSet("asteroidfield", 0);
      trQuestVarSet("ceasefire", 1);
      xsDisableRule("_Stage_D_28_boss_appear");
      trEcho("Trigger disabling rule Stage_D_28_boss_appear");
   }
}

rule _Stage_D_29
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Yeebaagooon: Ah, there you are. Ready for round two?","Zenophobia\SFA\Yeebaagooon");
      /**/ projectileConvert(1, "Lampades Bolt", "Victory Marker");
      /**/ projectileConvert(3, "Petosuchus Projectile", "Invisible Target", 0.3, 1, 3600);
      /**/ projectileConvert(4, "Outpost", "Victory Marker", 0.6, 0);
      /**/ 
      /**/ 
      /**/ 
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 6.0 + 2.0 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 6.0 + 2.0 * trGetWorldDifficulty());
      if(trQuestVarGet("pilot") == 0){
      trEventFire(438);
      } else {
      trEventFire(439);
      }
      for(UnitID=0; >1) {}
      for(type=0; >1) {}
      for(ySearchTarget = 0; > 1){}
      ySearchTarget = trGetNextUnitScenarioNameNumber();
      while(ySearchTarget > trQuestVarGet("clearName")){
      trUnitSelectClear();
      trUnitSelect(""+1*trQuestVarGet("clearName"));
      if (kbGetUnitBaseTypeID(kbGetBlockID(""+1*trQuestVarGet("clearName"))) != -1){
      UnitID = kbGetBlockID(""+1*trQuestVarGet("clearName"));
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitDestroy();
      }
      trQuestVarSet("clearName", trQuestVarGet("clearName")+1);}
      xsDisableRule("_Stage_D_29");
      trEcho("Trigger disabling rule Stage_D_29");
   }
}

rule _Stage_D_30_A
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Ace: I could do this all day.","Zenophobia\SFA\Ace");
      trEventFire(440);
      xsDisableRule("_Stage_D_30_A");
      trEcho("Trigger disabling rule Stage_D_30_A");
   }
}

rule _Stage_D_30_O
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Oliver: Give up, Yeebaagooon!","Zenophobia\SFA\Oliver");
      trEventFire(441);
      xsDisableRule("_Stage_D_30_O");
      trEcho("Trigger disabling rule Stage_D_30_O");
   }
}

rule _Stage_D_31_A
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Yeebaagooon: Excellent! I've brought an extra stockpile of ammunition just for you.","Zenophobia\SFA\Yeebaagooon");
      trEventFire(442);
      xsDisableRule("_Stage_D_31_A");
      trEcho("Trigger disabling rule Stage_D_31_A");
   }
}

rule _Stage_D_31_O
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Yeebaagooon: Hahaha! You're the one that should give up! I have all the cards in my hands!","Zenophobia\SFA\Yeebaagooon");
      trEventFire(443);
      xsDisableRule("_Stage_D_31_O");
      trEcho("Trigger disabling rule Stage_D_31_O");
   }
}

rule _Stage_D_32_A
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Ace: Doesn't matter how much you bring if you can never hit anything.","Zenophobia\SFA\Ace");
      trEventFire(444);
      xsDisableRule("_Stage_D_32_A");
      trEcho("Trigger disabling rule Stage_D_32_A");
   }
}

rule _Stage_D_32_O
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Oliver: We'll see about that!","Zenophobia\SFA\Oliver");
      trEventFire(445);
      xsDisableRule("_Stage_D_32_O");
      trEcho("Trigger disabling rule Stage_D_32_O");
   }
}

rule _Stage_D_33_A
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Yeebaagooon: Hmph. I'll make you eat those words, and these bullets!","Zenophobia\SFA\Yeebaagooon");
      trEventFire(445);
      xsDisableRule("_Stage_D_33_A");
      trEcho("Trigger disabling rule Stage_D_33_A");
   }
}

rule _Stage_D_34_boss_start
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 5);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("play", 1);
      trMusicPlay("Zenophobia\Megalovania.mp3", "152", 0.0);
      trQuestVarSet("spells", 5);
      trEventFire(446);
      trQuestVarSet("boss", 2);
      trStringQuestVarSet("bossName", "Yeebaagooon ");
      trEventFire(135);
      /* BACKDOOR */
      if(true) {
      trEventFire(447);
      /**/ } else {
      trEventFire(448);
      }
      trQuestVarSet("zdataliteplayerProjActivecount", 0);
      trQuestVarSet("zdataliteplayerProjActivepointer", 0);
      trQuestVarSet("playerProjActive", 0);
      trEventFire(28);
      xsDisableRule("_Stage_D_34_boss_start");
      trEcho("Trigger disabling rule Stage_D_34_boss_start");
   }
}

rule _yeeb_music3
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 145);

   bool bVar1 = (trQuestVarGet("boss") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boss") == 2){
      trMusicPlay("Zenophobia\Megalovania.mp3", "152", 0.5);
      trEventFire(449);
      }
      xsDisableRule("_yeeb_music3");
      trEcho("Trigger disabling rule yeeb_music3");
   }
}

rule _yeeb_music4
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 145);

   bool bVar1 = (trQuestVarGet("boss") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boss") == 2){
      trMusicPlay("Zenophobia\Megalovania.mp3", "152", 0.5);
      trEventFire(446);
      }
      xsDisableRule("_yeeb_music4");
      trEcho("Trigger disabling rule yeeb_music4");
   }
}

rule _yeeb_a3_00_startup
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", 3);
      trQuestVarSet("bossAmmoMax", 3);
      trEventFire(450);
      trQuestVarSet("lasercount", 9 + 3 * trGetWorldDifficulty());
      trQuestVarSet("laserAngleMod", 2.1 / (trQuestVarGet("laserCount") + 1.0));
      xsDisableRule("_yeeb_a3_00_startup");
      trEcho("Trigger disabling rule yeeb_a3_00_startup");
   }
}

rule _yeeb_a3_01_fire
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVyeeba1firetimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVyeeba1firetimer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVyeeba1firetimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVyeeba1firetimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("lasersource1angle", 3.141592 - 0.5 * trQuestVarGet("laserAngleMod"));
      trQuestVarSet("lasersource2angle", 3.141592 + 0.5 * trQuestVarGet("laserAngleMod"));
      trVectorQuestVarSet("laserCenter", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossposz")));
      trQuestVarCopy("lasershoot", "lasercount");
      trEventFire(451);
      trEventFire(452);
      xsDisableRule("_yeeb_a3_01_fire");
      trEcho("Trigger disabling rule yeeb_a3_01_fire");
   }
}

rule _yeeb_a3_02_s1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("lasersource1",xsVectorSet(Math_sin(trQuestVarGet("lasersource1angle")) * 8.0, 0, Math_cos(trQuestVarGet("lasersource1angle")) * 8.0));
      trVectorQuestVarSet("lasersource2",xsVectorSet(Math_sin(trQuestVarGet("lasersource2angle")) * 8.0, 0, Math_cos(trQuestVarGet("lasersource2angle")) * 8.0));
      trVectorQuestVarSet("lasersource1", trVectorQuestVarGet("lasersource1") + trVectorQuestVarGet("laserCenter"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("lasersource1");b = trVectorQuestVarGetY("lasersource1");c = trVectorQuestVarGetZ("lasersource1");
      trVectorQuestVarSet("lasersource1",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("lasersource2", trVectorQuestVarGet("lasersource2") + trVectorQuestVarGet("laserCenter"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("lasersource2");b = trVectorQuestVarGetY("lasersource2");c = trVectorQuestVarGetZ("lasersource2");
      trVectorQuestVarSet("lasersource2",xsVectorSet(a,b,c));}
      trQuestVarCopy("laserangle1", "lasersource1angle");
      trQuestVarCopy("laserangle2", "lasersource1angle");
      trQuestVarCopy("laserangle3", "lasersource2angle");
      trQuestVarCopy("laserangle4", "lasersource2angle");
      trQuestVarSet("laserangle1", trQuestVarGet("laserangle1") + 0.47);
      while (trQuestVarGet("laserangle1") > (6.283185)) {
      trQuestVarSet("laserangle1", trQuestVarGet("laserangle1") - (6.283185));
      }
      while (0 > trQuestVarGet("laserangle1")) {
      trQuestVarSet("laserangle1", trQuestVarGet("laserangle1") + 6.283185);
      }
      trQuestVarSet("laserangle2", trQuestVarGet("laserangle2") - 0.47);
      while (trQuestVarGet("laserangle2") > (6.283185)) {
      trQuestVarSet("laserangle2", trQuestVarGet("laserangle2") - (6.283185));
      }
      while (0 > trQuestVarGet("laserangle2")) {
      trQuestVarSet("laserangle2", trQuestVarGet("laserangle2") + 6.283185);
      }
      trQuestVarSet("laserangle3", trQuestVarGet("laserangle3") + 0.47);
      while (trQuestVarGet("laserangle3") > (6.283185)) {
      trQuestVarSet("laserangle3", trQuestVarGet("laserangle3") - (6.283185));
      }
      while (0 > trQuestVarGet("laserangle3")) {
      trQuestVarSet("laserangle3", trQuestVarGet("laserangle3") + 6.283185);
      }
      trQuestVarSet("laserangle4", trQuestVarGet("laserangle4") - 0.47);
      while (trQuestVarGet("laserangle4") > (6.283185)) {
      trQuestVarSet("laserangle4", trQuestVarGet("laserangle4") - (6.283185));
      }
      while (0 > trQuestVarGet("laserangle4")) {
      trQuestVarSet("laserangle4", trQuestVarGet("laserangle4") + 6.283185);
      }
      trVectorQuestVarSet("laserstart1", trVectorQuestVarGet("lasersource1"));
      trVectorQuestVarSet("laserstart2", trVectorQuestVarGet("lasersource1"));
      trVectorQuestVarSet("laserstart3", trVectorQuestVarGet("lasersource2"));
      trVectorQuestVarSet("laserstart4", trVectorQuestVarGet("lasersource2"));
      /**/ activateLightningLasers(4);
      trEventFire(453);
      trQuestVarSet("lasersource1angle", trQuestVarGet("lasersource1angle") - trQuestVarGet("laserAngleMod"));
      while (trQuestVarGet("lasersource1angle") > (6.283185)) {
      trQuestVarSet("lasersource1angle", trQuestVarGet("lasersource1angle") - (6.283185));
      }
      while (0 > trQuestVarGet("lasersource1angle")) {
      trQuestVarSet("lasersource1angle", trQuestVarGet("lasersource1angle") + 6.283185);
      }
      trQuestVarSet("lasersource2angle", trQuestVarGet("lasersource2angle") + trQuestVarGet("laserAngleMod"));
      while (trQuestVarGet("lasersource2angle") > (6.283185)) {
      trQuestVarSet("lasersource2angle", trQuestVarGet("lasersource2angle") - (6.283185));
      }
      while (0 > trQuestVarGet("lasersource2angle")) {
      trQuestVarSet("lasersource2angle", trQuestVarGet("lasersource2angle") + 6.283185);
      }
      trSoundPlayFN("skypassagein.wav", "1", -1, "","");
      xsDisableRule("_yeeb_a3_02_s1");
      trEcho("Trigger disabling rule yeeb_a3_02_s1");
   }
}

rule _yeeb_a3_02_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVyeeba2s2timer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVyeeba2s2timer_CompTime", trTimeMS());
   for(Accurate_Timer_QVyeeba2s2timer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeeba2s2timer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVyeeba2s2timer_CompTime")) >= 80) {
   for(Accurate_Timer_QVyeeba2s2timer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeeba2s2timer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVyeeba2s2timer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("lasershoot", trQuestVarGet("lasershoot") - 1);
      if(trQuestVarGet("lasershoot") > 0){
      trEventFire(451);
      }
      xsDisableRule("_yeeb_a3_02_s2");
      trEcho("Trigger disabling rule yeeb_a3_02_s2");
   }
}

rule _yeeb_a3_03
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("lasershoot") == 0);

   bool bVar1 = (trQuestVarGet("zdatalitelightninglaserscount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(450);
      trEventFire(145);
      /**/ } else {
      /* BACKDOOR */
      if(true) {
      trEventFire(454);
      /**/ } else {
      trEventFire(-1);
      }
      }
      xsDisableRule("_yeeb_a3_03");
      trEcho("Trigger disabling rule yeeb_a3_03");
   }
}

rule _sparks_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("yeebspell", 1);
      trQuestVarSet("sparks", 1);
      trOverlayText("47 Sparks", 3.0, 620, 360, 800);
      trEventFire(455);
      trVectorQuestVarSet("bossMove", xsVectorSet(trQuestVarGet("playCenterx"),0,trQuestVarGet("playCenterz") + 8.0));
      trQuestVarSet("bossAmmo", 4);
      trQuestVarSet("bossAmmoMax", 4);
      trStringQuestVarSet("bossName", "47 Sparks ");
      /**/ int k = kbGetProtoUnitID("Arkantos God");
      for(bb=47; >0) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p1proj"));
      /**/ 
      /**/ 
      /**/ trUnitChangeProtoUnit("Arkantos God");
      /**/ trSetSelectedScale(0,1,0);
      /**/ trUnitOverrideAnimation(26, 0, 1, 0, -1, 0);
      /**/ 
      }
      for(bb=16; >0) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXpointer")+1);
      if (trQuestVarGet("spareSFXpointer") > trQuestVarGet("spareSFXend")) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXstart"));
      }
      trQuestVarSet("spareSFX", trQuestVarGet("spareSFXpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("spareSFX"));
      trUnitChangeProtoUnit("UI Range Indicator Greek SFX");
      }
      trQuestVarSet("sparkDuration", 30 + 10 * trGetWorldDifficulty());
      trQuestVarSet("sparkDelay", 1200 - 200 * trGetWorldDifficulty());
      trEventFire(456);
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer") - 47);
      if(trQuestVarGet("p1projpointer") < trQuestVarGet("p1projstart")){
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer") + 256);
      }
      xsDisableRule("_sparks_00_startup");
      trEcho("Trigger disabling rule sparks_00_startup");
   }
}

rule _sparks_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 1500) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("start", xsVectorSet(trQuestVarGet("bossposx"),0,trQuestVarGet("bossposz") - 10.0));
      if(trGetWorldDifficulty() <= 1){
      trEventFire(457);
      } else {
      trEventFire(458);
      }
      trSoundPlayFN("attackwarning.wav", "2", -1, "","");
      for(bb=1; >0) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXpointer")+1);
      if (trQuestVarGet("spareSFXpointer") > trQuestVarGet("spareSFXend")) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXstart"));
      }
      trQuestVarSet("spareSFX", trQuestVarGet("spareSFXpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("spareSFX"));
      trUnitTeleport(trVectorQuestVarGetX("start"),trVectorQuestVarGetY("start"),trVectorQuestVarGetZ("start"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitesparksIncomingcount");
      trQuestVarSet("zdatalitesparksIncomingindex"+zdatacount, trQuestVarGet("spareSFX"));
      trQuestVarSet("zdatalitesparksIncomingcount", zdatacount+1);
      trQuestVarCopy("spark"+zdatacount+"countdown", "sparkDelay");
      trVectorQuestVarSet("spark"+zdatacount+"pos", trVectorQuestVarGet("start"));
      }
      xsDisableRule("_sparks_01");
      trEcho("Trigger disabling rule sparks_01");
   }
}

rule _sparks_02_targeted
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 2 * trQuestVarGet("sparkDelay")) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("shoot", 7);
      trEventFire(459);
      trEventFire(460);
      xsDisableRule("_sparks_02_targeted");
      trEcho("Trigger disabling rule sparks_02_targeted");
   }
}

rule _sparks_03_s1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("attackwarning.wav", "2", -1, "","");
      trVectorQuestVarSet("start", xsVectorSet(trQuestVarGet("playerposx"),0,trQuestVarGet("playerposz")));
      for(bb=1; >0) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXpointer")+1);
      if (trQuestVarGet("spareSFXpointer") > trQuestVarGet("spareSFXend")) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXstart"));
      }
      trQuestVarSet("spareSFX", trQuestVarGet("spareSFXpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("spareSFX"));
      trUnitTeleport(trVectorQuestVarGetX("start"),trVectorQuestVarGetY("start"),trVectorQuestVarGetZ("start"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitesparksIncomingcount");
      trQuestVarSet("zdatalitesparksIncomingindex"+zdatacount, trQuestVarGet("spareSFX"));
      trQuestVarSet("zdatalitesparksIncomingcount", zdatacount+1);
      trQuestVarCopy("spark"+zdatacount+"countdown", "sparkDelay");
      trVectorQuestVarSet("spark"+zdatacount+"pos", trVectorQuestVarGet("start"));
      }
      trEventFire(461);
      xsDisableRule("_sparks_03_s1");
      trEcho("Trigger disabling rule sparks_03_s1");
   }
}

rule _sparks_03_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 700) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("shoot", trQuestVarGet("shoot") - 1);
      if(trQuestVarGet("shoot") >= 1){
      trEventFire(459);
      }
      xsDisableRule("_sparks_03_s2");
      trEcho("Trigger disabling rule sparks_03_s2");
   }
}

rule _sparks_04_next
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("shoot") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(458);
      } else {
      trEventFire(462);
      }
      xsDisableRule("_sparks_04_next");
      trEcho("Trigger disabling rule sparks_04_next");
   }
}

rule _sparks_05_grid
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 2 * trQuestVarGet("sparkDelay")) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("step", xsVectorSet((trQuestVarGet("maxBoundx") - trQuestVarGet("minBoundx")) / 5,0,(trQuestVarGet("maxBoundz") - trQuestVarGet("minBoundz")) / 5));
      /**/ for(z=4; >0) {
      trVectorQuestVarSet("start", xsVectorSet(trQuestVarGet("maxBoundx") - trQuestVarGet("stepx"),0,trQuestVarGet("maxBoundz") - (trQuestVarGet("stepz") * z)));
      /**/ for(x=4; >0) {
      for(bb=1; >0) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXpointer")+1);
      if (trQuestVarGet("spareSFXpointer") > trQuestVarGet("spareSFXend")) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXstart"));
      }
      trQuestVarSet("spareSFX", trQuestVarGet("spareSFXpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("spareSFX"));
      trUnitTeleport(trVectorQuestVarGetX("start"),trVectorQuestVarGetY("start"),trVectorQuestVarGetZ("start"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitesparksIncomingcount");
      trQuestVarSet("zdatalitesparksIncomingindex"+zdatacount, trQuestVarGet("spareSFX"));
      trQuestVarSet("zdatalitesparksIncomingcount", zdatacount+1);
      trQuestVarCopy("spark"+zdatacount+"countdown", "sparkDelay");
      trVectorQuestVarSet("spark"+zdatacount+"pos", trVectorQuestVarGet("start"));
      }
      trVectorQuestVarSet("start", xsVectorSet(trQuestVarGet("startx") - trQuestVarGet("stepx"),0,trQuestVarGet("startz")));
      /**/ }}
      trSoundPlayFN("attackwarning.wav", "2", -1, "","");
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(457);
      } else {
      trEventFire(462);
      }
      xsDisableRule("_sparks_05_grid");
      trEcho("Trigger disabling rule sparks_05_grid");
   }
}

rule _sparks_06_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= 100) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitesparksIncomingcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitesparksIncomingcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitesparksIncomingpointer", trQuestVarGet("zdatalitesparksIncomingpointer")-1);
      if (0 > trQuestVarGet("zdatalitesparksIncomingpointer")) {
      trQuestVarSet("zdatalitesparksIncomingpointer", trQuestVarGet("zdatalitesparksIncomingcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitesparksIncomingpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitesparksIncomingindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitesparksIncomingcount") - 1;
      zdataremove = trQuestVarGet("zdatalitesparksIncomingpointer");
      trQuestVarSet("zdatalitesparksIncomingindex"+zdataremove, trQuestVarGet("zdatalitesparksIncomingindex"+zdatacount));
      trQuestVarSet("zdatalitesparksIncomingcount", zdatacount);
      trQuestVarSet("zdatalitesparksIncomingpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("sparksIncoming", trQuestVarGet("zdatalitesparksIncomingindex"+zdatapointer));
      UnitID = trQuestVarGet("sparksIncoming");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trQuestVarSet("spark"+zdatapointer+"countdown", trQuestVarGet("spark"+zdatapointer+"countdown") - 100);
      if(trQuestVarGet("spark"+zdatapointer+"countdown") <= 0){
      trVectorQuestVarSet("V1", trVectorQuestVarGet("spark"+zdatapointer+"pos"));
      trQuestVarSet("soundplay", 1);
      trUnitTeleport(0.60, 0.00, 0.95);
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdatalitesparksIncomingcount") - 1;
      zdataremove = trQuestVarGet("zdatalitesparksIncomingpointer");
      trQuestVarSet("zdatalitesparksIncomingindex"+zdataremove, trQuestVarGet("zdatalitesparksIncomingindex"+zdatacount));
      trQuestVarSet("zdatalitesparksIncomingcount", zdatacount);
      if (trQuestVarGet("zdatalitesparksIncomingpointer") >= trQuestVarGet("zdatalitesparksIncomingcount")) {
      trQuestVarSet("zdatalitesparksIncomingpointer", trQuestVarGet("zdatalitesparksIncomingcount")-1);
      }
      trQuestVarCopy("spark"+zdatapointer+"countdown", "spark"+zdatacount+"countdown");
      trVectorQuestVarSet("spark"+zdatapointer+"pos", trVectorQuestVarGet("spark"+zdatacount+"pos"));
      for(bb=1; >0) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p1proj"));
      trUnitTeleport(trVectorQuestVarGetX("V1"),trVectorQuestVarGetY("V1"),trVectorQuestVarGetZ("V1"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitesparksActivecount");
      trQuestVarSet("zdatalitesparksActiveindex"+zdatacount, trQuestVarGet("p1proj"));
      trQuestVarSet("zdatalitesparksActivecount", zdatacount+1);
      trQuestVarCopy("spark"+zdatacount+"timer", "sparkDuration");
      }
      }
      }
      trEventFire(463);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitesparksActivecount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitesparksActivecount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitesparksActivepointer", trQuestVarGet("zdatalitesparksActivepointer")-1);
      if (0 > trQuestVarGet("zdatalitesparksActivepointer")) {
      trQuestVarSet("zdatalitesparksActivepointer", trQuestVarGet("zdatalitesparksActivecount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitesparksActivepointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitesparksActiveindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitesparksActivecount") - 1;
      zdataremove = trQuestVarGet("zdatalitesparksActivepointer");
      trQuestVarSet("zdatalitesparksActiveindex"+zdataremove, trQuestVarGet("zdatalitesparksActiveindex"+zdatacount));
      trQuestVarSet("zdatalitesparksActivecount", zdatacount);
      trQuestVarSet("zdatalitesparksActivepointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("sparksActive", trQuestVarGet("zdatalitesparksActiveindex"+zdatapointer));
      UnitID = trQuestVarGet("sparksActive");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trQuestVarSet("spark"+zdatapointer+"timer", trQuestVarGet("spark"+zdatapointer+"timer") - 1);
      if(trQuestVarGet("spark"+zdatapointer+"timer") <= 0){
      trUnitTeleport(0.60, 0.00, 0.95);
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdatalitesparksActivecount") - 1;
      zdataremove = trQuestVarGet("zdatalitesparksActivepointer");
      trQuestVarSet("zdatalitesparksActiveindex"+zdataremove, trQuestVarGet("zdatalitesparksActiveindex"+zdatacount));
      trQuestVarSet("zdatalitesparksActivecount", zdatacount);
      if (trQuestVarGet("zdatalitesparksActivepointer") >= trQuestVarGet("zdatalitesparksActivecount")) {
      trQuestVarSet("zdatalitesparksActivepointer", trQuestVarGet("zdatalitesparksActivecount")-1);
      }
      trQuestVarCopy("spark"+zdatapointer+"timer", "spark"+zdatacount+"timer");
      }
      }
      if(trQuestVarGet("soundplay") == 1){
      trQuestVarSet("soundplay", 0);
      trQuestVarSetFromRand("sound", 1, 5, true);
      trSoundPlayFN("lightningstrike"+1*trQuestVarGet("sound")+".wav", "1", -1, "","");
      }
      xsDisableRule("_sparks_06_s1");
      trEcho("Trigger disabling rule sparks_06_s1");
   }
}

rule _sparks_06_s2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("sparks") == 1){
      trEventFire(456);
      }
      xsDisableRule("_sparks_06_s2");
      trEcho("Trigger disabling rule sparks_06_s2");
   }
}

rule _sparks_07_end
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer3_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer3_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer3_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer3_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer3_CompTime")) >= 2.5 * trQuestVarGet("sparkDelay")) {
   for(Accurate_Timer_QVdelaytimer3_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer3_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer3_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("sparks", 0);
      trQuestVarSet("yeebspell", 0);
      trQuestVarSet("zdatalitesparksActivecount", 0);
      trQuestVarSet("zdatalitesparksActivepointer", 0);
      trQuestVarSet("sparksActive", 0);
      /**/ int a = kbGetProtoUnitID("Ajax Older");
      /**/ int r = kbGetProtoUnitID("Relic");
      /**/ int k = kbGetProtoUnitID("Lampades Bolt");
      /**/ int v = kbGetProtoUnitID("Victory Marker");
      /**/ 
      /**/ 
      trEventFire(464);
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer") - 47);
      if(trQuestVarGet("p1projpointer") < trQuestVarGet("p1projstart")){
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer") + 256);
      }
      for(bb=47; >0) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p1proj"));
      /**/ trUnitChangeProtoUnit("Ajax Older");
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(1280+1*trQuestVarGet("p1proj"));
      /**/ trUnitSelectByID(2560+1*trQuestVarGet("p1proj"));
      /**/ trUnitSelectByID(3840+1*trQuestVarGet("p1proj"));
      /**/ trUnitChangeProtoUnit("Relic");
      /**/ trImmediateUnitGarrison(""+1*trQuestVarGet("p1proj"));
      /**/ trMutateSelected(v);
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(1280+1*trQuestVarGet("p1proj"));
      /**/ trMutateSelected(k);
      /**/ trUnitSelectClear(); trUnitSelectByID(1*trQuestVarGet("p1proj"));
      trUnitTeleport(1.24, 0.00, 1.17);
      }
      unitTransform("Ajax Older","Wadjet Spit");
      xsDisableRule("_sparks_07_end");
      trEcho("Trigger disabling rule sparks_07_end");
   }
}

rule _yeeb_a4_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", 3 + trGetWorldDifficulty());
      trQuestVarSet("bossAmmoMax", 3 + trGetWorldDifficulty());
      trQuestVarSet("count", 18 + 6 * trGetWorldDifficulty());
      trQuestVarSet("anglemod", 3.1 / trQuestVarGet("count"));
      trQuestVarSet("headingmod", 57.295779 * trQuestVarGet("angleMod"));
      trEventFire(465);
      trQuestVarSet("yeeba", 1);
      trEventFire(466);
      trQuestVarSet("shootangle1", 0);
      trQuestVarSet("shootangle2", 2.094395);
      trQuestVarSet("shootheading1", 0);
      trQuestVarSet("shootheading2", 120);
      trQuestVarSet("shootangle3", 4.1887902);
      trQuestVarSet("shootheading3", 240);
      xsDisableRule("_yeeb_a4_00_startup");
      trEcho("Trigger disabling rule yeeb_a4_00_startup");
   }
}

rule _yeeb_a4_01_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("yeeba") == 1){
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("bossposx"),1.5,trQuestVarGet("bossposz")));
      /**/ for(x=3; >0) {
      for(bb=1; >0) {
      trQuestVarSet("p2projxp3proj", trQuestVarGet("p2projxp3proj") + 1);
      if (trQuestVarGet("p2projxp3proj") > 1) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projpointer")+1);
      if (trQuestVarGet("p2projpointer") > trQuestVarGet("p2projend")) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projstart"));
      }
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trQuestVarSet("p2projxp3proj", 0);
      } else {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trQuestVarSet("p2proj", trQuestVarGet("p3projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p2proj"));
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      /**/ trUnitSetHeading(trQuestVarGet("shootheading"+x));
      trQuestVarCopy("proj"+x+"", "p2proj");
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      /**/ }
      trEventFire(467);
      }
      xsDisableRule("_yeeb_a4_01_s1");
      trEcho("Trigger disabling rule yeeb_a4_01_s1");
   }
}

rule _yeeb_a4_02_move
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVyeebmovetimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVyeebmovetimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVyeebmovetimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeebmovetimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVyeebmovetimer_CompTime")) >= 3000) {
   for(Accurate_Timer_QVyeebmovetimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeebmovetimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVyeebmovetimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trEventFire(145);
      trEventFire(468);
      trQuestVarSetFromRand("sound", 1, 3, true);
      trSoundPlayFN("suckup"+1*trQuestVarGet("sound")+".wav", "1", -1, "","");
      xsDisableRule("_yeeb_a4_02_move");
      trEcho("Trigger disabling rule yeeb_a4_02_move");
   }
}

rule _yeeb_a4_04_end
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("yeeba", 0);
      trEventFire(469);
      xsDisableRule("_yeeb_a4_04_end");
      trEcho("Trigger disabling rule yeeb_a4_04_end");
   }
}

rule _yeeb_a4_01_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(1*trQuestVarGet("proj"+x));
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("shootangle"+x)) * 1.0, 0, Math_cos(trQuestVarGet("shootangle"+x)) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      trQuestVarSet("shootangle"+x+"", trQuestVarGet("shootangle"+x+"") + trQuestVarGet("angleMod"));
      while (trQuestVarGet("shootangle"+x+"") > (6.283185)) {
      trQuestVarSet("shootangle"+x+"", trQuestVarGet("shootangle"+x+"") - (6.283185));
      }
      while (0 > trQuestVarGet("shootangle"+x+"")) {
      trQuestVarSet("shootangle"+x+"", trQuestVarGet("shootangle"+x+"") + 6.283185);
      }
      trQuestVarSet("shootheading"+x+"", trQuestVarGet("shootheading"+x+"") + trQuestVarGet("headingMod"));
      while (trQuestVarGet("shootheading"+x+"") > (360.0)) {
      trQuestVarSet("shootheading"+x+"", trQuestVarGet("shootheading"+x+"") - (360.0));
      }
      while (0 > trQuestVarGet("shootheading"+x+"")) {
      trQuestVarSet("shootheading"+x+"", trQuestVarGet("shootheading"+x+"") + 360.0);
      }
      /**/ }
      trEventFire(465);
      xsDisableRule("_yeeb_a4_01_s2");
      trEcho("Trigger disabling rule yeeb_a4_01_s2");
   }
}

rule _yeeb_a4_03_check
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVyeebchecktimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVyeebchecktimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVyeebchecktimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeebchecktimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVyeebchecktimer_CompTime")) >= 1000) {
   for(Accurate_Timer_QVyeebchecktimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeebchecktimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVyeebchecktimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(466);
      /**/ } else {
      trEventFire(470);
      }
      xsDisableRule("_yeeb_a4_03_check");
      trEcho("Trigger disabling rule yeeb_a4_03_check");
   }
}

rule _array_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("yeebspell", 1);
      trQuestVarSet("array", 1);
      trOverlayText("Lightning Array", 3.0, 577, 360, 800);
      trEventFire(145);
      trQuestVarSet("bossAmmo", 4);
      trQuestVarSet("bossAmmoMax", 4);
      trStringQuestVarSet("bossName", "Lightning Array ");
      trQuestVarSet("arrayCount", 35 + 12 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 9.0 + 3.0 - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 9.0 + 3.0);
      trEventFire(471);
      trQuestVarSet("arrayAngleMod", 6.283185 / trQuestVarGet("arrayCount"));
      trEventFire(472);
      xsDisableRule("_array_00_startup");
      trEcho("Trigger disabling rule array_00_startup");
   }
}

rule _array_01_shoot
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 2000) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trSoundPlayFN("ui\thunder2.wav", "2", -1, "","");
      trSoundPlayFN("ui\lightning1.wav", "3", -1, "","");
      trQuestVarSetFromRand("angle", 0, trQuestVarGet("arrayAngleMod"), false);
      trVectorQuestVarSet("shootstart", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossposz")));
      for(bb=trQuestVarGet("arrayCount"); >0) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p1proj"));
      trUnitTeleport(trVectorQuestVarGetX("shootstart"),trVectorQuestVarGetY("shootstart"),trVectorQuestVarGetZ("shootstart"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p1proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep1projshootcount");
      trQuestVarSet("zdatalitep1projshootindex"+zdatacount, trQuestVarGet("p1proj"));
      trQuestVarSet("zdatalitep1projshootcount", zdatacount+1);
      trQuestVarCopy("p1proj"+zdatacount+"angle", "angle");
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p1proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p1proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      trQuestVarSet("angle", trQuestVarGet("angle") + trQuestVarGet("arrayAngleMod"));
      while (trQuestVarGet("angle") > (6.283185)) {
      trQuestVarSet("angle", trQuestVarGet("angle") - (6.283185));
      }
      while (0 > trQuestVarGet("angle")) {
      trQuestVarSet("angle", trQuestVarGet("angle") + 6.283185);
      }
      }
      trEventFire(473);
      xsDisableRule("_array_01_shoot");
      trEcho("Trigger disabling rule array_01_shoot");
   }
}

rule _array_02_shoot
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep1projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep1projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep1projshootpointer", trQuestVarGet("zdatalitep1projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep1projshootpointer")) {
      trQuestVarSet("zdatalitep1projshootpointer", trQuestVarGet("zdatalitep1projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep1projshootpointer");
      trQuestVarSet("p1projshoot", trQuestVarGet("zdatalitep1projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p1projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p1proj"+zdatapointer+"target"),trVectorQuestVarGetY("p1proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p1proj"+zdatapointer+"target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitearrayprojcount");
      trQuestVarSet("zdatalitearrayprojindex"+zdatacount, trQuestVarGet("p1projshoot"));
      trQuestVarSet("zdatalitearrayprojcount", zdatacount+1);
      trQuestVarCopy("arrayproj"+zdatacount+"angle", "p1proj"+zdatapointer+"angle");
      }
      trQuestVarSet("zdatalitep1projshootcount", 0);
      trQuestVarSet("zdatalitep1projshootpointer", 0);
      trQuestVarSet("p1projshoot", 0);
      trEventFire(474);
      xsDisableRule("_array_02_shoot");
      trEcho("Trigger disabling rule array_02_shoot");
   }
}

rule _array_03_reset
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdatalitearrayprojcount") == 0);

   bool bVar1 = (trQuestVarGet("zdatalitelightninglaserscount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(471);
      trEventFire(145);
      } else {
      trEventFire(475);
      }
      xsDisableRule("_array_03_reset");
      trEcho("Trigger disabling rule array_03_reset");
   }
}

rule _array_04_s1
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("array") == 1){
      /**/ int c = 0;
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitearrayprojcount") > (16) && (16) > 0) {
      zdatasearch = 16;
      } else {
      zdatasearch = trQuestVarGet("zdatalitearrayprojcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitearrayprojpointer", trQuestVarGet("zdatalitearrayprojpointer")-1);
      if (0 > trQuestVarGet("zdatalitearrayprojpointer")) {
      trQuestVarSet("zdatalitearrayprojpointer", trQuestVarGet("zdatalitearrayprojcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitearrayprojpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitearrayprojindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitearrayprojcount") - 1;
      zdataremove = trQuestVarGet("zdatalitearrayprojpointer");
      trQuestVarSet("zdatalitearrayprojindex"+zdataremove, trQuestVarGet("zdatalitearrayprojindex"+zdatacount));
      trQuestVarSet("zdatalitearrayprojcount", zdatacount);
      trQuestVarSet("zdatalitearrayprojpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("arrayproj", trQuestVarGet("zdatalitearrayprojindex"+zdatapointer));
      UnitID = trQuestVarGet("arrayproj");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trVectorQuestVarSet("V1", kbGetBlockPosition(""+1*trQuestVarGet("arrayproj"), false));
      /**/ if (trQuestVarGet("V1z") >= trQuestVarGet("maxBouncez") ||
      /**/ trQuestVarGet("V1z") <= trQuestVarGet("minBouncez")) {
      /**/ c = c + 1;
      /**/ 
      /**/ 
      /**/ 
      trVectorQuestVarSet("laserstart"+c+"", trVectorQuestVarGet("V1"));
      trQuestVarSet("laserangle"+c+"", reflectAngle(trQuestVarGet("arrayproj"+zdatapointer+"angle"), 1.570796));
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdatalitearrayprojcount") - 1;
      zdataremove = trQuestVarGet("zdatalitearrayprojpointer");
      trQuestVarSet("zdatalitearrayprojindex"+zdataremove, trQuestVarGet("zdatalitearrayprojindex"+zdatacount));
      trQuestVarSet("zdatalitearrayprojcount", zdatacount);
      if (trQuestVarGet("zdatalitearrayprojpointer") >= trQuestVarGet("zdatalitearrayprojcount")) {
      trQuestVarSet("zdatalitearrayprojpointer", trQuestVarGet("zdatalitearrayprojcount")-1);
      }
      trQuestVarCopy("arrayproj"+zdatapointer+"angle", "arrayproj"+zdatacount+"angle");
      /**/ } else if (trQuestVarGet("V1x") >= trQuestVarGet("maxBouncex") ||
      /**/ trQuestVarGet("V1x") <= trQuestVarGet("minBouncex")) {
      /**/ c = c + 1;
      /**/ 
      /**/ 
      /**/ 
      trVectorQuestVarSet("laserstart"+c+"", trVectorQuestVarGet("V1"));
      trQuestVarSet("laserangle"+c+"", reflectAngle(trQuestVarGet("arrayproj"+zdatapointer+"angle"), 3.141592));
      for(zdatacount=0; >1) {}
      for(zdataremove=0;>1){}
      zdatacount = trQuestVarGet("zdatalitearrayprojcount") - 1;
      zdataremove = trQuestVarGet("zdatalitearrayprojpointer");
      trQuestVarSet("zdatalitearrayprojindex"+zdataremove, trQuestVarGet("zdatalitearrayprojindex"+zdatacount));
      trQuestVarSet("zdatalitearrayprojcount", zdatacount);
      if (trQuestVarGet("zdatalitearrayprojpointer") >= trQuestVarGet("zdatalitearrayprojcount")) {
      trQuestVarSet("zdatalitearrayprojpointer", trQuestVarGet("zdatalitearrayprojcount")-1);
      }
      trQuestVarCopy("arrayproj"+zdatapointer+"angle", "arrayproj"+zdatacount+"angle");
      /**/ }
      }
      /**/ if (c > 0) {
      /**/ activateLightningLasers(c);
      trSoundPlayFN("skypassagein.wav", "1", -1, "","");
      /**/ }
      trEventFire(476);
      }
      xsDisableRule("_array_04_s1");
      trEcho("Trigger disabling rule array_04_s1");
   }
}

rule _array_04_s2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("array") == 1){
      trEventFire(472);
      }
      xsDisableRule("_array_04_s2");
      trEcho("Trigger disabling rule array_04_s2");
   }
}

rule _array_05_end
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("array", 0);
      trQuestVarSet("yeebspell", 0);
      trEventFire(477);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      xsDisableRule("_array_05_end");
      trEcho("Trigger disabling rule array_05_end");
   }
}

rule _yeeb_a5_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", 4);
      trQuestVarSet("bossAmmoMax", 4);
      trQuestVarSet("count", 18 + 6 * trGetWorldDifficulty());
      trQuestVarSet("anglemod", 3.1 / trQuestVarGet("count"));
      trQuestVarSet("headingmod", 57.295779 * trQuestVarGet("angleMod"));
      trEventFire(465);
      trQuestVarSet("yeeba", 1);
      trEventFire(478);
      trQuestVarSet("shootangle1", 0);
      trQuestVarSet("shootangle2", 2.094395);
      trQuestVarSet("shootheading1", 0);
      trQuestVarSet("shootheading2", 120);
      trQuestVarSet("shootangle3", 4.1887902);
      trQuestVarSet("shootheading3", 240);
      trQuestVarSet("laserCount", 9 + 3 * trGetWorldDifficulty());
      trQuestVarSet("laserAngleMod", 2.1 / (trQuestVarGet("laserCount") + 1.0));
      xsDisableRule("_yeeb_a5_00_startup");
      trEcho("Trigger disabling rule yeeb_a5_00_startup");
   }
}

rule _yeeb_a5_01_fire
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVyeeba1firetimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVyeeba1firetimer_CompTime")) >= 1000) {
   for(Accurate_Timer_QVyeeba1firetimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVyeeba1firetimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("lasersource1angle", 3.141592 - 0.5 * trQuestVarGet("laserAngleMod"));
      trQuestVarSet("lasersource2angle", 3.141592 + 0.5 * trQuestVarGet("laserAngleMod"));
      trVectorQuestVarSet("laserCenter", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossposz")));
      trQuestVarCopy("lasershoot", "lasercount");
      trEventFire(451);
      trEventFire(479);
      xsDisableRule("_yeeb_a5_01_fire");
      trEcho("Trigger disabling rule yeeb_a5_01_fire");
   }
}

rule _yeeb_a5_03
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("lasershoot") == 0);

   bool bVar1 = (trQuestVarGet("zdatalitelightninglaserscount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(478);
      trEventFire(145);
      /**/ } else {
      trEventFire(480);
      }
      xsDisableRule("_yeeb_a5_03");
      trEcho("Trigger disabling rule yeeb_a5_03");
   }
}

rule _yeeb_a5_04_end
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("yeeba", 0);
      trEventFire(481);
      xsDisableRule("_yeeb_a5_04_end");
      trEcho("Trigger disabling rule yeeb_a5_04_end");
   }
}

rule _death_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("yeebspell", 1);
      trQuestVarSet("death", 1);
      trOverlayText("Death Timer", 3.0, 600, 360, 800);
      trQuestVarSet("bossAmmo", 5);
      trQuestVarSet("bossAmmoMax", 5);
      trStringQuestVarSet("bossName", "Death Timer ");
      /**/ projectileConvert(3, "Lampades Bolt", "Victory Marker");
      trEventFire(482);
      trQuestVarSet("deathAngleStart", 2.6 - 0.4 * trGetWorldDifficulty());
      trVectorQuestVarSet("bossMove", trVectorQuestVarGet("playCenter"));
      for(bb=4; >0) {
      trQuestVarSet("p6laserspointer", trQuestVarGet("p6laserspointer")+1);
      if (trQuestVarGet("p6laserspointer") > trQuestVarGet("p6lasersend")) {
      trQuestVarSet("p6laserspointer", trQuestVarGet("p6lasersstart"));
      }
      trQuestVarSet("p6lasers", trQuestVarGet("p6laserspointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p6lasers"));
      trQuestVarSet("laser", 256 + trQuestVarGet("p6lasers"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitedeathLaserscount");
      trQuestVarSet("zdatalitedeathLasersindex"+zdatacount, trQuestVarGet("laser"));
      trQuestVarSet("zdatalitedeathLaserscount", zdatacount+1);
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("laser"));
      trUnitTeleport(trVectorQuestVarGetX("bossMove"),trVectorQuestVarGetY("bossMove"),trVectorQuestVarGetZ("bossMove"));
      }
      trQuestVarSet("deathTarget", 512 + trQuestVarGet("p6lasers"));
      trQuestVarSet("deathHitbox", 384 + trQuestVarGet("p6lasers"));
      trQuestVarSet("deathWarn", trQuestVarGet("p6lasers"));
      trQuestVarSet("laserDistance", 0.35 * (trQuestVarGet("playerCenterx") - trQuestVarGet("minBoundx")));
      trQuestVarSet("deathHeadingStart", 57.295779 * trQuestVarGet("deathAngleStart") + 180.0);
      trVectorQuestVarSet("deathCenter", xsVectorSet(trQuestVarGet("bossMovex"),1.0,trQuestVarGet("bossMovez")));
      trQuestVarSet("deathCount", 36 + 12 * trGetWorldDifficulty());
      trQuestVarSet("deathAngleMod", 6.281835 / trQuestVarGet("deathCount"));
      trQuestVarSet("deathDirection", -1);
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("deathHitbox"));
      /**/ trMutateSelected(kbGetProtoUnitID("Invisible Wall"));
      trUnitConvert(3);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 3.0 - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 3.0);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 3.0 - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 3.0);
      xsDisableRule("_death_00_startup");
      trEcho("Trigger disabling rule death_00_startup");
   }
}

rule _death_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 1500) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("deathHeadingStart", trQuestVarGet("deathHeadingStart") * -1.0);
      while (trQuestVarGet("deathHeadingStart") > (360.0)) {
      trQuestVarSet("deathHeadingStart", trQuestVarGet("deathHeadingStart") - (360.0));
      }
      while (0 > trQuestVarGet("deathHeadingStart")) {
      trQuestVarSet("deathHeadingStart", trQuestVarGet("deathHeadingStart") + 360.0);
      }
      trQuestVarSet("deathAngleStart", trQuestVarGet("deathAngleStart") * -1.0);
      while (trQuestVarGet("deathAngleStart") > (6.283185)) {
      trQuestVarSet("deathAngleStart", trQuestVarGet("deathAngleStart") - (6.283185));
      }
      while (0 > trQuestVarGet("deathAngleStart")) {
      trQuestVarSet("deathAngleStart", trQuestVarGet("deathAngleStart") + 6.283185);
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("deathWarn"));
      /**/ trUnitSetHeading(trQuestVarGet("deathHeadingStart"));
      trUnitTeleport(trVectorQuestVarGetX("deathCenter"),trVectorQuestVarGetY("deathCenter"),trVectorQuestVarGetZ("deathCenter"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("deathTarget"));
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("deathAngleStart")) * 1.0, 0, Math_cos(trQuestVarGet("deathAngleStart")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("deathCenter") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("deathCenter"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("deathCenter"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("deathCenter"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitTeleport(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"));
      trEventFire(483);
      trSoundPlayFN("skypassagein.wav", "1", -1, "","");
      trQuestVarSet("death", 2);
      trQuestVarSet("deathDirection", 0.0 - trQuestVarGet("deathDirection"));
      trEventFire(484);
      trDamageUnitPercent(-100);
      xsDisableRule("_death_01");
      trEcho("Trigger disabling rule death_01");
   }
}

rule _death_02_p1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 1) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("death") == 2){
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitedeathLaserscount") > (1) && (1) > 0) {
      zdatasearch = 1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitedeathLaserscount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitedeathLaserspointer", trQuestVarGet("zdatalitedeathLaserspointer")-1);
      if (0 > trQuestVarGet("zdatalitedeathLaserspointer")) {
      trQuestVarSet("zdatalitedeathLaserspointer", trQuestVarGet("zdatalitedeathLaserscount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitedeathLaserspointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitedeathLasersindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitedeathLaserscount") - 1;
      zdataremove = trQuestVarGet("zdatalitedeathLaserspointer");
      trQuestVarSet("zdatalitedeathLasersindex"+zdataremove, trQuestVarGet("zdatalitedeathLasersindex"+zdatacount));
      trQuestVarSet("zdatalitedeathLaserscount", zdatacount);
      trQuestVarSet("zdatalitedeathLaserspointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("deathLasers", trQuestVarGet("zdatalitedeathLasersindex"+zdatapointer));
      UnitID = trQuestVarGet("deathLasers");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      /**/ trUnitDoWorkOnUnit(""+1*trQuestVarGet("deathTarget"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("deathTarget"));
      trDamageUnitPercent(-100);
      trEventFire(485);
      }
      xsDisableRule("_death_02_p1");
      trEcho("Trigger disabling rule death_02_p1");
   }
}

rule _death_02_p2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_CompTime")) >= 750) {
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("death") == 2){
      trEventFire(483);
      }
      xsDisableRule("_death_02_p2");
      trEcho("Trigger disabling rule death_02_p2");
   }
}

rule _death_03_laser_activate
highFrequency
inactive
{
   /**/ trUnitSelectClear();
   /**/ trUnitSelectByID(1*trQuestVarGet("deathTarget"));
   /**/ 
   /**/ 
   /**/ 
   bool bVar0 = ((trUnitPercentDamaged() > 0));


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("sonofosirisbolt.wav", "2", -1, "","");
      trEventFire(486);
      trEventFire(487);
      trQuestVarSet("deathAngle", 0);
      trQuestVarSet("shootAngle", 0);
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("deathTarget"));
      trDamageUnitPercent(-100);
      xsDisableRule("_death_03_laser_activate");
      trEcho("Trigger disabling rule death_03_laser_activate");
   }
}

rule _death_04_l1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= 30) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("death") == 2){
      trQuestVarSet("deathAngle", trQuestVarGet("deathAngle") + 0.07);
      trQuestVarCopy("angle", "deathAngle");
      trQuestVarSet("angle", trQuestVarGet("angle") * trQuestVarGet("deathDirection"));
      trQuestVarSet("angle", trQuestVarGet("angle") + trQuestVarGet("deathAngleStart"));
      while (trQuestVarGet("angle") > (6.283185)) {
      trQuestVarSet("angle", trQuestVarGet("angle") - (6.283185));
      }
      while (0 > trQuestVarGet("angle")) {
      trQuestVarSet("angle", trQuestVarGet("angle") + 6.283185);
      }
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("deathCenter") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("deathCenter"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minLaser"), 0, trVectorQuestVarGetX("minLaser") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxLaser"), 0, trVectorQuestVarGetX("maxLaser") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minLaser") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minLaser")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxLaser") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxLaser")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("deathCenter"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("deathCenter"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minLaser") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxLaser")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("deathTarget"));
      trUnitTeleport(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"));
      trEventFire(488);
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("deathLasers"));
      trQuestVarSet("dist", trUnitDistanceToPoint(trVectorQuestVarGetX("playerpos"),trVectorQuestVarGetY("playerpos"),trVectorQuestVarGetZ("playerpos")));
      trVectorQuestVarSet("hitbox", xsVectorSet((trQuestVarGet("dist") + 1.0) * trQuestVarGet("dirx") + trQuestVarGet("deathCenterx"),0,(trQuestVarGet("dist") + 1.0) * trQuestVarGet("dirz") + trQuestVarGet("deathCenterz")));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("deathHitbox"));
      trUnitTeleport(trVectorQuestVarGetX("hitbox"),trVectorQuestVarGetY("hitbox"),trVectorQuestVarGetZ("hitbox"));
      }
      xsDisableRule("_death_04_l1");
      trEcho("Trigger disabling rule death_04_l1");
   }
}

rule _death_04_l2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("death") == 2){
      if(trQuestVarGet("deathAngle") < 6.283185){
      trEventFire(486);
      } else {
      trEventFire(489);
      }
      }
      unitTransform("Petosuchus Beam","Osiris Lightning");
      xsDisableRule("_death_04_l2");
      trEcho("Trigger disabling rule death_04_l2");
   }
}

rule _death_04_s1
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("deathAngle") > trQuestVarGet("shootAngle"));


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("death") == 2){
      /**/ while(trQuestVarGet("shootAngle") < trQuestVarGet("deathAngle")) {
      if(trQuestVarGet("bomb") == 0){
      trQuestVarCopy("angle", "shootAngle");
      trQuestVarSet("angle", trQuestVarGet("angle") * trQuestVarGet("deathDirection"));
      trQuestVarSet("angle", trQuestVarGet("angle") + trQuestVarGet("deathAngleStart"));
      while (trQuestVarGet("angle") > (6.283185)) {
      trQuestVarSet("angle", trQuestVarGet("angle") - (6.283185));
      }
      while (0 > trQuestVarGet("angle")) {
      trQuestVarSet("angle", trQuestVarGet("angle") + 6.283185);
      }
      trVectorQuestVarSet("shootStep",xsVectorSet(Math_sin(trQuestVarGet("angle")) * trQuestVarGet("laserDistance"), 0, Math_cos(trQuestVarGet("angle")) * trQuestVarGet("laserDistance")));
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("deathCenterx"),1.5,trQuestVarGet("deathCenterz")));
      if(trGetWorldDifficulty() <= 1){
      trQuestVarSet("angle", trQuestVarGet("angle") - 1.95 * trQuestVarGet("deathDirection"));
      while (trQuestVarGet("angle") > (6.283185)) {
      trQuestVarSet("angle", trQuestVarGet("angle") - (6.283185));
      }
      while (0 > trQuestVarGet("angle")) {
      trQuestVarSet("angle", trQuestVarGet("angle") + 6.283185);
      }
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("angle")) * 1.0, 0, Math_cos(trQuestVarGet("angle")) * 1.0));
      } else {
      trQuestVarSetFromRand("dirx", -1, 1, false);
      trQuestVarSetFromRand("dirz", -1, 1, false);
      }
      for(bb=3; >0) {
      trQuestVarSet("p1projxp3proj", trQuestVarGet("p1projxp3proj") + 1);
      if (trQuestVarGet("p1projxp3proj") > 1) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trQuestVarSet("p3proj", trQuestVarGet("p1projpointer"));
      trQuestVarSet("p1projxp3proj", 0);
      } else {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p3proj"));
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep3projshootcount");
      trQuestVarSet("zdatalitep3projshootindex"+zdatacount, trQuestVarGet("p3proj"));
      trQuestVarSet("zdatalitep3projshootcount", zdatacount+1);
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootstart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootstart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootstart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootstart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p3proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p3proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      trVectorQuestVarSet("shootStart", trVectorQuestVarGet("shootStart") - trVectorQuestVarGet("shootStep"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("shootStart");b = trVectorQuestVarGetY("shootStart");c = trVectorQuestVarGetZ("shootStart");
      trVectorQuestVarSet("shootStart",xsVectorSet(a,b,c));}
      }
      }
      trQuestVarSet("shootangle", trQuestVarGet("shootangle") + trQuestVarGet("deathAngleMod"));
      }
      trEventFire(490);
      }
      xsDisableRule("_death_04_s1");
      trEcho("Trigger disabling rule death_04_s1");
   }
}

rule _death_04_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("death") == 2){
      trEventFire(487);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep3projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep3projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep3projshootpointer", trQuestVarGet("zdatalitep3projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep3projshootpointer")) {
      trQuestVarSet("zdatalitep3projshootpointer", trQuestVarGet("zdatalitep3projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep3projshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep3projshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep3projshootcount") - 1;
      zdataremove = trQuestVarGet("zdatalitep3projshootpointer");
      trQuestVarSet("zdatalitep3projshootindex"+zdataremove, trQuestVarGet("zdatalitep3projshootindex"+zdatacount));
      trQuestVarSet("zdatalitep3projshootcount", zdatacount);
      trQuestVarSet("zdatalitep3projshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p3projshoot", trQuestVarGet("zdatalitep3projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p3projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p3proj"+zdatapointer+"target"),trVectorQuestVarGetY("p3proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p3proj"+zdatapointer+"target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojactivecount");
      trQuestVarSet("zdataliteprojactiveindex"+zdatacount, trQuestVarGet("p3projshoot"));
      trQuestVarSet("zdataliteprojactivecount", zdatacount+1);
      }
      trQuestVarSet("zdatalitep3projshootcount", 0);
      trQuestVarSet("zdatalitep3projshootpointer", 0);
      trQuestVarSet("p3projshoot", 0);
      }
      xsDisableRule("_death_04_s2");
      trEcho("Trigger disabling rule death_04_s2");
   }
}

rule _death_05_laser_stop
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("death", 1);
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitedeathLaserscount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitedeathLaserscount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitedeathLaserspointer", trQuestVarGet("zdatalitedeathLaserspointer")-1);
      if (0 > trQuestVarGet("zdatalitedeathLaserspointer")) {
      trQuestVarSet("zdatalitedeathLaserspointer", trQuestVarGet("zdatalitedeathLaserscount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitedeathLaserspointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitedeathLasersindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitedeathLaserscount") - 1;
      zdataremove = trQuestVarGet("zdatalitedeathLaserspointer");
      trQuestVarSet("zdatalitedeathLasersindex"+zdataremove, trQuestVarGet("zdatalitedeathLasersindex"+zdatacount));
      trQuestVarSet("zdatalitedeathLaserscount", zdatacount);
      trQuestVarSet("zdatalitedeathLaserspointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("deathLasers", trQuestVarGet("zdatalitedeathLasersindex"+zdatapointer));
      UnitID = trQuestVarGet("deathLasers");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      /**/ trUnitDoWorkOnUnit(""+1*trQuestVarGet("deathlasers"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("deathHitbox"));
      trUnitTeleport(96.91, 0.00, 88.39);
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      trEventFire(491);
      xsDisableRule("_death_05_laser_stop");
      trEcho("Trigger disabling rule death_05_laser_stop");
   }
}

rule _death_06_check
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1000) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("bossAmmo") > 0){
      trEventFire(482);
      } else {
      trEventFire(492);
      }
      xsDisableRule("_death_06_check");
      trEcho("Trigger disabling rule death_06_check");
   }
}

rule _death_07_end
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("deathHitbox"));
      trUnitConvert(2);
      /**/ trMutateSelected(kbGetProtoUnitID("Victory Marker"));
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitelaserscount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitelaserscount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitelaserspointer", trQuestVarGet("zdatalitelaserspointer")-1);
      if (0 > trQuestVarGet("zdatalitelaserspointer")) {
      trQuestVarSet("zdatalitelaserspointer", trQuestVarGet("zdatalitelaserscount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitelaserspointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitelasersindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitelaserscount") - 1;
      zdataremove = trQuestVarGet("zdatalitelaserspointer");
      trQuestVarSet("zdatalitelasersindex"+zdataremove, trQuestVarGet("zdatalitelasersindex"+zdatacount));
      trQuestVarSet("zdatalitelaserscount", zdatacount);
      trQuestVarSet("zdatalitelaserspointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("lasers", trQuestVarGet("zdatalitelasersindex"+zdatapointer));
      UnitID = trQuestVarGet("lasers");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitTeleport(92.99, 0.00, 88.17);
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("deathTarget"));
      trUnitTeleport(92.99, 0.00, 88.17);
      trQuestVarSet("yeebspell", 0);
      trQuestVarSet("death", 0);
      trEventFire(493);
      /**/ projectileConvert(3, "Petosuchus Projectile", "Invisible Target", 0.3, 1, 3600);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 6.0 + 2.0 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 6.0 + 2.0 * trGetWorldDifficulty());
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("deathWarn"));
      trUnitTeleport(92.99, 0.00, 88.17);
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 1, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+1+"p"+zsps+"f1f"));
      trQuestVarSet("p"+1+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      xsDisableRule("_death_07_end");
      trEcho("Trigger disabling rule death_07_end");
   }
}

rule _yeeb_a6_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", 5);
      trQuestVarSet("bossAmmoMax", 5);
      trQuestVarSet("count", 9 + 3 * trGetWorldDifficulty());
      trQuestVarSet("anglemod", 2.9 / trQuestVarGet("count"));
      trQuestVarSet("headingmod", 57.295779 * trQuestVarGet("angleMod"));
      trEventFire(494);
      trQuestVarSet("yeeba", 1);
      trEventFire(495);
      trQuestVarSet("shootangle1", 0);
      trQuestVarSet("shootangle2", 2.094395);
      trQuestVarSet("shootheading1", 0);
      trQuestVarSet("shootheading2", 120);
      trQuestVarSet("shootangle3", 4.1887902);
      trQuestVarSet("shootheading3", 240);
      trQuestVarSet("laserCount", 9 + 3 * trGetWorldDifficulty());
      trQuestVarSet("laserAngleMod", 2.1 / (trQuestVarGet("laserCount") + 1.0));
      xsDisableRule("_yeeb_a6_00_startup");
      trEcho("Trigger disabling rule yeeb_a6_00_startup");
   }
}

rule _yeeb_a6_02_fire
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVyeeba1firetimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVyeeba1firetimer_CompTime")) >= 1000) {
   for(Accurate_Timer_QVyeeba1firetimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVyeeba1firetimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVyeeba1firetimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("lasersource1angle", 3.141592 - 0.5 * trQuestVarGet("laserAngleMod"));
      trQuestVarSet("lasersource2angle", 3.141592 + 0.5 * trQuestVarGet("laserAngleMod"));
      trVectorQuestVarSet("laserCenter", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossposz")));
      trQuestVarCopy("lasershoot", "lasercount");
      trEventFire(451);
      trEventFire(496);
      xsDisableRule("_yeeb_a6_02_fire");
      trEcho("Trigger disabling rule yeeb_a6_02_fire");
   }
}

rule _yeeb_a6_03
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("lasershoot") == 0);

   bool bVar1 = (trQuestVarGet("zdatalitelightninglaserscount") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(497);
      /**/ } else {
      trEventFire(498);
      }
      xsDisableRule("_yeeb_a6_03");
      trEcho("Trigger disabling rule yeeb_a6_03");
   }
}

rule _yeeb_a6_04
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1000) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("bossMove", xsVectorSet(trQuestVarGet("maxPosx") - 5.0,0,trQuestVarGet("maxPosz") - 8.0));
      trEventFire(499);
      trSoundPlayFN("suckup1.wav", "1", -1, "","");
      xsDisableRule("_yeeb_a6_04");
      trEcho("Trigger disabling rule yeeb_a6_04");
   }
}

rule _yeeb_a6_05
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("bossMove", xsVectorSet(trQuestVarGet("minPosx") + 5.0,0,trQuestVarGet("maxPosz") - 8.0));
      trEventFire(500);
      trSoundPlayFN("suckup2.wav", "2", -1, "","");
      xsDisableRule("_yeeb_a6_05");
      trEcho("Trigger disabling rule yeeb_a6_05");
   }
}

rule _yeeb_a6_07
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trVectorQuestVarSet("bossMove", xsVectorSet(trQuestVarGet("playcenterx"),0,trQuestVarGet("playCenterx") +4.0));
      trEventFire(494);
      trSoundPlayFN("suckup2.wav", "2", -1, "","");
      xsDisableRule("_yeeb_a6_07");
      trEcho("Trigger disabling rule yeeb_a6_07");
   }
}

rule _yeeb_a6_08_end
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("yeeba", 0);
      trEventFire(448);
      xsDisableRule("_yeeb_a6_08_end");
      trEcho("Trigger disabling rule yeeb_a6_08_end");
   }
}

rule _yeeb_a6_01_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("yeeba") == 1){
      trVectorQuestVarSet("shootStart", xsVectorSet(trQuestVarGet("bossposx"),1.0,trQuestVarGet("bossposz")));
      /**/ for(x=3; >0) {
      for(bb=1; >0) {
      trQuestVarSet("p2projxp3proj", trQuestVarGet("p2projxp3proj") + 1);
      if (trQuestVarGet("p2projxp3proj") > 1) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projpointer")+1);
      if (trQuestVarGet("p2projpointer") > trQuestVarGet("p2projend")) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projstart"));
      }
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trQuestVarSet("p2projxp3proj", 0);
      } else {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trQuestVarSet("p2proj", trQuestVarGet("p3projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p2proj"));
      trUnitTeleport(trVectorQuestVarGetX("shootStart"),trVectorQuestVarGetY("shootStart"),trVectorQuestVarGetZ("shootStart"));
      /**/ trUnitSetHeading(trQuestVarGet("shootheading"+x));
      trQuestVarCopy("proj"+x+"", "p2proj");
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p2proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      /**/ }
      trEventFire(501);
      }
      xsDisableRule("_yeeb_a6_01_s1");
      trEcho("Trigger disabling rule yeeb_a6_01_s1");
   }
}

rule _yeeb_a6_01_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ for(x=3; >0) {
      /**/ trUnitSelectClear();
      /**/ trUnitSelectByID(1*trQuestVarGet("proj"+x));
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("shootangle"+x)) * 1.0, 0, Math_cos(trQuestVarGet("shootangle"+x)) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("shootStart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("shootStart"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("shootStart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("target", trVectorQuestVarGet("ziwrposs2"));
      }
      trUnitMoveToPoint(trVectorQuestVarGetX("target"),trVectorQuestVarGetY("target"),trVectorQuestVarGetZ("target"), -1, false);
      trQuestVarSet("shootangle"+x+"", trQuestVarGet("shootangle"+x+"") + trQuestVarGet("angleMod"));
      while (trQuestVarGet("shootangle"+x+"") > (6.283185)) {
      trQuestVarSet("shootangle"+x+"", trQuestVarGet("shootangle"+x+"") - (6.283185));
      }
      while (0 > trQuestVarGet("shootangle"+x+"")) {
      trQuestVarSet("shootangle"+x+"", trQuestVarGet("shootangle"+x+"") + 6.283185);
      }
      trQuestVarSet("shootheading"+x+"", trQuestVarGet("shootheading"+x+"") + trQuestVarGet("headingMod"));
      while (trQuestVarGet("shootheading"+x+"") > (360.0)) {
      trQuestVarSet("shootheading"+x+"", trQuestVarGet("shootheading"+x+"") - (360.0));
      }
      while (0 > trQuestVarGet("shootheading"+x+"")) {
      trQuestVarSet("shootheading"+x+"", trQuestVarGet("shootheading"+x+"") + 360.0);
      }
      /**/ }
      trEventFire(495);
      xsDisableRule("_yeeb_a6_01_s2");
      trEcho("Trigger disabling rule yeeb_a6_01_s2");
   }
}

rule _lightning_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("yeebspell", 1);
      trQuestVarSet("lightning", 1);
      trOverlayText("Lightning Storm", 3.0, 574, 360, 800);
      trQuestVarSet("bossAmmo", 5 + 1 * trGetWorldDifficulty());
      trQuestVarSet("bossAmmoMax", 5 + 1 * trGetWorldDifficulty());
      trStringQuestVarSet("bossName", "Lightning Storm ");
      /**/ 
      /**/ projectileConvert(2, "Lampades Bolt", "Victory Marker");
      /**/ projectileConvert(3, "Lampades Bolt", "Victory Marker");
      /**/ projectileConvert(4, "Lampades Bolt", "Victory Marker");
      /**/ 
      /**/ 
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 2, 1, 6.0+2.0 * trGetWorldDifficulty() - trQuestVarGet("p"+2+"p"+zsps+"f1f"));
      trQuestVarSet("p"+2+"p"+zsps+"f1f", 6.0+2.0 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 4.5 + 1.5 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 4.5 + 1.5 * trGetWorldDifficulty());
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 4, 1, 3.0 + 1.0 * trGetWorldDifficulty() - trQuestVarGet("p"+4+"p"+zsps+"f1f"));
      trQuestVarSet("p"+4+"p"+zsps+"f1f", 3.0 + 1.0 * trGetWorldDifficulty());
      if(trGetWorldDifficulty() >= 2){
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", 3, 1, 9.0 + 3.0 * trGetWorldDifficulty() - trQuestVarGet("p"+3+"p"+zsps+"f1f"));
      trQuestVarSet("p"+3+"p"+zsps+"f1f", 9.0 + 3.0 * trGetWorldDifficulty());
      }
      trQuestVarSet("lightningCount", 6 + 2 * trGetWorldDifficulty());
      trQuestVarSet("lightningStep", 0.0-(trQuestVarGet("maxboundx") - trQuestVarGet("minboundx")) / (1 + trQuestVarGet("lightningCount")));
      trEventFire(502);
      trVectorQuestVarSet("cloud", xsVectorSet(trQuestVarGet("maxPosx") + trQuestVarGet("lightningStep"),1.0,trQuestVarGet("maxposz") - 2.0));
      for(bb=trQuestVarGet("lightningCount"); >0) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXpointer")+1);
      if (trQuestVarGet("spareSFXpointer") > trQuestVarGet("spareSFXend")) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXstart"));
      }
      trQuestVarSet("spareSFX", trQuestVarGet("spareSFXpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("spareSFX"));
      trUnitTeleport(trVectorQuestVarGetX("cloud"),trVectorQuestVarGetY("cloud"),trVectorQuestVarGetZ("cloud"));
      trQuestVarSet("cloudx", trQuestVarGet("cloudx") + trQuestVarGet("lightningStep"));
      trUnitChangeProtoUnit("Mist");
      }
      trVectorQuestVarSet("rainDirection", xsVectorSet(1.0,0.0,-2.0));
      trVectorQuestVarSet("rainstart", xsVectorSet(0,1.2,trQuestVarGet("maxposz")));
      trEventFire(503);
      trModifyProtounit("Catapult Shot", 1, 1, -19.99);
      xsDisableRule("_lightning_00_startup");
      trEcho("Trigger disabling rule lightning_00_startup");
   }
}

rule _lightning_01_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= trQuestVarGet("delay")) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("lightning") == 1){
      trQuestVarSet("vary", trQuestVarGet("vary") + 1);
      if(trQuestVarGet("vary") >= 2){
      trQuestVarSet("vary", 0);
      for(bb=1; >0) {
      trQuestVarSet("p1projxp2proj", trQuestVarGet("p1projxp2proj") + 1);
      if (trQuestVarGet("p1projxp2proj") > 1) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trQuestVarSet("p3proj", trQuestVarGet("p1projpointer"));
      trQuestVarSet("p1projxp2proj", 0);
      } else {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projpointer")+1);
      if (trQuestVarGet("p2projpointer") > trQuestVarGet("p2projend")) {
      trQuestVarSet("p2projpointer", trQuestVarGet("p2projstart"));
      }
      trQuestVarSet("p2proj", trQuestVarGet("p2projpointer"));
      trQuestVarSet("p3proj", trQuestVarGet("p2projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p3proj"));
      trQuestVarSetFromRand("rainstartx", trQuestVarGet("minPosx"), trQuestVarGet("maxPosx"), false);
      trUnitTeleport(trVectorQuestVarGetX("rainstart"),trVectorQuestVarGetY("rainstart"),trVectorQuestVarGetZ("rainstart"));
      trQuestVarCopy("p3projshoot", "p3proj");
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("rainDirection") / trVectorQuestVarGetX("rainDirection"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("rainstart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("rainstart"));
      if (0.0 > trVectorQuestVarGetX("rainDirection")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("rainDirection") > -0.01 && trVectorQuestVarGetZ("rainDirection") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("rainDirection")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("rainDirection") > -0.01 && trVectorQuestVarGetX("rainDirection") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("rainstart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("rainstart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p3proj0target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p3proj0target", trVectorQuestVarGet("ziwrposs2"));
      }
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p3proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      } else {
      for(bb=1; >0) {
      trQuestVarSet("p3projxp4proj", trQuestVarGet("p3projxp4proj") + 1);
      if (trQuestVarGet("p3projxp4proj") > 1) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projpointer")+1);
      if (trQuestVarGet("p3projpointer") > trQuestVarGet("p3projend")) {
      trQuestVarSet("p3projpointer", trQuestVarGet("p3projstart"));
      }
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trQuestVarSet("p3proj", trQuestVarGet("p3projpointer"));
      trQuestVarSet("p3projxp4proj", 0);
      } else {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projpointer")+1);
      if (trQuestVarGet("p4projpointer") > trQuestVarGet("p4projend")) {
      trQuestVarSet("p4projpointer", trQuestVarGet("p4projstart"));
      }
      trQuestVarSet("p4proj", trQuestVarGet("p4projpointer"));
      trQuestVarSet("p3proj", trQuestVarGet("p4projpointer"));
      }
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p3proj"));
      trQuestVarSetFromRand("rainstartx", trQuestVarGet("minPosx"), trQuestVarGet("maxPosx"), false);
      trUnitTeleport(trVectorQuestVarGetX("rainstart"),trVectorQuestVarGetY("rainstart"),trVectorQuestVarGetZ("rainstart"));
      trQuestVarCopy("p3projshoot", "p3proj");
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("rainDirection") / trVectorQuestVarGetX("rainDirection"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("rainstart") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("rainstart"));
      if (0.0 > trVectorQuestVarGetX("rainDirection")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("rainDirection") > -0.01 && trVectorQuestVarGetZ("rainDirection") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("rainDirection")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("rainDirection") > -0.01 && trVectorQuestVarGetX("rainDirection") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("rainstart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("rainstart"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p3proj0target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p3proj0target", trVectorQuestVarGet("ziwrposs2"));
      }
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojincomingcount");
      trQuestVarSet("zdataliteprojincomingindex"+zdatacount, trQuestVarGet("p3proj"));
      trQuestVarSet("zdataliteprojincomingcount", zdatacount+1);
      }
      }
      trEventFire(504);
      }
      xsDisableRule("_lightning_01_s1");
      trEcho("Trigger disabling rule lightning_01_s1");
   }
}

rule _lightning_01_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      if(trQuestVarGet("lightning") == 1){
      trEventFire(502);
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p3proj"));
      trUnitMoveToPoint(trVectorQuestVarGetX("p3proj0target"),trVectorQuestVarGetY("p3proj0target"),trVectorQuestVarGetZ("p3proj0target"), -1, false);
      }
      xsDisableRule("_lightning_01_s2");
      trEcho("Trigger disabling rule lightning_01_s2");
   }
}

rule _lightning_03
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 3000 - 400 * trGetWorldDifficulty()) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("lasershoot") == 0);

   bool bVar2 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1 && bVar2);
   if (tempExp)
   {
      trQuestVarSetFromRand("rainDirectionx", -0.5, 0.5, false);
      trSoundPlayFN("lightningbirth.wav", "4", -1, "","");
      trVectorQuestVarSet("lightningstart", xsVectorSet(0,1.0,trQuestVarGet("maxLaserz")));
      trQuestVarCopy("lightningshoot", "lightningCount");
      trQuestVarSet("lightningStep", 0.0 - trQuestVarGet("lightningStep"));
      trEventFire(505);
      trEventFire(506);
      trQuestVarSetFromRand("lightningstartx", trQuestVarGet("minPosx"), trQuestVarGet("minPosx") + trQuestVarGet("lightningStep"), false);
      xsDisableRule("_lightning_03");
      trEcho("Trigger disabling rule lightning_03");
   }
}

rule _lightning_02_s1
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer2_CompTime")) >= 100) {
   for(Accurate_Timer_QVshootdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer2_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      trVectorQuestVarSet("laserstart1", trVectorQuestVarGet("lightningstart"));
      trQuestVarSetFromRand("laserangle1", 2.841592, 3.441592, false);
      trEventFire(507);
      trQuestVarSet("lightningstartx", trQuestVarGet("lightningstartx") + trQuestVarGet("lightningstep"));
      /**/ activateLightningLasers(1);
      trSoundPlayFN("skypassagein.wav", "1", -1, "","");
      xsDisableRule("_lightning_02_s1");
      trEcho("Trigger disabling rule lightning_02_s1");
   }
}

rule _lightning_02_s2
highFrequency
inactive
{
   bool bVar0 = (true);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("lightningshoot", trQuestVarGet("lightningshoot") - 1);
      if(trQuestVarGet("lightningshoot") >= 1){
      trEventFire(505);
      }
      xsDisableRule("_lightning_02_s2");
      trEcho("Trigger disabling rule lightning_02_s2");
   }
}

rule _lightning_04
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 3000 - 400 * trGetWorldDifficulty()) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("lasershoot") == 0);

   bool bVar2 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1 && bVar2);
   if (tempExp)
   {
      trQuestVarSetFromRand("rainDirectionx", -0.5, 0.5, false);
      trSoundPlayFN("lightningbirth.wav", "4", -1, "","");
      trVectorQuestVarSet("lightningstart", xsVectorSet(0,1.0,trQuestVarGet("maxLaserz")));
      trQuestVarCopy("lightningshoot", "lightningCount");
      trQuestVarSet("lightningStep", 0.0 - trQuestVarGet("lightningStep"));
      trEventFire(505);
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(503);
      } else {
      trEventFire(508);
      }
      trQuestVarSetFromRand("lightningstartx", trQuestVarGet("maxPosx")-trQuestVarGet("lightningstep"), trQuestVarGet("maxPosx"), false);
      xsDisableRule("_lightning_04");
      trEcho("Trigger disabling rule lightning_04");
   }
}

rule _lightning_05_end
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("zdatalitelightninglaserscount") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("lightning", 0);
      trQuestVarSet("yeebspell", 0);
      trEventFire(509);
      for(bb=16; >0) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXpointer")+1);
      if (trQuestVarGet("spareSFXpointer") > trQuestVarGet("spareSFXend")) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXstart"));
      }
      trQuestVarSet("spareSFX", trQuestVarGet("spareSFXpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("spareSFX"));
      trUnitChangeProtoUnit("Victory Marker");
      trUnitTeleport(93.95, 0.00, 93.94);
      }
      xsDisableRule("_lightning_05_end");
      trEcho("Trigger disabling rule lightning_05_end");
   }
}

rule _omega_00_startup
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("yeebspell", 1);
      trQuestVarSet("omega", 1);
      trOverlayText("Omega", 3.0, 635, 360, 800);
      trQuestVarSet("bossAmmo", 7);
      trQuestVarSet("bossAmmoMax", 7);
      trStringQuestVarSet("bossName", "Omega ");
      trVectorQuestVarSet("bossmove", xsVectorSet(trQuestVarGet("playCenterx"),0,trQuestVarGet("playCenterz") + 5.0));
      trQuestVarSet("omegaCount", 18 + 4 * trGetWorldDifficulty());
      trQuestVarSet("omegaAngleMod", 6.283185 / trQuestVarGet("omegaCount"));
      /**/ projectileConvert(1, "Outpost", "Cinematic Block", 0.6, 0);
      /**/ projectileConvert(2, "Outpost", "Cinematic Block", 0.6, 0);
      /**/ projectileConvert(3, "Outpost", "Cinematic Block", 0.6, 0);
      /**/ projectileConvert(4, "Outpost", "Cinematic Block", 0.6, 0);
      /**/ projectileConvert(5, "Outpost", "Cinematic Block", 0.6, 0);
      /**/ 
      /**/ for(p=5; >0) {
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", p, 1, 3.0 + 1.0 * trGetWorldDifficulty() - trQuestVarGet("p"+p+"p"+zsps+"f1f"));
      trQuestVarSet("p"+p+"p"+zsps+"f1f", 3.0 + 1.0 * trGetWorldDifficulty());
      /**/ }
      trEventFire(510);
      for(bb=5; >0) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXpointer")+1);
      if (trQuestVarGet("spareSFXpointer") > trQuestVarGet("spareSFXend")) {
      trQuestVarSet("spareSFXpointer", trQuestVarGet("spareSFXstart"));
      }
      trQuestVarSet("spareSFX", trQuestVarGet("spareSFXpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("spareSFX"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitearkantosSFXcount");
      trQuestVarSet("zdatalitearkantosSFXindex"+zdatacount, trQuestVarGet("spareSFX"));
      trQuestVarSet("zdatalitearkantosSFXcount", zdatacount+1);
      trUnitChangeProtoUnit("Arkantos God");
      /**/ trSetSelectedScale(0,0,0);
      /**/ trUnitOverrideAnimation(26, 0, 1, 0, -1, 0);
      /**/ 
      /**/ 
      /**/ 
      /**/ 
      }
      trQuestVarSet("omegaspeed", 3 + 1 * trGetWorldDifficulty());
      xsDisableRule("_omega_00_startup");
      trEcho("Trigger disabling rule omega_00_startup");
   }
}

rule _omega_01
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("lightningbirth.wav", "4", -1, "","");
      trVectorQuestVarSet("arkantos0", xsVectorSet(trQuestVarGet("bossposx"),0,trQuestVarGet("bossposz") + 3.0));
      trVectorQuestVarSet("arkantos1", xsVectorSet(trQuestVarGet("bossposx") + 3.0,0,trQuestVarGet("bossposz")));
      trVectorQuestVarSet("arkantos2", xsVectorSet(trQuestVarGet("bossposx"),0,trQuestVarGet("bossposz") - 3.0));
      trVectorQuestVarSet("arkantos3", xsVectorSet(trQuestVarGet("bossposx") - 3.0,0,trQuestVarGet("bossposz")));
      trVectorQuestVarSet("arkantos4", xsVectorSet(trQuestVarGet("bossposx"),0,trQuestVarGet("bossposz")));
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitearkantosSFXcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitearkantosSFXcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitearkantosSFXpointer", trQuestVarGet("zdatalitearkantosSFXpointer")-1);
      if (0 > trQuestVarGet("zdatalitearkantosSFXpointer")) {
      trQuestVarSet("zdatalitearkantosSFXpointer", trQuestVarGet("zdatalitearkantosSFXcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitearkantosSFXpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitearkantosSFXindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitearkantosSFXcount") - 1;
      zdataremove = trQuestVarGet("zdatalitearkantosSFXpointer");
      trQuestVarSet("zdatalitearkantosSFXindex"+zdataremove, trQuestVarGet("zdatalitearkantosSFXindex"+zdatacount));
      trQuestVarSet("zdatalitearkantosSFXcount", zdatacount);
      trQuestVarSet("zdatalitearkantosSFXpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("arkantosSFX", trQuestVarGet("zdatalitearkantosSFXindex"+zdatapointer));
      UnitID = trQuestVarGet("arkantosSFX");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitTeleport(trVectorQuestVarGetX("arkantos"+zdatapointer+""),trVectorQuestVarGetY("arkantos"+zdatapointer+""),trVectorQuestVarGetZ("arkantos"+zdatapointer+""));
      }
      trSoundPlayFN("attackwarning.wav", "2", -1, "","");
      trEventFire(511);
      trQuestVarSet("omegaSpeed", trQuestVarGet("omegaSpeed") + 0.5);
      /**/ for(x=5; >0) {
      for(zsps=0; >1){}
      zsps = kbGetProtoUnitID("Wadjet Spit");
      trModifyProtounit("Wadjet Spit", x, 1, trQuestVarGet("omegaSpeed") - trQuestVarGet("p"+x+"p"+zsps+"f1f"));
      trQuestVarSet("p"+x+"p"+zsps+"f1f", trQuestVarGet("omegaSpeed"));
      /**/ }
      xsDisableRule("_omega_01");
      trEcho("Trigger disabling rule omega_01");
   }
}

rule _omega_02_fire
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 1500) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);

   bool bVar1 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0 && bVar1);
   if (tempExp)
   {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitearkantosSFXcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitearkantosSFXcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitearkantosSFXpointer", trQuestVarGet("zdatalitearkantosSFXpointer")-1);
      if (0 > trQuestVarGet("zdatalitearkantosSFXpointer")) {
      trQuestVarSet("zdatalitearkantosSFXpointer", trQuestVarGet("zdatalitearkantosSFXcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitearkantosSFXpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitearkantosSFXindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitearkantosSFXcount") - 1;
      zdataremove = trQuestVarGet("zdatalitearkantosSFXpointer");
      trQuestVarSet("zdatalitearkantosSFXindex"+zdataremove, trQuestVarGet("zdatalitearkantosSFXindex"+zdatacount));
      trQuestVarSet("zdatalitearkantosSFXcount", zdatacount);
      trQuestVarSet("zdatalitearkantosSFXpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("arkantosSFX", trQuestVarGet("zdatalitearkantosSFXindex"+zdatapointer));
      UnitID = trQuestVarGet("arkantosSFX");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitTeleport(60.14, 0.00, 5.21);
      }
      trQuestVarSet("omegaShoot", 18 + 1 * trGetWorldDifficulty() - trQuestVarGet("bossAmmo") * 2);
      trQuestVarSet("omegaangle", 0);
      trQuestVarSet("omegaangle1", 1.570796);
      trQuestVarSet("omegaangle2", 4.712389);
      trVectorQuestVarSet("omegaCenter", xsVectorSet(trQuestVarGet("bossposx"),1.5,trQuestVarGet("bossposz")));
      for(bb=trQuestVarGet("omegaCount"); >0) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projpointer")+1);
      if (trQuestVarGet("p1projpointer") > trQuestVarGet("p1projend")) {
      trQuestVarSet("p1projpointer", trQuestVarGet("p1projstart"));
      }
      trQuestVarSet("p1proj", trQuestVarGet("p1projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p1proj"));
      trVectorQuestVarSet("start",xsVectorSet(Math_sin(trQuestVarGet("omegaAngle")) * 8.0, 0, Math_cos(trQuestVarGet("omegaAngle")) * 8.0));
      trVectorQuestVarSet("start", trVectorQuestVarGet("start") + trVectorQuestVarGet("omegaCenter"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("start");b = trVectorQuestVarGetY("start");c = trVectorQuestVarGetZ("start");
      trVectorQuestVarSet("start",xsVectorSet(a,b,c));}
      trVectorQuestVarSet("dir", xsVectorSet(trQuestVarGet("omegaCenterx") - trQuestVarGet("startx"),0,trQuestVarGet("omegaCenterz") - trQuestVarGet("startz")));
      trUnitTeleport(trVectorQuestVarGetX("start"),trVectorQuestVarGetY("start"),trVectorQuestVarGetZ("start"));
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdatalitep1projshootcount");
      trQuestVarSet("zdatalitep1projshootindex"+zdatacount, trQuestVarGet("p1proj"));
      trQuestVarSet("zdatalitep1projshootcount", zdatacount+1);
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("start") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("start"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("start"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("start"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p1proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p1proj"+zdatacount+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      trQuestVarSet("omegaAngle", trQuestVarGet("omegaAngle") + trQuestVarGet("omegaAngleMod"));
      while (trQuestVarGet("omegaAngle") > (6.283185)) {
      trQuestVarSet("omegaAngle", trQuestVarGet("omegaAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("omegaAngle")) {
      trQuestVarSet("omegaAngle", trQuestVarGet("omegaAngle") + 6.283185);
      }
      }
      trEventFire(512);
      trSoundPlayFN("cinematics\35_out\strike.mp3", "3", -1, "","");
      trCameraShake(2.5, 0.25);
      trEventFire(513);
      xsDisableRule("_omega_02_fire");
      trEcho("Trigger disabling rule omega_02_fire");
   }
}

rule _omega_03_shoot
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep1projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep1projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep1projshootpointer", trQuestVarGet("zdatalitep1projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep1projshootpointer")) {
      trQuestVarSet("zdatalitep1projshootpointer", trQuestVarGet("zdatalitep1projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep1projshootpointer");
      if(kbGetUnitBaseTypeID(1*trQuestVarGet("zdatalitep1projshootindex"+zdatapointer)) == -1) {
      zdatacount = trQuestVarGet("zdatalitep1projshootcount") - 1;
      zdataremove = trQuestVarGet("zdatalitep1projshootpointer");
      trQuestVarSet("zdatalitep1projshootindex"+zdataremove, trQuestVarGet("zdatalitep1projshootindex"+zdatacount));
      trQuestVarSet("zdatalitep1projshootcount", zdatacount);
      trQuestVarSet("zdatalitep1projshootpointer", zdatapointer+1);
      continue;
      }
      trQuestVarSet("p1projshoot", trQuestVarGet("zdatalitep1projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p1projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p1proj"+zdatapointer+"target"),trVectorQuestVarGetY("p1proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p1proj"+zdatapointer+"target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojactivecount");
      trQuestVarSet("zdataliteprojactiveindex"+zdatacount, trQuestVarGet("p1projshoot"));
      trQuestVarSet("zdataliteprojactivecount", zdatacount+1);
      }
      trQuestVarSet("zdatalitep1projshootcount", 0);
      trQuestVarSet("zdatalitep1projshootpointer", 0);
      trQuestVarSet("p1projshoot", 0);
      trEventFire(514);
      xsDisableRule("_omega_03_shoot");
      trEcho("Trigger disabling rule omega_03_shoot");
   }
}

rule _omega_04_shake_end
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer2_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer2_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer2_CompTime")) >= 2500) {
   for(Accurate_Timer_QVdelaytimer2_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer2_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer2_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      /**/ trCameraCut(vector(50.0,130.0,50.0), vector(0.0,-1.000000,0.0), vector(0.0,0.0,1.0), vector(1.0,0.0,0.0));
      trCameraShake(1.0, 0.0);
      xsDisableRule("_omega_04_shake_end");
      trEcho("Trigger disabling rule omega_04_shake_end");
   }
}

rule _omega_05_s1
highFrequency
inactive
{
   bool bVar0 = (trQuestVarGet("bomb") == 0);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSetFromRand("mod", 0, trQuestVarGet("omegaAngleMod"), false);
      trQuestVarSet("omegaAngle", trQuestVarGet("omegaAngle") + trQuestVarGet("mod"));
      while (trQuestVarGet("omegaAngle") > (6.283185)) {
      trQuestVarSet("omegaAngle", trQuestVarGet("omegaAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("omegaAngle")) {
      trQuestVarSet("omegaAngle", trQuestVarGet("omegaAngle") + 6.283185);
      }
      trQuestVarSet("omegaAngle1", trQuestVarGet("omegaAngle1") + trQuestVarGet("mod"));
      while (trQuestVarGet("omegaAngle1") > (6.283185)) {
      trQuestVarSet("omegaAngle1", trQuestVarGet("omegaAngle1") - (6.283185));
      }
      while (0 > trQuestVarGet("omegaAngle1")) {
      trQuestVarSet("omegaAngle1", trQuestVarGet("omegaAngle1") + 6.283185);
      }
      trQuestVarSet("omegaAngle2", trQuestVarGet("omegaAngle2") + trQuestVarGet("mod"));
      while (trQuestVarGet("omegaAngle2") > (6.283185)) {
      trQuestVarSet("omegaAngle2", trQuestVarGet("omegaAngle2") - (6.283185));
      }
      while (0 > trQuestVarGet("omegaAngle2")) {
      trQuestVarSet("omegaAngle2", trQuestVarGet("omegaAngle2") + 6.283185);
      }
      /**/ for(x=trQuestVarGet("omegaCount")-1; >=0) {
      trVectorQuestVarSet("start",xsVectorSet(Math_sin(trQuestVarGet("omegaAngle")) * 8.0, 0, Math_cos(trQuestVarGet("omegaAngle")) * 8.0));
      trVectorQuestVarSet("start", trVectorQuestVarGet("start") + trVectorQuestVarGet("omegaCenter"));
      if(false) { for(a=0; >1){}for(b=0; >1){}for(c=0; >1){}
      a = trVectorQuestVarGetX("start");b = trVectorQuestVarGetY("start");c = trVectorQuestVarGetZ("start");
      trVectorQuestVarSet("start",xsVectorSet(a,b,c));}
      for(bb=1; >0) {
      trQuestVarSet("p23projpointer", trQuestVarGet("p23projpointer")+1);
      if (trQuestVarGet("p23projpointer") > trQuestVarGet("p23projend")) {
      trQuestVarSet("p23projpointer", trQuestVarGet("p23projstart"));
      }
      trQuestVarSet("p23proj", trQuestVarGet("p23projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p23proj"));
      trUnitTeleport(trVectorQuestVarGetX("start"),trVectorQuestVarGetY("start"),trVectorQuestVarGetZ("start"));
      trQuestVarCopy("zdatalitep1projshootindex"+x+"", "p23proj");
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("omegaAngle1")) * 1.0, 0, Math_cos(trQuestVarGet("omegaAngle1")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("start") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("start"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("start"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("start"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p1proj"+x+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p1proj"+x+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      for(bb=1; >0) {
      trQuestVarSet("p45projpointer", trQuestVarGet("p45projpointer")+1);
      if (trQuestVarGet("p45projpointer") > trQuestVarGet("p45projend")) {
      trQuestVarSet("p45projpointer", trQuestVarGet("p45projstart"));
      }
      trQuestVarSet("p45proj", trQuestVarGet("p45projpointer"));
      trUnitSelectClear();
      trUnitSelectByID(1*trQuestVarGet("p45proj"));
      trUnitTeleport(trVectorQuestVarGetX("start"),trVectorQuestVarGetY("start"),trVectorQuestVarGetZ("start"));
      trQuestVarCopy("zdatalitep1projshootindex"+(x+trQuestVarGet("omegaCount"))+"", "p45proj");
      trVectorQuestVarSet("dir",xsVectorSet(Math_sin(trQuestVarGet("omegaAngle2")) * 1.0, 0, Math_cos(trQuestVarGet("omegaAngle2")) * 1.0));
      trQuestVarSet("ziwrm", trVectorQuestVarGetZ("dir") / trVectorQuestVarGetX("dir"));
      trQuestVarSet("ziwrb", trVectorQuestVarGetZ("start") - trQuestVarGet("ziwrm") * trVectorQuestVarGetX("start"));
      if (0.0 > trVectorQuestVarGetX("dir")) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("minExit"), 0, trVectorQuestVarGetX("minExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      } else {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("maxExit"), 0, trVectorQuestVarGetX("maxExit") * trQuestVarGet("ziwrm") + trQuestVarGet("ziwrb")));
      }
      if (trVectorQuestVarGetZ("dir") > -0.01 && trVectorQuestVarGetZ("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs2", trVectorQuestVarGet("ziwrposs1"));
      } else if (0.0 > trVectorQuestVarGetZ("dir")) {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("minExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("minExit")));
      } else {
      trVectorQuestVarSet("ziwrposs2", xsVectorSet((trVectorQuestVarGetZ("maxExit") - trQuestVarGet("ziwrb")) / trQuestVarGet("ziwrm"), 0, trVectorQuestVarGetZ("maxExit")));
      }
      if (trVectorQuestVarGetX("dir") > -0.01 && trVectorQuestVarGetX("dir") < 0.01) {
      trVectorQuestVarSet("ziwrposs1", xsVectorSet(trVectorQuestVarGetX("start"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      trVectorQuestVarSet("ziwrposs2", xsVectorSet(trVectorQuestVarGetX("start"), 0, trVectorQuestVarGetZ("ziwrposs2")));
      }
      if (trVectorQuestVarGetZ("ziwrposs1") >= trVectorQuestVarGetZ("minExit") && trVectorQuestVarGetZ("ziwrposs1") <= trVectorQuestVarGetZ("maxExit")) {
      trVectorQuestVarSet("p1proj"+(x+trQuestVarGet("omegaCount"))+"target", trVectorQuestVarGet("ziwrposs1"));
      } else {
      trVectorQuestVarSet("p1proj"+(x+trQuestVarGet("omegaCount"))+"target", trVectorQuestVarGet("ziwrposs2"));
      }
      }
      trQuestVarSet("omegaAngle", trQuestVarGet("omegaAngle") + trQuestVarGet("omegaAngleMod"));
      while (trQuestVarGet("omegaAngle") > (6.283185)) {
      trQuestVarSet("omegaAngle", trQuestVarGet("omegaAngle") - (6.283185));
      }
      while (0 > trQuestVarGet("omegaAngle")) {
      trQuestVarSet("omegaAngle", trQuestVarGet("omegaAngle") + 6.283185);
      }
      trQuestVarSet("omegaAngle1", trQuestVarGet("omegaAngle1") + trQuestVarGet("omegaAngleMod"));
      while (trQuestVarGet("omegaAngle1") > (6.283185)) {
      trQuestVarSet("omegaAngle1", trQuestVarGet("omegaAngle1") - (6.283185));
      }
      while (0 > trQuestVarGet("omegaAngle1")) {
      trQuestVarSet("omegaAngle1", trQuestVarGet("omegaAngle1") + 6.283185);
      }
      trQuestVarSet("omegaAngle2", trQuestVarGet("omegaAngle2") + trQuestVarGet("omegaAngleMod"));
      while (trQuestVarGet("omegaAngle2") > (6.283185)) {
      trQuestVarSet("omegaAngle2", trQuestVarGet("omegaAngle2") - (6.283185));
      }
      while (0 > trQuestVarGet("omegaAngle2")) {
      trQuestVarSet("omegaAngle2", trQuestVarGet("omegaAngle2") + 6.283185);
      }
      /**/ }
      trEventFire(515);
      trQuestVarSet("zdatalitep1projshootcount", 2 * trQuestVarGet("omegaCount"));
      xsDisableRule("_omega_05_s1");
      trEcho("Trigger disabling rule omega_05_s1");
   }
}

rule _omega_05_s2
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelay_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelay_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelay_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelay_CompTime")) >= 1) {
   for(Accurate_Timer_QVshootdelay_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelay_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelay_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      for(zdatasearch=0; >1){}
      for(zdatapointer=0;>1){}
      for(zdatacount=0;>1){}
      for(zdataremove=0;>1){}
      for(UnitID=0;>1){}
      for(type=0;>1){}
      if (trQuestVarGet("zdatalitep1projshootcount") > (-1) && (-1) > 0) {
      zdatasearch = -1;
      } else {
      zdatasearch = trQuestVarGet("zdatalitep1projshootcount");
      }
      for(zdatasearching=zdatasearch; >0) {
      trQuestVarSet("zdatalitep1projshootpointer", trQuestVarGet("zdatalitep1projshootpointer")-1);
      if (0 > trQuestVarGet("zdatalitep1projshootpointer")) {
      trQuestVarSet("zdatalitep1projshootpointer", trQuestVarGet("zdatalitep1projshootcount")-1);
      }
      zdatapointer = trQuestVarGet("zdatalitep1projshootpointer");
      trQuestVarSet("p1projshoot", trQuestVarGet("zdatalitep1projshootindex"+zdatapointer));
      UnitID = trQuestVarGet("p1projshoot");
      type = kbGetUnitBaseTypeID(UnitID);
      trUnitSelectClear();
      trUnitSelectByID(UnitID);
      trUnitMoveToPoint(trVectorQuestVarGetX("p1proj"+zdatapointer+"target"),trVectorQuestVarGetY("p1proj"+zdatapointer+"target"),trVectorQuestVarGetZ("p1proj"+zdatapointer+"target"), -1, false);
      for(zdatacount=0;>1){}
      zdatacount = trQuestVarGet("zdataliteprojactivecount");
      trQuestVarSet("zdataliteprojactiveindex"+zdatacount, trQuestVarGet("p1projshoot"));
      trQuestVarSet("zdataliteprojactivecount", zdatacount+1);
      }
      trEventFire(516);
      trQuestVarSet("zdatalitep1projshootcount", 0);
      trQuestVarSet("zdatalitep1projshootpointer", 0);
      trQuestVarSet("p1projshoot", 0);
      xsDisableRule("_omega_05_s2");
      trEcho("Trigger disabling rule omega_05_s2");
   }
}

rule _omega_05_s3
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVshootdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVshootdelaytimer_CompTime")) >= 500) {
   for(Accurate_Timer_QVshootdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVshootdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVshootdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("omegaShoot", trQuestVarGet("omegaShoot") - 1);
      if(trQuestVarGet("omegaShoot") >= 1){
      trEventFire(514);
      } else {
      trEventFire(517);
      }
      xsDisableRule("_omega_05_s3");
      trEcho("Trigger disabling rule omega_05_s3");
   }
}

rule _omega_06_check
highFrequency
inactive
{
   if(trQuestVarGet("Accurate_Timer_QVdelaytimer_DidFirstPass") == 0) {
   trQuestVarSet("Accurate_Timer_QVdelaytimer_CompTime", trTimeMS());
   for(Accurate_Timer_QVdelaytimer_IsTrue=0;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 1);
   }
   if((trTimeMS() - trQuestVarGet("Accurate_Timer_QVdelaytimer_CompTime")) >= 2500 - 300 * trGetWorldDifficulty()) {
   for(Accurate_Timer_QVdelaytimer_IsTrue=1;>2) {}
   trQuestVarSet("Accurate_Timer_QVdelaytimer_DidFirstPass", 0);}
   bool bVar0 = (Accurate_Timer_QVdelaytimer_IsTrue == 1);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("bossAmmo", trQuestVarGet("bossAmmo") - 1);
      if(trQuestVarGet("bossAmmo") >= 1){
      trEventFire(510);
      trQuestVarSetFromRand("bossmovez", trQuestVarGet("playCenterz"), trQuestVarGet("maxPosz"), false);
      } else {
      trEventFire(518);
      }
      xsDisableRule("_omega_06_check");
      trEcho("Trigger disabling rule omega_06_check");
   }
}

rule _omega_07_end
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trQuestVarSet("omega", 0);
      trQuestVarSet("yeebspell", 0);
      if(trQuestVarGet("pilot") == 0){
      trEventFire(519);
      } else {
      trEventFire(520);
      }
      trQuestVarSet("boss", 0);
      trFadeOutMusic(3.0);
      xsDisableRule("_omega_07_end");
      trEcho("Trigger disabling rule omega_07_end");
   }
}

rule _Stage_D_35_A
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Oliver: Ace! I got her!","Zenophobia\SFA\Oliver");
      trEventFire(521);
      trQuestVarSet("play", 0);
      xsDisableRule("_Stage_D_35_A");
      trEcho("Trigger disabling rule Stage_D_35_A");
   }
}

rule _Stage_D_35_O
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 3);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Ace: Alright, Oliver! We got Molly!","Zenophobia\SFA\Ace");
      trEventFire(522);
      trQuestVarSet("play", 0);
      xsDisableRule("_Stage_D_35_O");
      trEcho("Trigger disabling rule Stage_D_35_O");
   }
}

rule _Stage_D_36_O
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Oliver: Nice!","Zenophobia\SFA\Oliver");
      trEventFire(523);
      xsDisableRule("_Stage_D_36_O");
      trEcho("Trigger disabling rule Stage_D_36_O");
   }
}

rule _Stage_D_36_A
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 4);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Ace: Alright!","Zenophobia\SFA\Ace");
      trEventFire(523);
      xsDisableRule("_Stage_D_36_A");
      trEcho("Trigger disabling rule Stage_D_36_A");
   }
}

rule _Stage_D_37
highFrequency
inactive
{
   bool bVar0 = ((trTime()-cActivationTime) >= 2);


   bool tempExp = (bVar0);
   if (tempExp)
   {
      trSoundPlayFN("default", "1", -1, "Yeebaagooon: What?!","Zenophobia\SFA\Yeebaagooon");
      trEventFire(-1);
      trUIFadeToColor(0,0,0,700,2000,true);
      xsDisableRule("_Stage_D_37");
      trEcho("Trigger disabling rule Stage_D_37");
   }
}

rule _Die_00_crush
highFrequency
inactive
{
   bool bVar0 = (trCountUnitsInArea("5906",6,"Siege Tower",3.0) >= 1);

   bool bVar1 = (trQuestVarGet("boss") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boss") == 1){
      trSoundPlayFN("cantdothat.wav", "1", -1, "","");
      trEventFire(21);
      }
      xsDisableRule("_Die_00_crush");
      trEcho("Trigger disabling rule Die_00_crush");
   }
}

rule _Die_00_nick
highFrequency
inactive
{
   bool bVar0 = (trCountUnitsInArea("5906",6,"Bireme",4.0) >= 1);

   bool bVar1 = (trQuestVarGet("boss") == 0);


   bool tempExp = (bVar0 || bVar1);
   if (tempExp)
   {
      if(trQuestVarGet("boss") == 1){
      trSoundPlayFN("cantdothat.wav", "1", -1, "","");
      trEventFire(21);
      }
      xsDisableRule("_Die_00_nick");
      trEcho("Trigger disabling rule Die_00_nick");
   }
}

rule _Die_00_yeeb
highFrequency
inactive
{
   bool bVar0 = (trCountUnitsInArea("5906",1,"Arkantos God",2.2) >= 1);

   bool bVar1 = (trQuestVarGet("boss") == 0);

   bool bVar2 = (trCountUnitsInArea("5906",3,"Invisible Wall",0.9) >= 1);

   bool bVar3 = (trCountUnitsInArea("5906",2,"Invisible Target",0.5) >= 1);


   bool tempExp = (bVar0 || bVar1 || bVar2 || bVar3);
   if (tempExp)
   {
      if(trQuestVarGet("boss") == 2){
      trSoundPlayFN("cantdothat.wav", "1", -1, "","");
      trEventFire(21);
      }
      xsDisableRule("_Die_00_yeeb");
      trEcho("Trigger disabling rule Die_00_yeeb");
   }
}

